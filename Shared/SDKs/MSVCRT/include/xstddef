#ifdef _STL70_
#include "_70_xstddef"
#define _CNTSIZ(iter) ptrdiff_t
#else

// xstddef standard header
#ifndef _XSTDDEF_
#define _XSTDDEF_
#ifndef _YVALS
 #include <yvals.h>
#endif
#include <cstddef>
#include <crtdefs.h>

#ifdef  _MSC_VER
#pragma pack(push,8)
#endif  /* _MSC_VER */
_STD_BEGIN
		// EXCEPTION MACROS

#if _HAS_EXCEPTIONS
#define _TRY_BEGIN	try {
#define _CATCH(x)	} catch (x) {
#define _CATCH_ALL	} catch (...) {
#define _CATCH_END	}

#define _RAISE(x)	throw x
#define _RERAISE	throw

#ifndef _THROWS
#define _THROWS(x)	throw (x)
#endif /* _THROWS */

#define _THROW0()	throw ()
#define _THROW1(x)	throw (...)

#define _THROW(x, y)	throw x(y)
#define _THROW_NCEE(x, y)	_THROW(x, y)

#else /* _HAS_EXCEPTIONS */
#define _TRY_BEGIN	{{
#define _CATCH(x)	} if (0) {
#define _CATCH_ALL	} if (0) {
#define _CATCH_END	}}

#define _RAISE(x)	std::_Throw(x)

#define _RERAISE

#ifndef _THROWS
#define _THROWS(x)
#endif /* _THROWS */

#define _THROW0()
#define _THROW1(x)
#define _THROW(x, y)	x(y)._Raise()
#define _THROW_NCEE(x, y)	_THROW(x, y)
#endif /* _HAS_EXCEPTIONS */

#ifndef _XSTD
#define _X_STD_BEGIN	_STD_BEGIN
#define _X_STD_END	_STD_END
#define _XSTD	std::/* LEAVE SPACE */
#endif /* _XSTD */

		// explicit KEYWORD
		// BITMASK MACROS
 #define _BITMASK(E, T)	typedef int T
 #define _BITMASK_OPS(T)
		// MISCELLANEOUS MACROS
#define _DESTRUCTOR(ty, ptr)	(ptr)->~ty()
#define _MESG(str)	str
#define _PROTECTED	public
 #define _TDEF(x)		= x
 #define _TDEF2(x, y)	= x, y
 #define _CNTSIZ(iter)	ptrdiff_t
 #define _TDEFP(x)
 #define _STCONS(ty, name, val)	enum {name = val}
		// TYPE DEFINITIONS
enum _Uninitialized {_Noinit};
		// FUNCTIONS
_CRTIMP2 void __cdecl _Nomemory();
_STD_END
#ifdef  _MSC_VER
#pragma pack(pop)
#endif  /* _MSC_VER */

#endif /* _XSTDDEF_ */

/*
 * Copyright (c) 1995 by P.J. Plauger.  ALL RIGHTS RESERVED. 
 * Consult your license regarding permissions and restrictions.
 */

#endif	// _STL70_
/* 88bf0570-3001-4e78-a5f2-be5765546192 */ 

