;; -*- scheme -*-

(include "gst-extrafuncs.defs")
(include "gst-types.defs")
(include "libs.defs")
(include "base.defs")

;; From ../gstreamer/gst/gst.h

(define-function init
  (c-name "gst_init")
  (return-type "none")
  (parameters
    '("int*" "argc")
    '("char**[]" "argv")
  )
)

(define-function init_check
  (c-name "gst_init_check")
  (return-type "gboolean")
  (parameters
    '("int*" "argc")
    '("char**[]" "argv")
    '("GError**" "err")
  )
)

(define-function is_initialized
  (c-name "gst_is_initialized")
  (return-type "gboolean")
)


(define-function init_get_option_group
  (c-name "gst_init_get_option_group")
  (return-type "GOptionGroup*")
)

(define-function deinit
  (c-name "gst_deinit")
  (return-type "none")
)

(define-function version
  (c-name "gst_version")
  (return-type "none")
  (parameters
    '("guint*" "major")
    '("guint*" "minor")
    '("guint*" "micro")
    '("guint*" "nano")
  )
)

(define-function version_string
  (c-name "gst_version_string")
  (return-type "gchar*")
)

(define-function segtrap_is_enabled
  (c-name "gst_segtrap_is_enabled")
  (return-type "gboolean")
)

(define-function segtrap_set_enabled
  (c-name "gst_segtrap_set_enabled")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-function registry_fork_is_enabled
  (c-name "gst_registry_fork_is_enabled")
  (return-type "gboolean")
)

(define-function registry_fork_set_enabled
  (c-name "gst_registry_fork_set_enabled")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-function update_registry
  (c-name "gst_update_registry")
  (return-type "gboolean")
)

(define-function get_gst_version
  (c-name "gst_get_gst_version")
  (return-type "none")
)

(define-function get_pygst_version
  (c-name "gst_get_pygst_version")
  (return-type "none")
)


;; From ../gstreamer/gst/gstbin.h

(define-function bin_get_type
  (c-name "gst_bin_get_type")
  (return-type "GType")
)

(define-function bin_new
  (c-name "gst_bin_new")
  (is-constructor-of "GstBin")
  (return-type "GstElement*")
  (properties
    '("name" (argname "name") (optional))
  )
)

(define-method add
  (of-object "GstBin")
  (c-name "gst_bin_add")
  (return-type "none")
  (parameters
    '("GstElement*" "element_1")
  )
  (varargs #t)
)

(define-method add_many
  (of-object "GstBin")
  (c-name "gst_bin_add_many")
  (return-type "none")
  (parameters
    '("GstElement*" "element_1")
  )
  (varargs #t)
)

(define-method remove
  (of-object "GstBin")
  (c-name "gst_bin_remove")
  (return-type "gboolean")
  (parameters
    '("GstElement*" "element_1")
  )
  (varargs #t)
)

(define-method remove_many
  (of-object "GstBin")
  (c-name "gst_bin_remove_many")
  (return-type "gboolean")
  (parameters
    '("GstElement*" "element_1")
  )
  (varargs #t)
)

(define-method get_by_name
  (of-object "GstBin")
  (c-name "gst_bin_get_by_name")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_by_name_recurse_up
  (of-object "GstBin")
  (c-name "gst_bin_get_by_name_recurse_up")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_by_interface
  (of-object "GstBin")
  (c-name "gst_bin_get_by_interface")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("GType" "iface_gtype")
  )
)

(define-method elements
  (of-object "GstBin")
  (c-name "gst_bin_iterate_elements")
  (return-type "GstIterator*")
)

(define-method sorted
  (of-object "GstBin")
  (c-name "gst_bin_iterate_sorted")
  (return-type "GstIterator*")
)

(define-method recurse
  (of-object "GstBin")
  (c-name "gst_bin_iterate_recurse")
  (return-type "GstIterator*")
)

(define-method sinks
  (of-object "GstBin")
  (c-name "gst_bin_iterate_sinks")
  (return-type "GstIterator*")
)

(define-method iterate_sources
  (of-object "GstBin")
  (c-name "gst_bin_iterate_sources")
  (return-type "GstIterator*")
)

(define-method iterate_all_by_interface
  (of-object "GstBin")
  (c-name "gst_bin_iterate_all_by_interface")
  (return-type "GstIterator*")
  (parameters
    '("GType" "iface_gtype")
  )
)

(define-method recalculate_latency
  (of-object "GstBin")
  (c-name "gst_bin_recalculate_latency")
  (return-type "gboolean")
)

(define-virtual add_element
 (of-object "GstBin")
 (return-type "gboolean")
 (parameters
  '("GstElement*" "element")
 )
)

(define-virtual remove_element
 (of-object "GstBin")
 (return-type "gboolean")
 (parameters
  '("GstElement*" "element")
 )
)

(define-virtual handle_message
  (of-object "GstBin")
  (return-type "none")
  (parameters
   '("GstMessage*" "message")
  )
)

;; From ../gstreamer/gst/gstbuffer.h

(define-function buffer_get_type
  (c-name "gst_buffer_get_type")
  (return-type "GType")
)

(define-function buffer_new
  (c-name "gst_buffer_new")
  (is-constructor-of "GstBuffer")
  (return-type "GstBuffer*")
)

(define-function buffer_new_and_alloc
  (c-name "gst_buffer_new_and_alloc")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("guint" "size")
  )
)

(define-function buffer_try_new_and_alloc
  (c-name "gst_buffer_try_new_and_alloc")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("guint" "size")
  )
)

(define-method is_metadata_writable
  (of-object "GstBuffer")
  (c-name "gst_buffer_is_metadata_writable")
  (return-type "gboolean")
)

(define-method make_metadata_writable
  (of-object "GstBuffer")
  (c-name "gst_buffer_make_metadata_writable")
  (return-type "GstBuffer*")
)

(define-method get_caps
  (of-object "GstBuffer")
  (c-name "gst_buffer_get_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method set_caps
  (of-object "GstBuffer")
  (c-name "gst_buffer_set_caps")
  (return-type "none")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method create_sub
  (of-object "GstBuffer")
  (c-name "gst_buffer_create_sub")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("guint" "offset")
    '("guint" "size")
  )
)

(define-method is_span_fast
  (of-object "GstBuffer")
  (c-name "gst_buffer_is_span_fast")
  (return-type "gboolean")
  (parameters
    '("GstBuffer*" "buf2")
  )
)

(define-method span
  (of-object "GstBuffer")
  (c-name "gst_buffer_span")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("guint32" "offset")
    '("GstBuffer*" "buf2")
    '("guint32" "len")
  )
)



;; From gstbufferlist.h

(define-function gst_buffer_list_get_type
  (c-name "gst_buffer_list_get_type")
  (return-type "GType")
)

(define-function gst_buffer_list_new
  (c-name "gst_buffer_list_new")
  (is-constructor-of "GstBufferList")
  (return-type "GstBufferList*")
)

(define-method foreach
  (of-object "GstBufferList")
  (c-name "gst_buffer_list_foreach")
  (return-type "none")
  (parameters
    '("GstBufferListFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method get
  (of-object "GstBufferList")
  (c-name "gst_buffer_list_get")
  (return-type "GstBuffer*")
  (parameters
    '("guint" "group")
    '("guint" "idx")
  )
)

(define-method iterate
  (of-object "GstBufferList")
  (c-name "gst_buffer_list_iterate")
  (return-type "GstBufferListIterator*")
)

(define-method free
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_free")
  (return-type "none")
)

(define-method n_buffers
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_n_buffers")
  (return-type "guint")
)

(define-method next
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_next")
  (return-type "GstBuffer*")
)

(define-method next_group
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_next_group")
  (return-type "gboolean")
)

(define-method add
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_add")
  (return-type "none")
  (parameters
    '("GstBuffer*" "buffer")
  )
)

(define-method add_list
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_add_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-method add_group
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_add_group")
  (return-type "none")
)

(define-method remove
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_remove")
  (return-type "none")
)

(define-method steal
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_steal")
  (return-type "GstBuffer*")
)

(define-method take
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_take")
  (return-type "none")
  (parameters
    '("GstBuffer*" "buffer")
  )
)

(define-method do
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_do")
  (return-type "GstBuffer*")
  (parameters
    '("GstBufferListDoFunction" "do_func")
    '("gpointer" "user_data")
  )
)

(define-method merge_group
  (of-object "GstBufferListIterator")
  (c-name "gst_buffer_list_iterator_merge_group")
  (return-type "GstBuffer*")
)



;; From ../gstreamer/gst/gstbus.h

(define-function bus_get_type
  (c-name "gst_bus_get_type")
  (return-type "GType")
)

(define-function bus_new
  (c-name "gst_bus_new")
  (is-constructor-of "GstBus")
  (return-type "GstBus*")
)

(define-method post
  (of-object "GstBus")
  (c-name "gst_bus_post")
  (return-type "gboolean")
  (parameters
    '("GstMessage*" "message" (keep-refcount))
  )
)

(define-method have_pending
  (of-object "GstBus")
  (c-name "gst_bus_have_pending")
  (return-type "gboolean")
)

(define-method peek
  (of-object "GstBus")
  (c-name "gst_bus_peek")
  (return-type "GstMessage*")
  (caller-owns-return #t)
)

(define-method pop
  (of-object "GstBus")
  (c-name "gst_bus_pop")
  (return-type "GstMessage*")
  (caller-owns-return #t)
)

(define-method pop_filtered
  (of-object "GstBus")
  (c-name "gst_bus_pop_filtered")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
   '("GstMessageType" "types")
  )
)

(define-method timed_pop
  (of-object "GstBus")
  (c-name "gst_bus_timed_pop")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstClockTime" "timeout")
  )
)

(define-method timed_pop_filtered
  (of-object "GstBus")
  (c-name "gst_bus_timed_pop_filtered")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstClockTime" "timeout")
    '("GstMessageType" "types")
  )
)

(define-method set_flushing
  (of-object "GstBus")
  (c-name "gst_bus_set_flushing")
  (return-type "none")
  (parameters
    '("gboolean" "flushing")
  )
)

(define-method set_sync_handler
  (of-object "GstBus")
  (c-name "gst_bus_set_sync_handler")
  (return-type "none")
  (parameters
    '("GstBusSyncHandler" "func")
    '("gpointer" "data")
  )
)

(define-method create_watch
  (of-object "GstBus")
  (c-name "gst_bus_create_watch")
  (return-type "GSource*")
)

(define-method add_watch_full
  (of-object "GstBus")
  (c-name "gst_bus_add_watch_full")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("GstBusFunc" "func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "notify")
  )
)

(define-method add_watch
  (of-object "GstBus")
  (c-name "gst_bus_add_watch")
  (return-type "guint")
  (parameters
    '("GstBusFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method poll
  (of-object "GstBus")
  (c-name "gst_bus_poll")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstMessageType" "events")
    '("GstClockTimeDiff" "timeout")
  )
)

(define-method async_signal_func
  (of-object "GstBus")
  (c-name "gst_bus_async_signal_func")
  (return-type "gboolean")
  (parameters
    '("GstMessage*" "message")
    '("gpointer" "data")
  )
)

(define-method sync_signal_handler
  (of-object "GstBus")
  (c-name "gst_bus_sync_signal_handler")
  (return-type "GstBusSyncReply")
  (parameters
    '("GstMessage*" "message")
    '("gpointer" "data")
  )
)

(define-method add_signal_watch
  (of-object "GstBus")
  (c-name "gst_bus_add_signal_watch")
  (return-type "none")
)

(define-method add_signal_watch_full
  (of-object "GstBus")
  (c-name "gst_bus_add_signal_watch_full")
  (return-type "none")
  (parameters
    '("gint" "priority")
  )
)

(define-method remove_signal_watch
  (of-object "GstBus")
  (c-name "gst_bus_remove_signal_watch")
  (return-type "none")
)


(define-method enable_sync_message_emission
  (of-object "GstBus")
  (c-name "gst_bus_enable_sync_message_emission")
  (return-type "none")
)

(define-method disable_sync_message_emission
  (of-object "GstBus")
  (c-name "gst_bus_disable_sync_message_emission")
  (return-type "none")
)


;; From ../gstreamer/gst/gstcaps.h

(define-function caps_get_type
  (c-name "gst_caps_get_type")
  (return-type "GType")
)

(define-function caps_new_empty
  (is-constructor-of "GstCaps")
  (c-name "gst_caps_new_empty")
  (return-type "GstCaps*")
)

(define-function caps_new_any
  (c-name "gst_caps_new_any")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-function caps_new_simple
  (c-name "gst_caps_new_simple")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("const-char*" "media_type")
    '("const-char*" "fieldname")
  )
  (varargs #t)
)

(define-function caps_new_full
  (c-name "gst_caps_new_full")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("GstStructure*" "struct1")
  )
  (varargs #t)
)

(define-function caps_new_full_valist
  (c-name "gst_caps_new_full_valist")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("GstStructure*" "structure")
    '("va_list" "var_args")
  )
)

(define-method ref
  (of-object "GstCaps")
  (c-name "gst_caps_ref")
  (return-type "GstCaps*")
)

(define-method copy
  (of-object "GstCaps")
  (c-name "gst_caps_copy")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method make_writable
  (of-object "GstCaps")
  (c-name "gst_caps_make_writable")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method unref
  (of-object "GstCaps")
  (c-name "gst_caps_unref")
  (return-type "none")
)

(define-method get
  (of-object "GstStaticCaps")
  (c-name "gst_static_caps_get")
  (return-type "GstCaps*")
)

(define-method append
  (of-object "GstCaps")
  (c-name "gst_caps_append")
  (return-type "none")
  (parameters
    '("GstCaps*" "caps2")
  )
)

(define-method append_structure
  (of-object "GstCaps")
  (c-name "gst_caps_append_structure")
  (return-type "none")
  (parameters
    '("GstStructure*" "structure")
  )
)

(define-method get_size
  (of-object "GstCaps")
  (c-name "gst_caps_get_size")
  (return-type "guint")
)

(define-method get_structure
  (of-object "GstCaps")
  (c-name "gst_caps_get_structure")
  (return-type "GstStructure*")
  (parameters
    '("guint" "index")
  )
)

(define-method steal_structure
  (of-object "GstCaps")
  (c-name "gst_caps_steal_structure")
  (return-type "GstStructure*")
  (caller-owns-return #t)
  (parameters
    '("guint" "index")
  )
)

(define-method copy_nth
  (of-object "GstCaps")
  (c-name "gst_caps_copy_nth")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("guint" "nth")
  )
)

(define-method truncate
  (of-object "GstCaps")
  (c-name "gst_caps_truncate")
  (return-type "none")
)

(define-method set_value
  (of-object "GstCaps")
  (c-name "gst_caps_set_value")
  (return-type "none")
  (parameters
    '("const-char*" "field")
    '("const-GValue*" "value")
  )
)

(define-method set_simple
  (of-object "GstCaps")
  (c-name "gst_caps_set_simple")
  (return-type "none")
  (parameters
    '("const-char*" "field")
  )
  (varargs #t)
)

(define-method set_simple_valist
  (of-object "GstCaps")
  (c-name "gst_caps_set_simple_valist")
  (return-type "none")
  (parameters
    '("const-char*" "field")
    '("va_list" "varargs")
  )
)

(define-method is_any
  (of-object "GstCaps")
  (c-name "gst_caps_is_any")
  (return-type "gboolean")
)

(define-method is_empty
  (of-object "GstCaps")
  (c-name "gst_caps_is_empty")
  (return-type "gboolean")
)

(define-method is_fixed
  (of-object "GstCaps")
  (c-name "gst_caps_is_fixed")
  (return-type "gboolean")
)

(define-method is_always_compatible
  (of-object "GstCaps")
  (c-name "gst_caps_is_always_compatible")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "caps2")
  )
)

(define-method is_subset
  (of-object "GstCaps")
  (c-name "gst_caps_is_subset")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "superset")
  )
)

(define-method is_equal
  (of-object "GstCaps")
  (c-name "gst_caps_is_equal")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "caps2")
  )
)

(define-method can_intersect
  (of-object "GstCaps")
  (c-name "gst_caps_can_intersect")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "caps2")
  )
)

(define-method intersect
  (of-object "GstCaps")
  (c-name "gst_caps_intersect")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("const-GstCaps*" "caps2")
  )
)

(define-method subtract
  (of-object "GstCaps")
  (c-name "gst_caps_subtract")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("const-GstCaps*" "subtrahend")
  )
)

(define-method union
  (of-object "GstCaps")
  (c-name "gst_caps_union")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("const-GstCaps*" "caps2")
  )
)

(define-method normalize
  (of-object "GstCaps")
  (c-name "gst_caps_normalize")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method do_simplify
  (of-object "GstCaps")
  (c-name "gst_caps_do_simplify")
  (return-type "gboolean")
)

(define-method save_thyself
  (of-object "GstCaps")
  (c-name "gst_caps_save_thyself")
  (return-type "xmlNodePtr")
  (parameters
    '("xmlNodePtr" "parent")
  )
)

(define-method merge
  (of-object "GstCaps")
  (c-name "gst_caps_merge")
  (return-type "none")
  (parameters
   '("GstCaps*" "caps2")
  )
)

(define-method merge_structure
  (of-object "GstCaps")
  (c-name "gst_caps_merge_structure")
  (return-type "none")
  (parameters
   '("GstStructure*" "structure")
  )
)

(define-function caps_load_thyself
  (c-name "gst_caps_load_thyself")
  (return-type "GstCaps*")
  (parameters
    '("xmlNodePtr" "parent")
  )
)

(define-function caps_replace
  (c-name "gst_caps_replace")
  (return-type "none")
  (parameters
    '("GstCaps**" "caps")
    '("GstCaps*" "newcaps")
  )
)

(define-method to_string
  (of-object "GstCaps")
  (c-name "gst_caps_to_string")
  (return-type "gchar*")
)

(define-function caps_from_string
  (c-name "gst_caps_from_string")
  (return-type "GstCaps*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "string")
  )
)



;; From ../gstreamer/gst/gstclock.h

(define-function clock_get_type
  (c-name "gst_clock_get_type")
  (return-type "GType")
)

(define-method set_resolution
  (of-object "GstClock")
  (c-name "gst_clock_set_resolution")
  (return-type "GstClockTime")
  (parameters
    '("GstClockTime" "resolution")
  )
)

(define-method get_resolution
  (of-object "GstClock")
  (c-name "gst_clock_get_resolution")
  (return-type "GstClockTime")
)

(define-method get_time
  (of-object "GstClock")
  (c-name "gst_clock_get_time")
  (return-type "GstClockTime")
)

(define-method set_calibration
  (of-object "GstClock")
  (c-name "gst_clock_set_calibration")
  (return-type "none")
  (parameters
    '("GstClockTime" "internal")
    '("GstClockTime" "external")
    '("GstClockTime" "rate_num")
    '("GstClockTime" "rate_denom")
  )
)

(define-method get_calibration
  (of-object "GstClock")
  (c-name "gst_clock_get_calibration")
  (return-type "none")
  (parameters
    '("GstClockTime*" "internal")
    '("GstClockTime*" "external")
    '("GstClockTime*" "rate_num")
    '("GstClockTime*" "rate_denom")
  )
)

(define-method set_master
  (of-object "GstClock")
  (c-name "gst_clock_set_master")
  (return-type "gboolean")
  (parameters
    '("GstClock*" "master")
  )
)

(define-method get_master
  (of-object "GstClock")
  (c-name "gst_clock_get_master")
  (return-type "GstClock*")
)

(define-method add_observation
  (of-object "GstClock")
  (c-name "gst_clock_add_observation")
  (return-type "gboolean")
  (parameters
    '("GstClockTime" "slave")
    '("GstClockTime" "master")
    '("gdouble*" "r_squared")
  )
)

(define-method get_internal_time
  (of-object "GstClock")
  (c-name "gst_clock_get_internal_time")
  (return-type "GstClockTime")
)

(define-method adjust_unlocked
  (of-object "GstClock")
  (c-name "gst_clock_adjust_unlocked")
  (return-type "GstClockTime")
  (parameters
    '("GstClockTime" "internal")
  )
)

(define-method unadjust_unlocked
  (of-object "GstClock")
  (c-name "gst_clock_unadjust_unlocked")
  (return-type "GstClockTime")
  (parameters
    '("GstClockTime" "external")
  )
)

(define-method new_single_shot_id
  (of-object "GstClock")
  (c-name "gst_clock_new_single_shot_id")
  (return-type "GstClockID")
  (parameters
    '("GstClockTime" "time")
  )
)

(define-method new_periodic_id
  (of-object "GstClock")
  (c-name "gst_clock_new_periodic_id")
  (return-type "GstClockID")
  (parameters
    '("GstClockTime" "start_time")
    '("GstClockTime" "interval")
  )
)

(define-method ref
  (of-object "GstClockID")
  (c-name "gst_clock_id_ref")
  (return-type "GstClockID")
)

(define-method unref
  (of-object "GstClockID")
  (c-name "gst_clock_id_unref")
  (return-type "none")
)

(define-function clock_id_compare_func
  (c-name "gst_clock_id_compare_func")
  (return-type "gint")
  (parameters
    '("gconstpointer" "id1")
    '("gconstpointer" "id2")
  )
)

(define-method get_time
  (of-object "GstClockID")
  (c-name "gst_clock_id_get_time")
  (return-type "GstClockTime")
)

(define-method wait
  (of-object "GstClockID")
  (c-name "gst_clock_id_wait")
  (return-type "GstClockReturn")
  (parameters
    '("GstClockTimeDiff*" "jitter")
  )
)

(define-method wait_async
  (of-object "GstClockID")
  (c-name "gst_clock_id_wait_async")
  (return-type "GstClockReturn")
  (parameters
    '("GstClockCallback" "func")
    '("gpointer" "user_data")
  )
)

(define-method unschedule
  (of-object "GstClockID")
  (c-name "gst_clock_id_unschedule")
  (return-type "none")
)

(define-virtual change_resolution
  (of-object "GstClock")
  (return-type "GstClockTime")
  (parameters
   '("GstClockTime" "old_resolution")
   '("GstClockTime" "new_resolution")
  )
)

(define-virtual get_resolution
  (of-object "GstClock")
  (return-type "GstClockTime")
)

(define-virtual get_internal_time
  (of-object "GstClock")
  (return-type "GstClockTime")
)

(define-virtual wait
  (of-object "GstClock")
  (return-type "GstClockReturn")
  (parameters
   '("GstClockEntry*" "entry")
  )
)

(define-virtual wait_jitter
  (of-object "GstClock")
  (return-type "GstClockReturn")
  (parameters
   '("GstClockEntry*" "entry")
   '("GstClockTimeDiff*" "jitter")
  )
)

(define-virtual wait_async
  (of-object "GstClock")
  (return-type "GstClockReturn")
  (parameters
   '("GstClockEntry*" "entry")
  )
)

(define-virtual unschedule
  (of-object "GstClock")
  (return-type "none")
  (parameters
   '("GstClockEntry" "entry")
  )
)

;; From gstdatetime.h

(define-method get_year
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_year")
  (return-type "gint")
)

(define-method get_month
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_month")
  (return-type "gint")
)

(define-method get_day
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_day")
  (return-type "gint")
)

(define-method get_hour
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_hour")
  (return-type "gint")
)

(define-method get_minute
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_minute")
  (return-type "gint")
)

(define-method get_second
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_second")
  (return-type "gint")
)

(define-method get_microsecond
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_microsecond")
  (return-type "gint")
)

(define-method get_time_zone_offset
  (of-object "GstDateTime")
  (c-name "gst_date_time_get_time_zone_offset")
  (return-type "gfloat")
)

(define-function date_time_new_from_unix_epoch_local_time
  (c-name "gst_date_time_new_from_unix_epoch_local_time")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
  (parameters
    '("gint64" "secs")
  )
)

(define-function date_time_new_from_unix_epoch_utc
  (c-name "gst_date_time_new_from_unix_epoch_utc")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
  (parameters
    '("gint64" "secs")
  )
)

(define-function date_time_new_local_time
  (c-name "gst_date_time_new_local_time")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
  (parameters
    '("gint" "year")
    '("gint" "month")
    '("gint" "day")
    '("gint" "hour")
    '("gint" "minute")
    '("gdouble" "seconds")
  )
)

(define-function date_time_new
  (c-name "gst_date_time_new")
  (is-constructor-of "GstDateTime")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
  (parameters
    '("gfloat" "tzoffset")
    '("gint" "year")
    '("gint" "month")
    '("gint" "day")
    '("gint" "hour")
    '("gint" "minute")
    '("gdouble" "seconds")
  )
)

(define-function date_time_new_now_local_time
  (c-name "gst_date_time_new_now_local_time")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
)

(define-function date_time_new_now_utc
  (c-name "gst_date_time_new_now_utc")
  (return-type "GstDateTime*")
  (caller-owns-return #t)
)

(define-method ref
  (of-object "GstDateTime")
  (c-name "gst_date_time_ref")
  (return-type "GstDateTime*")
)

(define-method unref
  (of-object "GstDateTime")
  (c-name "gst_date_time_unref")
  (return-type "none")
)




;; From ../gstreamer/gst/gstdebugutils.h

(define-function DEBUG_BIN_TO_DOT_FILE
  (c-name "GST_DEBUG_BIN_TO_DOT_FILE")
  (return-type "none")
  (parameters
   '("GstBin*" "bin")
   '("GstDebugGraphDetails" "details")
   '("const-gchar*" "filename")
  )
)

(define-function DEBUG_BIN_TO_DOT_FILE_WITH_TS
  (c-name "GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS")
  (return-type "none")
  (parameters
   '("GstBin*" "bin")
   '("GstDebugGraphDetails" "details")
   '("const-gchar*" "filename")
  )
)

;; From ../gstreamer/gst/gstelement.h

(define-method add_pad_template
  (of-object "GstElementClass")
  (c-name "gst_element_class_add_pad_template")
  (return-type "none")
  (parameters
    '("GstPadTemplate*" "templ")
  )
)

; 9 August 05 - changed to be a method on elements and not classes - wingo
(define-method get_pad_template
  (of-object "GstElement")
  (c-name "gst_element_get_pad_template")
  (return-type "GstPadTemplate*")
  (parameters
    '("const-gchar*" "name")
  )
)

; 14 Jun 06 - Changed to be a method on elements and not classes - bilboed
(define-method get_pad_template_list
  (of-object "GstElement")
  (c-name "gst_element_get_pad_template_list")
  (return-type "GList*")
)

(define-method set_documentation_uri
  (of-object "GstElementClass")
  (c-name "gst_element_class_set_documentation_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method set_icon_name
  (of-object "GstElementClass")
  (c-name "gst_element_class_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_details
  (of-object "GstElementClass")
  (c-name "gst_element_class_set_details")
  (return-type "none")
  (parameters
    '("const-GstElementDetails*" "details")
  )
)

(define-method set_details_simple
  (of-object "GstElementClass")
  (c-name "gst_element_class_set_details_simple")
  (return-type "none")
  (parameters
    '("const-gchar*" "longname")
    '("const-gchar*" "classification")
    '("const-gchar*" "description")
    '("const-gchar*" "author")
  )
)

(define-function element_get_type
  (c-name "gst_element_get_type")
  (return-type "GType")
)

(define-method requires_clock
  (of-object "GstElement")
  (c-name "gst_element_requires_clock")
  (return-type "gboolean")
)

(define-method provides_clock
  (of-object "GstElement")
  (c-name "gst_element_provides_clock")
  (return-type "gboolean")
)

(define-method provide_clock
  (of-object "GstElement")
  (c-name "gst_element_provide_clock")
  (return-type "GstClock*")
  (caller-owns-return #t)
)

(define-method set_clock
  (of-object "GstElement")
  (c-name "gst_element_set_clock")
  (return-type "gboolean")
  (parameters
    '("GstClock*" "clock")
  )
)

(define-method set_base_time
  (of-object "GstElement")
  (c-name "gst_element_set_base_time")
  (return-type "none")
  (parameters
    '("GstClockTime" "time")
  )
)

(define-method get_base_time
  (of-object "GstElement")
  (c-name "gst_element_get_base_time")
  (return-type "GstClockTime")
)

(define-method set_start_time
  (of-object "GstElement")
  (c-name "gst_element_set_start_time")
  (return-type "none")
  (parameters
    '("GstClockTime" "time")
  )
)

(define-method get_start_time
  (of-object "GstElement")
  (c-name "gst_element_get_start_time")
  (return-type "GstClockTime")
)

(define-method is_indexable
  (of-object "GstElement")
  (c-name "gst_element_is_indexable")
  (return-type "gboolean")
)

(define-method set_index
  (of-object "GstElement")
  (c-name "gst_element_set_index")
  (return-type "none")
  (parameters
    '("GstIndex*" "index")
  )
)

(define-method get_index
  (of-object "GstElement")
  (c-name "gst_element_get_index")
  (return-type "GstIndex*")
  (caller-owns-return #t)
)

(define-method set_bus
  (of-object "GstElement")
  (c-name "gst_element_set_bus")
  (return-type "none")
  (parameters
    '("GstBus*" "bus")
  )
)

(define-method get_bus
  (of-object "GstElement")
  (c-name "gst_element_get_bus")
  (return-type "GstBus*")
  (caller-owns-return #t)
)

(define-method get_clock
  (of-object "GstElement")
  (c-name "gst_element_get_clock")
  (return-type "GstClock*")
  (caller-owns-return #t)
)

(define-method add_pad
  (of-object "GstElement")
  (c-name "gst_element_add_pad")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "pad")
  )
)

(define-method remove_pad
  (of-object "GstElement")
  (c-name "gst_element_remove_pad")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "pad")
  )
)

(define-method no_more_pads
  (of-object "GstElement")
  (c-name "gst_element_no_more_pads")
  (return-type "none")
)

(define-method get_pad
  (of-object "GstElement")
  (c-name "gst_element_get_pad")
  (return-type "GstPad*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_static_pad
  (of-object "GstElement")
  (c-name "gst_element_get_static_pad")
  (return-type "GstPad*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_request_pad
  (of-object "GstElement")
  (c-name "gst_element_get_request_pad")
  (return-type "GstPad*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method release_request_pad
  (of-object "GstElement")
  (c-name "gst_element_release_request_pad")
  (return-type "none")
  (parameters
    '("GstPad*" "pad")
  )
)

(define-method pads
  (of-object "GstElement")
  (c-name "gst_element_iterate_pads")
  (return-type "GstIterator*")
)

(define-method src_pads
  (of-object "GstElement")
  (c-name "gst_element_iterate_src_pads")
  (return-type "GstIterator*")
)

(define-method sink_pads
  (of-object "GstElement")
  (c-name "gst_element_iterate_sink_pads")
  (return-type "GstIterator*")
)

(define-method send_event
  (of-object "GstElement")
  (c-name "gst_element_send_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event" (keep-refcount))
  )
)

(define-method seek
  (of-object "GstElement")
  (c-name "gst_element_seek")
  (return-type "gboolean")
  (parameters
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("GstSeekFlags" "flags")
    '("GstSeekType" "cur_type")
    '("gint64" "cur")
    '("GstSeekType" "stop_type")
    '("gint64" "stop")
  )
)

(define-method get_query_types
  (of-object "GstElement")
  (c-name "gst_element_get_query_types")
  (return-type "const-GstQueryType*")
)

(define-method query
  (of-object "GstElement")
  (c-name "gst_element_query")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-method post_message
  (of-object "GstElement")
  (c-name "gst_element_post_message")
  (return-type "gboolean")
  (parameters
    '("GstMessage*" "message" (keep-refcount))
  )
)

(define-method message_full
  (of-object "GstElement")
  (c-name "gst_element_message_full")
  (return-type "none")
  (parameters
    '("GstMessageType" "type")
    '("GQuark" "domain")
    '("gint" "code")
    '("gchar*" "text")
    '("gchar*" "debug")
    '("const-gchar*" "file")
    '("const-gchar*" "function")
    '("gint" "line")
  )
)

(define-method is_locked_state
  (of-object "GstElement")
  (c-name "gst_element_is_locked_state")
  (return-type "gboolean")
)

(define-method set_locked_state
  (of-object "GstElement")
  (c-name "gst_element_set_locked_state")
  (return-type "gboolean")
  (parameters
    '("gboolean" "locked_state")
  )
)

(define-method sync_state_with_parent
  (of-object "GstElement")
  (c-name "gst_element_sync_state_with_parent")
  (return-type "gboolean")
)

(define-method get_state
  (of-object "GstElement")
  (c-name "gst_element_get_state")
  (return-type "GstStateChangeReturn")
  (parameters
    '("GstState*" "state")
    '("GstState*" "pending")
    '("GstClockTime" "timeout")
  )
)

(define-method set_state
  (of-object "GstElement")
  (c-name "gst_element_set_state")
  (return-type "GstStateChangeReturn")
  (parameters
    '("GstState" "state")
  )
)

(define-method abort_state
  (of-object "GstElement")
  (c-name "gst_element_abort_state")
  (return-type "none")
)

(define-method change_state
  (of-object "GstElement")
  (c-name "gst_element_change_state")
  (return-type "GstStateChangeReturn")
  (parameters
    '("GstStateChange" "transition")
  )
)

(define-method continue_state
  (of-object "GstElement")
  (c-name "gst_element_continue_state")
  (return-type "GstStateChangeReturn")
  (parameters
    '("GstStateChangeReturn" "retstate")
  )
)

(define-method lost_state
  (of-object "GstElement")
  (c-name "gst_element_lost_state")
  (return-type "none")
)

(define-method lost_state_full
  (of-object "GstElement")
  (c-name "gst_element_lost_state_full")
  (return-type "none")
  (parameters
    '("gboolean" "new_base_time")
  )
)

(define-method get_factory
  (of-object "GstElement")
  (c-name "gst_element_get_factory")
  (return-type "GstElementFactory*")
)

(define-virtual send_event
  (of-object "GstElement")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
  )
)

(define-virtual get_query_types
  (of-object "GstElement")
  (return-type "const-GstQueryType*")
)

(define-virtual query
  (of-object "GstElement")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-virtual get_state
  (of-object "GstElement")
  (return-type "GstStateChangeReturn")
  (parameters
   '("GstState*" "state")
   '("GstState*" "pending")
   '("GTimeVal*" "timeout")
  )
)

(define-virtual change_state
  (of-object "GstElement")
  (return-type "GstStateChangeReturn")
  (parameters
    '("GstStateChange" "transition")
  )
)

(define-virtual request_new_pad
  (of-object "GstElement")
  (return-type "GstPad*")
  (parameters
    '("GstPadTemplate*" "templ")
    '("const-gchar*" "name")
  )
)

(define-virtual release_pad
  (of-object "GstElement")
  (return-type "none")
  (parameters
    '("GstPad*" "pad")
  )
)

(define-virtual provide_clock
  (of-object "GstElement")
  (return-type "GstClock*")
)

(define-virtual set_clock
  (of-object "GstElement")
  (return-type "gboolean")
  (parameters
    '("GstClock*" "clock")
  )
)

(define-virtual get_index
  (of-object "GstElement")
  (return-type "GstIndex*")
)

(define-virtual set_index
  (of-object "GstElement")
  (return-type "none")
  (parameters
    '("GstIndex*" "index")
  )
)

(define-virtual set_bus
  (of-object "GstElement")
  (return-type "none")
  (parameters
   '("GstBus*" "bus")
  )
)

;; From ../gstreamer/gst/gstelementfactory.h

(define-function element_factory_get_type
  (c-name "gst_element_factory_get_type")
  (return-type "GType")
)

(define-function element_factory_find
  (c-name "gst_element_factory_find")
  (return-type "GstElementFactory*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_element_type
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_element_type")
  (return-type "GType")
)

(define-method get_longname
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_longname")
  (return-type "const-gchar*")
)

(define-method get_klass
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_klass")
  (return-type "const-gchar*")
)

(define-method get_description
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_description")
  (return-type "const-gchar*")
)

(define-method get_author
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_author")
  (return-type "const-gchar*")
)

(define-method get_documentation_uri
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_documentation_uri")
  (return-type "const-gchar*")
)

(define-method get_icon_name
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_icon_name")
  (return-type "const-gchar*")
)

(define-method get_num_pad_templates
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_num_pad_templates")
  (return-type "guint")
)

(define-method get_static_pad_templates
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_static_pad_templates")
  (return-type "const-GList*")
)

(define-method get_uri_type
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_uri_type")
  (return-type "GstURIType")
)

(define-method get_uri_protocols
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_get_uri_protocols")
  (return-type "GStrv")
)

(define-method has_interface
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_has_interface")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "interfacename")
  )
)

(define-method create
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_create")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name" (null-ok) (default "NULL"))
  )
)

(define-function element_factory_make
  (c-name "gst_element_factory_make")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "factoryname")
    '("const-gchar*" "name" (null-ok) (default "NULL"))
  )
)

(define-function element_register
  (c-name "gst_element_register")
  (return-type "gboolean")
  (parameters
    '("GstPlugin*" "plugin")
    '("const-gchar*" "name")
    '("guint" "rank")
    '("GType" "type")
  )
)
(define-method list_is_type
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_list_is_type")
  (return-type "gboolean")
  (parameters
    '("GstElementFactoryListType" "type")
  )
)

(define-function element_factory_list_get_elements
  (c-name "gst_element_factory_list_get_elements")
  (return-type "GList*")
  (parameters
    '("GstElementFactoryListType" "type")
    '("GstRank" "minrank")
  )
)

(define-function element_factory_list_filter
  (c-name "gst_element_factory_list_filter")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("const-GstCaps*" "caps")
    '("GstPadDirection" "direction")
    '("gboolean" "subsetonly")
  )
)

;; From ../gstreamer/gst/gstenumtypes.h

(define-function object_flags_get_type
  (c-name "gst_object_flags_get_type")
  (return-type "GType")
)

(define-function bin_flags_get_type
  (c-name "gst_bin_flags_get_type")
  (return-type "GType")
)

(define-function buffer_flag_get_type
  (c-name "gst_buffer_flag_get_type")
  (return-type "GType")
)

(define-function gst_buffer_copy_flags_get_type
  (c-name "gst_buffer_copy_flags_get_type")
  (return-type "GType")
)

(define-function bus_flags_get_type
  (c-name "gst_bus_flags_get_type")
  (return-type "GType")
)

(define-function bus_sync_reply_get_type
  (c-name "gst_bus_sync_reply_get_type")
  (return-type "GType")
)

(define-function clock_return_get_type
  (c-name "gst_clock_return_get_type")
  (return-type "GType")
)

(define-function clock_entry_type_get_type
  (c-name "gst_clock_entry_type_get_type")
  (return-type "GType")
)

(define-function clock_flags_get_type
  (c-name "gst_clock_flags_get_type")
  (return-type "GType")
)

(define-function element_flags_get_type
  (c-name "gst_element_flags_get_type")
  (return-type "GType")
)

(define-function core_error_get_type
  (c-name "gst_core_error_get_type")
  (return-type "GType")
)

(define-function library_error_get_type
  (c-name "gst_library_error_get_type")
  (return-type "GType")
)

(define-function resource_error_get_type
  (c-name "gst_resource_error_get_type")
  (return-type "GType")
)

(define-function stream_error_get_type
  (c-name "gst_stream_error_get_type")
  (return-type "GType")
)

(define-function gst_event_type_flags_get_type
  (c-name "gst_event_type_flags_get_type")
  (return-type "GType")
)

(define-function event_type_get_type
  (c-name "gst_event_type_get_type")
  (return-type "GType")
)

(define-function seek_type_get_type
  (c-name "gst_seek_type_get_type")
  (return-type "GType")
)

(define-function seek_flags_get_type
  (c-name "gst_seek_flags_get_type")
  (return-type "GType")
)

(define-function format_get_type
  (c-name "gst_format_get_type")
  (return-type "GType")
)

(define-function index_certainty_get_type
  (c-name "gst_index_certainty_get_type")
  (return-type "GType")
)

(define-function index_entry_type_get_type
  (c-name "gst_index_entry_type_get_type")
  (return-type "GType")
)

(define-function index_lookup_method_get_type
  (c-name "gst_index_lookup_method_get_type")
  (return-type "GType")
)

(define-function assoc_flags_get_type
  (c-name "gst_assoc_flags_get_type")
  (return-type "GType")
)

(define-function index_resolver_method_get_type
  (c-name "gst_index_resolver_method_get_type")
  (return-type "GType")
)

(define-function index_flags_get_type
  (c-name "gst_index_flags_get_type")
  (return-type "GType")
)

(define-function debug_level_get_type
  (c-name "gst_debug_level_get_type")
  (return-type "GType")
)

(define-function debug_color_flags_get_type
  (c-name "gst_debug_color_flags_get_type")
  (return-type "GType")
)

(define-function iterator_result_get_type
  (c-name "gst_iterator_result_get_type")
  (return-type "GType")
)

(define-function iterator_item_get_type
  (c-name "gst_iterator_item_get_type")
  (return-type "GType")
)

(define-function message_type_get_type
  (c-name "gst_message_type_get_type")
  (return-type "GType")
)

(define-function mini_object_flags_get_type
  (c-name "gst_mini_object_flags_get_type")
  (return-type "GType")
)

(define-function pad_link_return_get_type
  (c-name "gst_pad_link_return_get_type")
  (return-type "GType")
)

(define-function flow_return_get_type
  (c-name "gst_flow_return_get_type")
  (return-type "GType")
)

(define-function activate_mode_get_type
  (c-name "gst_activate_mode_get_type")
  (return-type "GType")
)

(define-function pad_direction_get_type
  (c-name "gst_pad_direction_get_type")
  (return-type "GType")
)

(define-function pad_flags_get_type
  (c-name "gst_pad_flags_get_type")
  (return-type "GType")
)

(define-function pad_presence_get_type
  (c-name "gst_pad_presence_get_type")
  (return-type "GType")
)

(define-function pad_template_flags_get_type
  (c-name "gst_pad_template_flags_get_type")
  (return-type "GType")
)

(define-function pipeline_flags_get_type
  (c-name "gst_pipeline_flags_get_type")
  (return-type "GType")
)

(define-function plugin_error_get_type
  (c-name "gst_plugin_error_get_type")
  (return-type "GType")
)

(define-function query_type_get_type
  (c-name "gst_query_type_get_type")
  (return-type "GType")
)

(define-function tag_merge_mode_get_type
  (c-name "gst_tag_merge_mode_get_type")
  (return-type "GType")
)

(define-function tag_flag_get_type
  (c-name "gst_tag_flag_get_type")
  (return-type "GType")
)

(define-function task_state_get_type
  (c-name "gst_task_state_get_type")
  (return-type "GType")
)

(define-function alloc_trace_flags_get_type
  (c-name "gst_alloc_trace_flags_get_type")
  (return-type "GType")
)

(define-function type_find_probability_get_type
  (c-name "gst_type_find_probability_get_type")
  (return-type "GType")
)

(define-function element_state_get_type
  (c-name "gst_element_state_get_type")
  (return-type "GType")
)

(define-function element_state_return_get_type
  (c-name "gst_element_state_return_get_type")
  (return-type "GType")
)

(define-function rank_get_type
  (c-name "gst_rank_get_type")
  (return-type "GType")
)

(define-function uri_type_get_type
  (c-name "gst_uri_type_get_type")
  (return-type "GType")
)

(define-function parse_error_get_type
  (c-name "gst_parse_error_get_type")
  (return-type "GType")
)



;; From ../gstreamer/gst/gsterror.h

(define-function g_error_get_type
  (c-name "gst_g_error_get_type")
  (return-type "GType")
)

(define-function error_get_message
  (c-name "gst_error_get_message")
  (return-type "gchar*")
  (parameters
    '("GQuark" "domain")
    '("gint" "code")
  )
)

(define-function stream_error_quark
  (c-name "gst_stream_error_quark")
  (return-type "GQuark")
)

(define-function core_error_quark
  (c-name "gst_core_error_quark")
  (return-type "GQuark")
)

(define-function resource_error_quark
  (c-name "gst_resource_error_quark")
  (return-type "GQuark")
)

(define-function library_error_quark
  (c-name "gst_library_error_quark")
  (return-type "GQuark")
)

(define-function new
  (c-name "g_error_new")
  (is-constructor-of "GError")
  (return-type "GError*")
  (parameters
   '("gchar*" "domain")
   '("gint" "code")
   '("gchar*" "message")
   )
)

;; From ../gstreamer/gst/gstevent.h

(define-method get_name
  (of-object "GstEventType")
  (c-name "gst_event_type_get_name")
  (return-type "const-gchar*")
)

(define-method to_quark
  (of-object "GstEventType")
  (c-name "gst_event_type_to_quark")
  (return-type "GQuark")
)

(define-method get_flags
  (of-object "GstEventType")
  (c-name "gst_event_type_get_flags")
  (return-type "GstEventTypeFlags")
)

(define-function event_get_type
  (c-name "gst_event_get_type")
  (return-type "GType")
)

(define-function event_new_custom
  (c-name "gst_event_new_custom")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstEventType" "type")
    '("GstStructure*" "structure")
  )
)

(define-method get_structure
  (of-object "GstEvent")
  (c-name "gst_event_get_structure")
  (return-type "const-GstStructure*")
)

(define-method has_name
  (of-object "GstEvent")
  (c-name "gst_event_has_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_seqnum
  (of-object "GstEvent")
  (c-name "gst_event_get_seqnum")
  (return-type "guint32")
)

(define-method set_seqnum
  (of-object "GstEvent")
  (c-name "gst_event_set_seqnum")
  (return-type "none")
  (parameters
    '("guint32" "seqnum")
  )
)

(define-function event_new_flush_start
  (c-name "gst_event_new_flush_start")
  (return-type "GstEvent*")
  (caller-owns-return #t)
)

(define-function event_new_flush_stop
  (c-name "gst_event_new_flush_stop")
  (return-type "GstEvent*")
  (caller-owns-return #t)
)

(define-function event_new_eos
  (c-name "gst_event_new_eos")
  (return-type "GstEvent*")
  (caller-owns-return #t)
)

(define-function event_new_new_segment
  (c-name "gst_event_new_new_segment")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("gboolean" "update")
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("gint64" "start_value")
    '("gint64" "stop_value")
    '("gint64" "stream_time")
  )
)

(define-function event_new_new_segment_full
  (c-name "gst_event_new_new_segment_full")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("gboolean" "update")
    '("gdouble" "rate")
    '("gdouble" "applied_rate")
    '("GstFormat" "format")
    '("gint64" "start")
    '("gint64" "stop")
    '("gint64" "position")
  )
)

(define-method parse_new_segment
  (of-object "GstEvent")
  (c-name "gst_event_parse_new_segment")
  (return-type "none")
  (parameters
    '("gboolean*" "update")
    '("gdouble*" "rate")
    '("GstFormat*" "format")
    '("gint64*" "start_value")
    '("gint64*" "end_value")
    '("gint64*" "stream_time")
  )
)

(define-function event_new_tag
  (c-name "gst_event_new_tag")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstTagList*" "taglist")
  )
)

(define-method parse_new_segment_full
  (of-object "GstEvent")
  (c-name "gst_event_parse_new_segment_full")
  (return-type "none")
  (parameters
    '("gboolean*" "update")
    '("gdouble*" "rate")
    '("gdouble*" "applied_rate")
    '("GstFormat*" "format")
    '("gint64*" "start")
    '("gint64*" "stop")
    '("gint64*" "position")
  )
)

(define-method parse_tag
  (of-object "GstEvent")
  (c-name "gst_event_parse_tag")
  (return-type "none")
  (parameters
    '("GstTagList**" "taglist")
  )
)

(define-function event_new_buffer_size
  (c-name "gst_event_new_buffer_size")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
    '("gint64" "minsize")
    '("gint64" "maxsize")
    '("gboolean" "async")
  )
)

(define-method parse_buffer_size
  (of-object "GstEvent")
  (c-name "gst_event_parse_buffer_size")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "minsize")
    '("gint64*" "maxsize")
    '("gboolean*" "async")
  )
)

(define-function event_new_qos
  (c-name "gst_event_new_qos")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("gdouble" "proportion")
    '("GstClockTimeDiff" "diff")
    '("GstClockTime" "timestamp")
  )
)

(define-method parse_qos
  (of-object "GstEvent")
  (c-name "gst_event_parse_qos")
  (return-type "none")
  (parameters
    '("gdouble*" "proportion")
    '("GstClockTimeDiff*" "diff")
    '("GstClockTime*" "timestamp")
  )
)

(define-function event_new_seek
  (c-name "gst_event_new_seek")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("GstSeekFlags" "flags")
    '("GstSeekType" "start_type")
    '("gint64" "start")
    '("GstSeekType" "stop_type")
    '("gint64" "stop")
  )
)

(define-method parse_seek
  (of-object "GstEvent")
  (c-name "gst_event_parse_seek")
  (return-type "none")
  (parameters
    '("gdouble*" "rate")
    '("GstFormat*" "format")
    '("GstSeekFlags*" "flags")
    '("GstSeekType*" "start_type")
    '("gint64*" "start")
    '("GstSeekType*" "stop_type")
    '("gint64*" "stop")
  )
)

(define-function event_new_navigation
  (c-name "gst_event_new_navigation")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstStructure*" "structure")
  )
)


(define-function event_new_latency
  (c-name "gst_event_new_latency")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstClockTime" "latency")
  )
)

(define-method parse_latency
  (of-object "GstEvent")
  (c-name "gst_event_parse_latency")
  (return-type "none")
  (parameters
    '("GstClockTime*" "latency")
  )
)

(define-function event_new_step
  (c-name "gst_event_new_step")
  (return-type "GstEvent*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
    '("guint64" "amount")
    '("gdouble" "rate")
    '("gboolean" "flush")
    '("gboolean" "intermediate")
  )
)

(define-method parse_step
  (of-object "GstEvent")
  (c-name "gst_event_parse_step")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("guint64*" "amount")
    '("gdouble*" "rate")
    '("gboolean*" "flush")
    '("gboolean*" "intermediate")
  )
)

;; From ../gstreamer/gst/gstfilter.h

(define-function filter_run
  (c-name "gst_filter_run")
  (return-type "GList*")
  (parameters
    '("const-GList*" "list")
    '("GstFilterFunc" "func")
    '("gboolean" "first")
    '("gpointer" "user_data")
  )
)



;; From ../gstreamer/gst/gstformat.h

(define-method get_name
  (of-object "GstFormat")
  (c-name "gst_format_get_name")
  (return-type "const-gchar*")
)

(define-method to_quark
  (of-object "GstFormat")
  (c-name "gst_format_to_quark")
  (return-type "GQuark")
)

(define-function format_register
  (c-name "gst_format_register")
  (return-type "GstFormat")
  (parameters
    '("const-gchar*" "nick")
    '("const-gchar*" "description")
  )
)

(define-function format_get_by_nick
  (c-name "gst_format_get_by_nick")
  (return-type "GstFormat")
  (parameters
    '("const-gchar*" "nick")
  )
)

(define-method s_contains
  (of-object "GstFormat")
  (c-name "gst_formats_contains")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "format")
  )
)

(define-method get_details
  (of-object "GstFormat")
  (c-name "gst_format_get_details")
  (return-type "const-GstFormatDefinition*")
)

(define-function format_iterate_definitions
  (c-name "gst_format_iterate_definitions")
  (return-type "GstIterator*")
)



;; From ../gstreamer/gst/gstghostpad.h

(define-function ghost_pad_get_type
  (c-name "gst_ghost_pad_get_type")
  (return-type "GType")
)

(define-function ghost_pad_new
  (c-name "gst_ghost_pad_new")
  (is-constructor-of "GstGhostPad")
  (return-type "GstPad*")
  (parameters
    '("const-gchar*" "name")
    '("GstPad*" "target")
  )
)

(define-function ghost_pad_new_notarget
  (c-name "gst_ghost_pad_new_no_target")
  (return-type "GstPad*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
    '("GstPadDirection" "dir")
  )
)

(define-function ghost_pad_new_from_template
  (c-name "gst_ghost_pad_new_from_template")
  (return-type "GstPad*")
  (parameters
    '("const-gchar*" "name")
    '("GstPad*" "target")
    '("GstPadTemplate*" "templ")
  )
)

(define-function ghost_pad_new_no_target_from_template
  (c-name "gst_ghost_pad_new_no_target_from_template")
  (return-type "GstPad*")
  (parameters
    '("const-gchar*" "name")
    '("GstPadTemplate*" "templ")
  )
)

(define-method get_target
  (of-object "GstGhostPad")
  (c-name "gst_ghost_pad_get_target")
  (caller-owns-return #t)
  (return-type "GstPad*")
)

(define-method set_target
  (of-object "GstGhostPad")
  (c-name "gst_ghost_pad_set_target")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "newtarget" (null-ok))
  )
)



;; From ../gstreamer/gst/gstindex.h

(define-function index_get_type
  (c-name "gst_index_get_type")
  (return-type "GType")
)

(define-function index_new
  (c-name "gst_index_new")
  (is-constructor-of "GstIndex")
  (return-type "GstIndex*")
)

(define-method commit
  (of-object "GstIndex")
  (c-name "gst_index_commit")
  (return-type "none")
  (parameters
    '("gint" "id")
  )
)

(define-method get_group
  (of-object "GstIndex")
  (c-name "gst_index_get_group")
  (return-type "gint")
)

(define-method new_group
  (of-object "GstIndex")
  (c-name "gst_index_new_group")
  (return-type "gint")
)

(define-method set_group
  (of-object "GstIndex")
  (c-name "gst_index_set_group")
  (return-type "gboolean")
  (parameters
    '("gint" "groupnum")
  )
)

(define-method set_certainty
  (of-object "GstIndex")
  (c-name "gst_index_set_certainty")
  (return-type "none")
  (parameters
    '("GstIndexCertainty" "certainty")
  )
)

(define-method get_certainty
  (of-object "GstIndex")
  (c-name "gst_index_get_certainty")
  (return-type "GstIndexCertainty")
)

(define-method set_filter
  (of-object "GstIndex")
  (c-name "gst_index_set_filter")
  (return-type "none")
  (parameters
    '("GstIndexFilter" "filter")
    '("gpointer" "user_data")
  )
)

(define-method set_filter_full
  (of-object "GstIndex")
  (c-name "gst_index_set_filter_full")
  (return-type "none")
  (parameters
    '("GstIndexFilter" "filter")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_destroy")
  )
)

(define-method set_resolver
  (of-object "GstIndex")
  (c-name "gst_index_set_resolver")
  (return-type "none")
  (parameters
    '("GstIndexResolver" "resolver")
    '("gpointer" "user_data")
  )
)

(define-method set_resolver_full
  (of-object "GstIndex")
  (c-name "gst_index_set_resolver_full")
  (return-type "none")
  (parameters
    '("GstIndexResolver" "resolver")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_destroy")
  )
)

(define-method get_writer_id
  (of-object "GstIndex")
  (c-name "gst_index_get_writer_id")
  (return-type "gboolean")
  (parameters
    '("GstObject*" "writer")
    '("gint*" "id")
  )
)

(define-method add_format
  (of-object "GstIndex")
  (c-name "gst_index_add_format")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstFormat" "format")
  )
)

(define-method add_associationv
  (of-object "GstIndex")
  (c-name "gst_index_add_associationv")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstAssocFlags" "flags")
    '("gint" "n")
    '("const-GstIndexAssociation*" "list")
  )
)

(define-method add_association
  (of-object "GstIndex")
  (c-name "gst_index_add_association")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstAssocFlags" "flags")
    '("GstFormat" "format")
    '("gint64" "value")
  )
  (varargs #t)
)

(define-method add_object
  (of-object "GstIndex")
  (c-name "gst_index_add_object")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("gchar*" "key")
    '("GType" "type")
    '("gpointer" "object")
  )
)

(define-method add_id
  (of-object "GstIndex")
  (c-name "gst_index_add_id")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("gchar*" "description")
  )
)

(define-method get_assoc_entry
  (of-object "GstIndex")
  (c-name "gst_index_get_assoc_entry")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstIndexLookupMethod" "method")
    '("GstAssocFlags" "flags")
    '("GstFormat" "format")
    '("gint64" "value")
  )
)

(define-method get_assoc_entry_full
  (of-object "GstIndex")
  (c-name "gst_index_get_assoc_entry_full")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstIndexLookupMethod" "method")
    '("GstAssocFlags" "flags")
    '("GstFormat" "format")
    '("gint64" "value")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-virtual add_entry
  (of-object "GstIndex")
  (return-type "none")
  (parameters
   '("GstIndexEntry*" "entry")
  )
)

(define-virtual get_assoc_entry
  (of-object "GstIndex")
  (return-type "GstIndexEntry*")
  (parameters
    '("gint" "id")
    '("GstIndexLookupMethod" "method")
    '("GstAssocFlags" "flags")
    '("GstFormat" "format")
    '("gint64" "value")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)


(define-function index_entry_get_type
  (c-name "gst_index_entry_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GstIndexEntry")
  (c-name "gst_index_entry_copy")
  (caller-owns-return #t)
  (return-type "GstIndexEntry*")
)

(define-method free
  (of-object "GstIndexEntry")
  (c-name "gst_index_entry_free")
  (return-type "none")
)

(define-method assoc_map
  (of-object "GstIndexEntry")
  (c-name "gst_index_entry_assoc_map")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "format")
    '("gint64*" "value")
  )
)

(define-method ASSOC_FORMAT
  (of-object "GstIndexEntry")
  (c-name "GST_INDEX_ASSOC_FORMAT")
  (return-type "GstFormat")
  (parameters
   '("guint" "i")
  )
)

(define-method ASSOC_VALUE
  (of-object "GstIndexEntry")
  (c-name "GST_INDEX_ASSOC_VALUE")
  (return-type "gint64")
  (parameters
   '("guint" "i")
  )
)

(define-function index_factory_get_type
  (c-name "gst_index_factory_get_type")
  (return-type "GType")
)

(define-function index_factory_new
  (c-name "gst_index_factory_new")
  (is-constructor-of "GstIndexFactory")
  (return-type "GstIndexFactory*")
  (properties
    '("name" (argname "name"))
    '("longdesc" (argname "longdesc"))
    '("type" (argname "type"))
  )
)

(define-method destroy
  (of-object "GstIndexFactory")
  (c-name "gst_index_factory_destroy")
  (return-type "none")
)

(define-function index_factory_find
  (c-name "gst_index_factory_find")
  (return-type "GstIndexFactory*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method create
  (of-object "GstIndexFactory")
  (c-name "gst_index_factory_create")
  (return-type "GstIndex*")
  (caller-owns-return #t)
)

(define-function index_factory_make
  (c-name "gst_index_factory_make")
  (return-type "GstIndex*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)



;; From ../gstreamer/gst/gstinfo.h

(define-function debug_log
  (c-name "gst_debug_log")
  (return-type "none")
  (parameters
    '("GstDebugCategory*" "category")
    '("GstDebugLevel" "level")
    '("const-gchar*" "file")
    '("const-gchar*" "function")
    '("gint" "line")
    '("GObject*" "object")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function debug_log_valist
  (c-name "gst_debug_log_valist")
  (return-type "none")
  (parameters
    '("GstDebugCategory*" "category")
    '("GstDebugLevel" "level")
    '("const-gchar*" "file")
    '("const-gchar*" "function")
    '("gint" "line")
    '("GObject*" "object")
    '("const-gchar*" "format")
    '("va_list" "args")
  )
)

(define-method get
  (of-object "GstDebugMessage")
  (c-name "gst_debug_message_get")
  (return-type "const-gchar*")
)

(define-function debug_log_default
  (c-name "gst_debug_log_default")
  (return-type "none")
  (parameters
    '("GstDebugCategory*" "category")
    '("GstDebugLevel" "level")
    '("const-gchar*" "file")
    '("const-gchar*" "function")
    '("gint" "line")
    '("GObject*" "object")
    '("GstDebugMessage*" "message")
    '("gpointer" "unused")
  )
)

(define-method get_name
  (of-object "GstDebugLevel")
  (c-name "gst_debug_level_get_name")
  (return-type "const-gchar*")
)

(define-function debug_add_log_function
  (c-name "gst_debug_add_log_function")
  (return-type "none")
  (parameters
    '("GstLogFunction" "func")
    '("gpointer" "data")
  )
)

(define-function debug_remove_log_function
  (c-name "gst_debug_remove_log_function")
  (return-type "guint")
  (parameters
    '("GstLogFunction" "func")
  )
)

(define-function debug_remove_log_function_by_data
  (c-name "gst_debug_remove_log_function_by_data")
  (return-type "guint")
  (parameters
    '("gpointer" "data")
  )
)

(define-function debug_set_active
  (c-name "gst_debug_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "active")
  )
)

(define-function debug_is_active
  (c-name "gst_debug_is_active")
  (return-type "gboolean")
)

(define-function debug_set_colored
  (c-name "gst_debug_set_colored")
  (return-type "none")
  (parameters
    '("gboolean" "colored")
  )
)

(define-function debug_is_colored
  (c-name "gst_debug_is_colored")
  (return-type "gboolean")
)

(define-function debug_set_default_threshold
  (c-name "gst_debug_set_default_threshold")
  (return-type "none")
  (parameters
    '("GstDebugLevel" "level")
  )
)

(define-function debug_get_default_threshold
  (c-name "gst_debug_get_default_threshold")
  (return-type "GstDebugLevel")
)

(define-function debug_set_threshold_for_name
  (c-name "gst_debug_set_threshold_for_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("GstDebugLevel" "level")
  )
)

(define-function debug_unset_threshold_for_name
  (c-name "gst_debug_unset_threshold_for_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method free
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_free")
  (return-type "none")
)

(define-method set_threshold
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_set_threshold")
  (return-type "none")
  (parameters
    '("GstDebugLevel" "level")
  )
)

(define-method reset_threshold
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_reset_threshold")
  (return-type "none")
)

(define-method get_threshold
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_get_threshold")
  (return-type "GstDebugLevel")
)

(define-method get_name
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_get_name")
  (return-type "const-gchar*")
)

(define-method get_color
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_get_color")
  (return-type "guint")
)

(define-method get_description
  (of-object "GstDebugCategory")
  (c-name "gst_debug_category_get_description")
  (return-type "const-gchar*")
)

(define-function debug_get_all_categories
  (c-name "gst_debug_get_all_categories")
  (return-type "GSList*")
)

(define-function debug_construct_term_color
  (c-name "gst_debug_construct_term_color")
  (return-type "gchar*")
  (parameters
    '("guint" "colorinfo")
  )
)

(define-function debug_construct_win_color
  (c-name "gst_debug_construct_win_color")
  (return-type "gint")
  (parameters
    '("guint" "colorinfo")
  )
)

(define-function debug_remove_log_function
  (c-name "gst_debug_remove_log_function")
  (return-type "guint")
  (parameters
    '("GstLogFunction" "func")
  )
)

(define-function debug_remove_log_function_by_data
  (c-name "gst_debug_remove_log_function_by_data")
  (return-type "guint")
  (parameters
    '("gpointer" "data")
  )
)

;; From ../gstreamer/gst/gstinterface.h

(define-function implements_interface_get_type
  (c-name "gst_implements_interface_get_type")
  (return-type "GType")
)

(define-method implements_interface
  (of-object "GstElement")
  (c-name "gst_element_implements_interface")
  (return-type "gboolean")
  (parameters
    '("GType" "iface_type")
  )
)

(define-function implements_interface_cast
  (c-name "gst_implements_interface_cast")
  (return-type "gpointer")
  (parameters
    '("gpointer" "from")
    '("GType" "type")
  )
)

(define-function implements_interface_check
  (c-name "gst_implements_interface_check")
  (return-type "gboolean")
  (parameters
    '("gpointer" "from")
    '("GType" "type")
  )
)

(define-virtual supported
  (of-object "GstImplementsInterface")
  (return-type "gboolean")
  (parameters
   '("GType" "iface_type")
  )
)

;; From ../gstreamer/gst/gstiterator.h

(define-function iterator_new
  (c-name "gst_iterator_new")
  (is-constructor-of "GstIterator")
  (return-type "GstIterator*")
  (parameters
    '("guint" "size")
    '("GType" "type")
    '("GMutex*" "lock")
    '("guint32*" "master_cookie")
    '("GstIteratorNextFunction" "next")
    '("GstIteratorItemFunction" "item")
    '("GstIteratorResyncFunction" "resync")
    '("GstIteratorFreeFunction" "free")
  )
)

(define-function iterator_new_list
  (c-name "gst_iterator_new_list")
  (return-type "GstIterator*")
  (parameters
    '("GType" "type")
    '("GMutex*" "lock")
    '("guint32*" "master_cookie")
    '("GList**" "list")
    '("gpointer" "owner")
    '("GstIteratorItemFunction" "item")
    '("GstIteratorDisposeFunction" "free")
  )
)

(define-method next
  (of-object "GstIterator")
  (c-name "gst_iterator_next")
  (return-type "GstIteratorResult")
  (parameters
    '("gpointer*" "result")
  )
)

(define-method resync
  (of-object "GstIterator")
  (c-name "gst_iterator_resync")
  (return-type "none")
)

(define-method free
  (of-object "GstIterator")
  (c-name "gst_iterator_free")
  (return-type "none")
)

(define-method push
  (of-object "GstIterator")
  (c-name "gst_iterator_push")
  (return-type "none")
  (parameters
    '("GstIterator*" "other")
  )
)

(define-method filter
  (of-object "GstIterator")
  (c-name "gst_iterator_filter")
  (return-type "GstIterator*")
  (parameters
    '("GCompareFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method fold
  (of-object "GstIterator")
  (c-name "gst_iterator_fold")
  (return-type "GstIteratorResult")
  (parameters
    '("GstIteratorFoldFunction" "func")
    '("GValue*" "ret")
    '("gpointer" "user_data")
  )
)

(define-method foreach
  (of-object "GstIterator")
  (c-name "gst_iterator_foreach")
  (return-type "GstIteratorResult")
  (parameters
    '("GFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method find_custom
  (of-object "GstIterator")
  (c-name "gst_iterator_find_custom")
  (return-type "gpointer")
  (parameters
    '("GCompareFunc" "func")
    '("gpointer" "user_data")
  )
)

;; From ../gstreamer/gst/gstmessage.h

(define-function message_get_type
  (c-name "gst_message_get_type")
  (return-type "GType")
)

(define-method get_name
  (of-object "GstMessageType")
  (c-name "gst_message_type_get_name")
  (return-type "const-gchar*")
)

(define-method to_quark
  (of-object "GstMessageType")
  (c-name "gst_message_type_to_quark")
  (return-type "GQuark")
)

(define-method set_seqnum
  (of-object "GstMessage")
  (c-name "gst_message_set_seqnum")
  (return-type "none")
  (parameters
    '("guint32" "seqnum")
  )
)

(define-function message_new_eos
  (c-name "gst_message_new_eos")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
  )
)

(define-function message_new_error
  (c-name "gst_message_new_error")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GError*" "error")
    '("gchar*" "debug")
  )
)

(define-function message_new_warning
  (c-name "gst_message_new_warning")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GError*" "error")
    '("gchar*" "debug")
  )
)

(define-function message_new_info
  (c-name "gst_message_new_info")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GError*" "error")
    '("gchar*" "debug")
  )
)

(define-function message_new_tag
  (c-name "gst_message_new_tag")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstTagList*" "tag_list" (keep-refcount))
  )
)

(define-function message_new_buffering
  (c-name "gst_message_new_buffering")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("gint" "percent")
  )
)

(define-function message_new_state_changed
  (c-name "gst_message_new_state_changed")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstState" "old_state")
    '("GstState" "new_state")
    '("GstState" "pending_state")
  )
)

(define-function message_new_state_dirty
  (c-name "gst_message_new_state_dirty")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
  )
)

(define-function message_new_step_done
  (c-name "gst_message_new_step_done")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstFormat" "format")
    '("guint64" "amount")
    '("gdouble" "rate")
    '("gboolean" "flush")
    '("gboolean" "intermediate")
    '("guint64" "duration")
    '("gboolean" "eos")
  )
)

(define-method parse_step_done
  (of-object "GstMessage")
  (c-name "gst_message_parse_step_done")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("guint64*" "amount")
    '("gdouble*" "rate")
    '("gboolean*" "flush")
    '("gboolean*" "intermediate")
    '("guint64*" "duration")
    '("gboolean*" "eos")
  )
)

(define-function message_new_clock_provide
  (c-name "gst_message_new_clock_provide")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstClock*" "clock")
    '("gboolean" "ready")
  )
)

(define-function message_new_clock_lost
  (c-name "gst_message_new_clock_lost")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstClock*" "clock")
  )
)

(define-function message_new_new_clock
  (c-name "gst_message_new_new_clock")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstClock*" "clock")
  )
)

(define-function message_new_segment_start
  (c-name "gst_message_new_segment_start")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstFormat" "format")
    '("gint64" "position")
  )
)

(define-function message_new_segment_done
  (c-name "gst_message_new_segment_done")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstFormat" "format")
    '("gint64" "position")
  )
)

(define-function message_new_application
  (c-name "gst_message_new_application")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstStructure*" "structure" (keep-refcount))
  )
)

(define-function message_new_element
  (c-name "gst_message_new_element")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstStructure*" "structure" (keep-refcount))
  )
)

(define-function message_new_duration
  (c-name "gst_message_new_duration")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstFormat" "format")
    '("gint64" "duration")
  )
)

(define-function message_new_async_start
  (c-name "gst_message_new_async_start")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("gboolean" "new_base_time")
  )
)

(define-function message_new_async_done
  (c-name "gst_message_new_async_done")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
  )
)

(define-function message_new_latency
  (c-name "gst_message_new_latency")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
  )
)

(define-function message_new_structure_change
  (c-name "gst_message_new_structure_change")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstStructureChangeType" "type")
    '("GstElement*" "owner")
    '("gboolean" "busy")
  )
)

(define-method parse_structure_change
  (of-object "GstMessage")
  (c-name "gst_message_parse_structure_change")
  (return-type "none")
  (parameters
    '("GstStructureChangeType*" "type")
    '("GstElement**" "owner")
    '("gboolean*" "busy")
  )
)

(define-function message_new_stream_status
  (c-name "gst_message_new_stream_status")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstStreamStatusType" "type")
    '("GstElement*" "owner")
  )
)

(define-method parse_stream_status
  (of-object "GstMessage")
  (c-name "gst_message_parse_stream_status")
  (return-type "none")
  (parameters
    '("GstStreamStatusType*" "type")
    '("GstElement**" "owner")
  )
)

(define-method set_stream_status_object
  (of-object "GstMessage")
  (c-name "gst_message_set_stream_status_object")
  (return-type "none")
  (parameters
    '("const-GValue*" "object")
  )
)

(define-method get_stream_status_object
  (of-object "GstMessage")
  (c-name "gst_message_get_stream_status_object")
  (return-type "const-GValue*")
)

(define-function message_new_request_state
  (c-name "gst_message_new_request_state")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstState" "state")
  )
)

(define-method parse_request_state
  (of-object "GstMessage")
  (c-name "gst_message_parse_request_state")
  (return-type "none")
  (parameters
    '("GstState*" "state")
  )
)

(define-function message_new_step_start
  (c-name "gst_message_new_step_start")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("gboolean" "active")
    '("GstFormat" "format")
    '("guint64" "amount")
    '("gdouble" "rate")
    '("gboolean" "flush")
    '("gboolean" "intermediate")
  )
)

(define-method parse_step_start
  (of-object "GstMessage")
  (c-name "gst_message_parse_step_start")
  (return-type "none")
  (parameters
    '("gboolean*" "active")
    '("GstFormat*" "format")
    '("guint64*" "amount")
    '("gdouble*" "rate")
    '("gboolean*" "flush")
    '("gboolean*" "intermediate")
  )
)

(define-function message_new_qos
  (c-name "gst_message_new_qos")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("gboolean" "live")
    '("guint64" "running_time")
    '("guint64" "stream_time")
    '("guint64" "timestamp")
    '("guint64" "duration")
  )
)

(define-method set_qos_values
  (of-object "GstMessage")
  (c-name "gst_message_set_qos_values")
  (return-type "none")
  (parameters
    '("gint64" "jitter")
    '("gdouble" "proportion")
    '("gint" "quality")
  )
)

(define-method set_qos_stats
  (of-object "GstMessage")
  (c-name "gst_message_set_qos_stats")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("guint64" "processed")
    '("guint64" "dropped")
  )
)

(define-method parse_qos
  (of-object "GstMessage")
  (c-name "gst_message_parse_qos")
  (return-type "none")
  (parameters
    '("gboolean*" "live")
    '("guint64*" "running_time")
    '("guint64*" "stream_time")
    '("guint64*" "timestamp")
    '("guint64*" "duration")
  )
)

(define-method parse_qos_values
  (of-object "GstMessage")
  (c-name "gst_message_parse_qos_values")
  (return-type "none")
  (parameters
    '("gint64*" "jitter")
    '("gdouble*" "proportion")
    '("gint*" "quality")
  )
)

(define-method parse_qos_stats
  (of-object "GstMessage")
  (c-name "gst_message_parse_qos_stats")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("guint64*" "processed")
    '("guint64*" "dropped")
  )
)

(define-function message_new_custom
  (c-name "gst_message_new_custom")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstMessageType" "type")
    '("GstObject*" "src")
    '("GstStructure*" "structure" (keep-refcount))
  )
)

(define-method parse_error
  (of-object "GstMessage")
  (c-name "gst_message_parse_error")
  (return-type "none")
  (parameters
    '("GError**" "gerror")
    '("gchar**" "debug")
  )
)

(define-method parse_warning
  (of-object "GstMessage")
  (c-name "gst_message_parse_warning")
  (return-type "none")
  (parameters
    '("GError**" "gerror")
    '("gchar**" "debug")
  )
)

(define-method parse_info
  (of-object "GstMessage")
  (c-name "gst_message_parse_info")
  (return-type "none")
  (parameters
    '("GError**" "gerror")
    '("gchar**" "debug")
  )
)

(define-function message_new_tag_full
  (c-name "gst_message_new_tag_full")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("GstPad*" "pad")
    '("GstTagList*" "tag_list" (keep-refcount))
  )
)

(define-method parse_tag
  (of-object "GstMessage")
  (c-name "gst_message_parse_tag")
  (return-type "none")
  (parameters
    '("GstTagList**" "tag_list")
  )
)

(define-method parse_tag_full
  (of-object "GstMessage")
  (c-name "gst_message_parse_tag_full")
  (return-type "none")
  (parameters
    '("GstPad**" "pad")
    '("GstTagList**" "tag_list")
  )
)

(define-method parse_buffering
  (of-object "GstMessage")
  (c-name "gst_message_parse_buffering")
  (return-type "none")
  (parameters
    '("gint*" "percent")
  )
)

(define-method set_buffering_stats
  (of-object "GstMessage")
  (c-name "gst_message_set_buffering_stats")
  (return-type "none")
  (parameters
    '("GstBufferingMode" "mode")
    '("gint" "avg_in")
    '("gint" "avg_out")
    '("gint64" "buffering_left")
  )
)

(define-method parse_buffering_stats
  (of-object "GstMessage")
  (c-name "gst_message_parse_buffering_stats")
  (return-type "none")
  (parameters
    '("GstBufferingMode*" "mode")
    '("gint*" "avg_in")
    '("gint*" "avg_out")
    '("gint64*" "buffering_left")
  )
)

(define-method parse_state_changed
  (of-object "GstMessage")
  (c-name "gst_message_parse_state_changed")
  (return-type "none")
  (parameters
    '("GstState*" "old_state")
    '("GstState*" "new_state")
    '("GstState*" "pending")
  )
)

(define-method parse_clock_provide
  (of-object "GstMessage")
  (c-name "gst_message_parse_clock_provide")
  (return-type "none")
  (parameters
    '("GstClock**" "clock")
    '("gboolean*" "ready")
  )
)

(define-method parse_clock_lost
  (of-object "GstMessage")
  (c-name "gst_message_parse_clock_lost")
  (return-type "none")
  (parameters
    '("GstClock**" "clock")
  )
)

(define-method parse_new_clock
  (of-object "GstMessage")
  (c-name "gst_message_parse_new_clock")
  (return-type "none")
  (parameters
    '("GstClock**" "clock")
  )
)

(define-method parse_segment_start
  (of-object "GstMessage")
  (c-name "gst_message_parse_segment_start")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "position")
  )
)

(define-method parse_segment_done
  (of-object "GstMessage")
  (c-name "gst_message_parse_segment_done")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "position")
  )
)

(define-method parse_duration
  (of-object "GstMessage")
  (c-name "gst_message_parse_duration")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "duration")
  )
)

(define-method parse_async_start
  (of-object "GstMessage")
  (c-name "gst_message_parse_async_start")
  (return-type "none")
  (parameters
    '("gboolean*" "new_base_time")
  )
)

(define-method get_structure
  (of-object "GstMessage*")
  (c-name "gst_message_get_structure")
  (return-type "const-GstStructure*")
)



;; From ../gstreamer/gst/gstminiobject.h

(define-function mini_object_get_type
  (c-name "gst_mini_object_get_type")
  (return-type "GType")
)

(define-function mini_object_new
  (c-name "gst_mini_object_new")
  (is-constructor-of "GstMiniObject")
  (return-type "GstMiniObject*")
  (parameters
    '("GType" "type")
  )
)

(define-method copy
  (of-object "GstMiniObject")
  (c-name "gst_mini_object_copy")
  (return-type "GstMiniObject*")
  (caller-owns-return #t)
)

(define-method is_writable
  (of-object "GstMiniObject")
  (c-name "gst_mini_object_is_writable")
  (return-type "gboolean")
)

(define-method make_writable
  (of-object "GstMiniObject")
  (c-name "gst_mini_object_make_writable")
  (return-type "GstMiniObject*")
  (caller-owns-return #t)
)

(define-method ref
  (of-object "GstMiniObject")
  (c-name "gst_mini_object_ref")
  (return-type "GstMiniObject*")
)

(define-method unref
  (of-object "GstMiniObject")
  (c-name "gst_mini_object_unref")
  (return-type "none")
)

(define-function mini_object_replace
  (c-name "gst_mini_object_replace")
  (return-type "none")
  (parameters
    '("GstMiniObject**" "olddata")
    '("GstMiniObject*" "newdata")
  )
)

(define-function param_spec_mini_object
  (c-name "gst_param_spec_mini_object")
  (return-type "GParamSpec*")
  (parameters
    '("const-char*" "name")
    '("const-char*" "nick")
    '("const-char*" "blurb")
    '("GType" "object_type")
    '("GParamFlags" "flags")
  )
)

(define-function gst_param_spec_fraction
  (c-name "gst_param_spec_fraction")
  (return-type "GParamSpec*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "nick")
    '("const-gchar*" "blurb")
    '("gint" "min_num")
    '("gint" "min_denom")
    '("gint" "max_num")
    '("gint" "max_denom")
    '("gint" "default_num")
    '("gint" "default_denom")
    '("GParamFlags" "flags")
  )
)


(define-function value_set_mini_object
  (c-name "gst_value_set_mini_object")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("GstMiniObject*" "mini_object")
  )
)

(define-function value_take_mini_object
  (c-name "gst_value_take_mini_object")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("GstMiniObject*" "mini_object")
  )
)

(define-function value_get_mini_object
  (c-name "gst_value_get_mini_object")
  (return-type "GstMiniObject*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gst_value_dup_mini_object
  (c-name "gst_value_dup_mini_object")
  (return-type "GstMiniObject*")
  (parameters
    '("const-GValue*" "value")
  )
)
;; From ../gstreamer/gst/gstobject.h

(define-function object_get_type
  (c-name "gst_object_get_type")
  (return-type "GType")
)

(define-method set_name
  (of-object "GstObject")
  (c-name "gst_object_set_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GstObject")
  (c-name "gst_object_get_name")
  (return-type "gchar*")
)

(define-method set_name_prefix
  (of-object "GstObject")
  (c-name "gst_object_set_name_prefix")
  (return-type "none")
  (parameters
    '("const-gchar*" "name_prefix")
  )
)

(define-method get_name_prefix
  (of-object "GstObject")
  (c-name "gst_object_get_name_prefix")
  (return-type "gchar*")
)

(define-method set_parent
  (of-object "GstObject")
  (c-name "gst_object_set_parent")
  (return-type "gboolean")
  (parameters
    '("GstObject*" "parent")
  )
)

(define-method get_parent
  (of-object "GstObject")
  (c-name "gst_object_get_parent")
  (return-type "GstObject*")
  (caller-owns-return #t)
)

(define-method unparent
  (of-object "GstObject")
  (c-name "gst_object_unparent")
  (return-type "none")
)

(define-method has_ancestor
  (of-object "GstObject")
  (c-name "gst_object_has_ancestor")
  (return-type "gboolean")
  (parameters
    '("GstObject*" "ancestor")
  )
)

(define-method sink
  (of-object "GstObject")
  (c-name "gst_object_sink")
  (return-type "none")
)

(define-method set_property
  (of-object "GstObject")
  (c-name "gst_object_set_property")
  (return-type "none")
)

(define-function object_default_deep_notify
  (c-name "gst_object_default_deep_notify")
  (return-type "none")
  (parameters
    '("GObject*" "object")
    '("GstObject*" "orig")
    '("GParamSpec*" "pspec")
    '("gchar**" "excluded_props")
  )
)

(define-function object_ref
  (c-name "gst_object_ref")
  (return-type "gpointer")
  (parameters
    '("gpointer" "object")
  )
)

(define-function object_unref
  (c-name "gst_object_unref")
  (return-type "none")
  (parameters
    '("gpointer" "object")
  )
)

(define-function object_replace
  (c-name "gst_object_replace")
  (return-type "none")
  (parameters
    '("GstObject**" "oldobj")
    '("GstObject*" "newobj")
  )
)

(define-method get_path_string
  (of-object "GstObject")
  (c-name "gst_object_get_path_string")
  (return-type "gchar*")
)

(define-function object_check_uniqueness
  (c-name "gst_object_check_uniqueness")
  (return-type "gboolean")
  (parameters
    '("GList*" "list")
    '("const-gchar*" "name")
  )
)

(define-method save_thyself
  (of-object "GstObject")
  (c-name "gst_object_save_thyself")
  (return-type "GstXmlNodePtr")
  (parameters
    '("GstXmlNodePtr" "parent")
  )
)

(define-method restore_thyself
  (of-object "GstObject")
  (c-name "gst_object_restore_thyself")
  (return-type "none")
  (parameters
    '("GstXmlNodePtr" "self")
  )
)

(define-function class_signal_connect
  (c-name "gst_class_signal_connect")
  (return-type "guint")
  (parameters
    '("GstObjectClass*" "klass")
    '("const-gchar*" "name")
    '("gpointer" "func")
    '("gpointer" "func_data")
  )
)

(define-function class_signal_emit_by_name
  (c-name "gst_class_signal_emit_by_name")
  (return-type "none")
  (parameters
    '("GstObject*" "object")
    '("const-gchar*" "name")
    '("GstXmlNodePtr" "self")
  )
)

(define-virtual save_thyself
  (of-object "GstObject")
  (return-type "GstXmlNodePtr")
  (parameters
   '("GstXmlNodePtr" "parent")
  )
)

(define-virtual restore_thyself
  (of-object "GstObject")
  (return-type "none")
  (parameters
   '("GstXmlNodePtr" "self")
  )
)

;; From ../gstreamer/gst/gstpad.h

(define-function flow_get_name
  (c-name "gst_flow_get_name")
  (return-type "const-gchar*")
  (parameters
    '("GstFlowReturn" "ret")
  )
)

(define-function flow_to_quark
  (c-name "gst_flow_to_quark")
  (return-type "GQuark")
  (parameters
    '("GstFlowReturn" "ret")
  )
)

(define-function pad_get_type
  (c-name "gst_pad_get_type")
  (return-type "GType")
)

(define-function pad_new
  (c-name "gst_pad_new")
  (is-constructor-of "GstPad")
  (return-type "GstPad*")
  (properties
    '("name" (argname "name"))
    '("direction" (argname "direction"))
  )
)

(define-function pad_new_from_template
  (c-name "gst_pad_new_from_template")
  (return-type "GstPad*")
  (caller-owns-return #t)
  (parameters
    '("GstPadTemplate*" "templ")
    '("const-gchar*" "name")
  )
)

(define-function pad_new_from_static_template
  (c-name "gst_pad_new_from_static_template")
  (return-type "GstPad*")
  (parameters
    '("GstStaticPadTemplate*" "templ")
    '("const-gchar*" "name")
  )
)

(define-method get_direction
  (of-object "GstPad")
  (c-name "gst_pad_get_direction")
  (return-type "GstPadDirection")
)

(define-method set_active
  (of-object "GstPad")
  (c-name "gst_pad_set_active")
  (return-type "gboolean")
  (parameters
    '("gboolean" "active")
  )
)

(define-method is_active
  (of-object "GstPad")
  (c-name "gst_pad_is_active")
  (return-type "gboolean")
)

(define-method activate_pull
  (of-object "GstPad")
  (c-name "gst_pad_activate_pull")
  (return-type "gboolean")
  (parameters
    '("gboolean" "active")
  )
)

(define-method activate_push
  (of-object "GstPad")
  (c-name "gst_pad_activate_push")
  (return-type "gboolean")
  (parameters
    '("gboolean" "active")
  )
)

(define-method set_blocked
  (of-object "GstPad")
  (c-name "gst_pad_set_blocked")
  (return-type "gboolean")
  (parameters
    '("gboolean" "blocked")
  )
)

(define-method set_blocked_async
  (of-object "GstPad")
  (c-name "gst_pad_set_blocked_async")
  (return-type "gboolean")
  (parameters
    '("gboolean" "blocked")
    '("GstPadBlockCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method is_blocked
  (of-object "GstPad")
  (c-name "gst_pad_is_blocked")
  (return-type "gboolean")
)

(define-method set_element_private
  (of-object "GstPad")
  (c-name "gst_pad_set_element_private")
  (return-type "none")
  (parameters
    '("gpointer" "priv")
  )
)

(define-method get_element_private
  (of-object "GstPad")
  (c-name "gst_pad_get_element_private")
  (return-type "gpointer")
)

(define-method get_pad_template
  (of-object "GstPad")
  (c-name "gst_pad_get_pad_template")
  (return-type "GstPadTemplate*")
)

(define-method set_bufferalloc_function
  (of-object "GstPad")
  (c-name "gst_pad_set_bufferalloc_function")
  (return-type "none")
  (parameters
    '("GstPadBufferAllocFunction" "bufalloc")
  )
)

(define-method alloc_buffer
  (of-object "GstPad")
  (c-name "gst_pad_alloc_buffer")
  (return-type "GstFlowReturn")
  (parameters
    '("guint64" "offset")
    '("gint" "size")
    '("GstCaps*" "caps")
    '("GstBuffer**" "buf")
  )
)

(define-method alloc_buffer_and_set_caps
  (of-object "GstPad")
  (c-name "gst_pad_alloc_buffer_and_set_caps")
  (return-type "GstFlowReturn")
  (parameters
    '("guint64" "offset")
    '("gint" "size")
    '("GstCaps*" "caps")
    '("GstBuffer**" "buf")
  )
)

(define-method set_activate_function
  (of-object "GstPad")
  (c-name "gst_pad_set_activate_function")
  (return-type "none")
  (parameters
    '("GstPadActivateFunction" "activate")
  )
)

(define-method set_activatepull_function
  (of-object "GstPad")
  (c-name "gst_pad_set_activatepull_function")
  (return-type "none")
  (parameters
    '("GstPadActivateModeFunction" "activatepull")
  )
)

(define-method set_activatepush_function
  (of-object "GstPad")
  (c-name "gst_pad_set_activatepush_function")
  (return-type "none")
  (parameters
    '("GstPadActivateModeFunction" "activatepush")
  )
)

(define-method set_chain_function
  (of-object "GstPad")
  (c-name "gst_pad_set_chain_function")
  (return-type "none")
  (parameters
    '("GstPadChainFunction" "chain")
  )
)

(define-method set_chain_list_function
  (of-object "GstPad")
  (c-name "gst_pad_set_chain_list_function")
  (return-type "none")
  (parameters
    '("GstPadChainListFunction" "chainlist")
  )
)

(define-method set_getrange_function
  (of-object "GstPad")
  (c-name "gst_pad_set_getrange_function")
  (return-type "none")
  (parameters
    '("GstPadGetRangeFunction" "get")
  )
)

(define-method set_checkgetrange_function
  (of-object "GstPad")
  (c-name "gst_pad_set_checkgetrange_function")
  (return-type "none")
  (parameters
    '("GstPadCheckGetRangeFunction" "check")
  )
)

(define-method set_event_function
  (of-object "GstPad")
  (c-name "gst_pad_set_event_function")
  (return-type "none")
  (parameters
    '("GstPadEventFunction" "event")
  )
)

(define-method set_link_function
  (of-object "GstPad")
  (c-name "gst_pad_set_link_function")
  (return-type "none")
  (parameters
    '("GstPadLinkFunction" "link")
  )
)

(define-method set_unlink_function
  (of-object "GstPad")
  (c-name "gst_pad_set_unlink_function")
  (return-type "none")
  (parameters
    '("GstPadUnlinkFunction" "unlink")
  )
)

(define-method link
  (of-object "GstPad")
  (c-name "gst_pad_link")
  (return-type "GstPadLinkReturn")
  (parameters
    '("GstPad*" "sinkpad")
  )
)

(define-method link_full
  (of-object "GstPad")
  (c-name "gst_pad_link_full")
  (return-type "GstPadLinkReturn")
  (parameters
    '("GstPad*" "sinkpad")
    '("GstPadLinkCheck" "flags")
  )
)

(define-method unlink
  (of-object "GstPad")
  (c-name "gst_pad_unlink")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "sinkpad")
  )
)

(define-method is_linked
  (of-object "GstPad")
  (c-name "gst_pad_is_linked")
  (return-type "gboolean")
)

(define-method get_peer
  (of-object "GstPad")
  (c-name "gst_pad_get_peer")
  (return-type "GstPad*")
  (caller-owns-return #t)
)

(define-method set_getcaps_function
  (of-object "GstPad")
  (c-name "gst_pad_set_getcaps_function")
  (return-type "none")
  (parameters
    '("GstPadGetCapsFunction" "getcaps")
  )
)

(define-method set_acceptcaps_function
  (of-object "GstPad")
  (c-name "gst_pad_set_acceptcaps_function")
  (return-type "none")
  (parameters
    '("GstPadAcceptCapsFunction" "acceptcaps")
  )
)

(define-method set_fixatecaps_function
  (of-object "GstPad")
  (c-name "gst_pad_set_fixatecaps_function")
  (return-type "none")
  (parameters
    '("GstPadFixateCapsFunction" "fixatecaps")
  )
)

(define-method set_setcaps_function
  (of-object "GstPad")
  (c-name "gst_pad_set_setcaps_function")
  (return-type "none")
  (parameters
    '("GstPadSetCapsFunction" "setcaps")
  )
)

(define-method get_pad_template_caps
  (of-object "GstPad")
  (c-name "gst_pad_get_pad_template_caps")
  (return-type "const-GstCaps*")
)

(define-method get_caps_reffed
  (of-object "GstPad")
  (c-name "gst_pad_get_caps_reffed")
  (return-type "GstCaps*")
)

(define-method get_caps
  (of-object "GstPad")
  (c-name "gst_pad_get_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method fixate_caps
  (of-object "GstPad")
  (c-name "gst_pad_fixate_caps")
  (return-type "none")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method accept_caps
  (of-object "GstPad")
  (c-name "gst_pad_accept_caps")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method set_caps
  (of-object "GstPad")
  (c-name "gst_pad_set_caps")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method peer_get_caps_reffed
  (of-object "GstPad")
  (c-name "gst_pad_peer_get_caps_reffed")
  (return-type "GstCaps*")
)

(define-method peer_get_caps
  (of-object "GstPad")
  (c-name "gst_pad_peer_get_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method peer_accept_caps
  (of-object "GstPad")
  (c-name "gst_pad_peer_accept_caps")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method get_allowed_caps
  (of-object "GstPad")
  (c-name "gst_pad_get_allowed_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method get_negotiated_caps
  (of-object "GstPad")
  (c-name "gst_pad_get_negotiated_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method push
  (of-object "GstPad")
  (c-name "gst_pad_push")
  (return-type "GstFlowReturn")
  (parameters
    '("GstBuffer*" "buffer" (keep-refcount))
  )
)

(define-method push_list
  (of-object "GstPad")
  (c-name "gst_pad_push_list")
  (return-type "GstFlowReturn")
  (parameters
    '("GstBufferList*" "list" (keep-refcount))
  )
)

(define-method check_pull_range
  (of-object "GstPad")
  (c-name "gst_pad_check_pull_range")
  (return-type "gboolean")
)

(define-method pull_range
  (of-object "GstPad")
  (c-name "gst_pad_pull_range")
  (return-type "GstFlowReturn")
  (parameters
    '("guint64" "offset")
    '("guint" "size")
    '("GstBuffer**" "buffer")
  )
)

(define-method push_event
  (of-object "GstPad")
  (c-name "gst_pad_push_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event" (keep-refcount))
  )
)

(define-method event_default
  (of-object "GstPad")
  (c-name "gst_pad_event_default")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
  )
)

(define-method chain
  (of-object "GstPad")
  (c-name "gst_pad_chain")
  (return-type "GstFlowReturn")
  (parameters
    '("GstBuffer*" "buffer" (keep-refcount))
  )
)

(define-method chain_list
  (of-object "GstPad")
  (c-name "gst_pad_chain_list")
  (return-type "GstFlowReturn")
  (parameters
    '("GstBufferList*" "list" (keep-refcount))
  )
)

(define-method get_range
  (of-object "GstPad")
  (c-name "gst_pad_get_range")
  (return-type "GstFlowReturn")
  (parameters
    '("guint64" "offset")
    '("guint" "size")
    '("GstBuffer**" "buffer")
  )
)

(define-method send_event
  (of-object "GstPad")
  (c-name "gst_pad_send_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event" (keep-refcount))
  )
)

(define-method start_task
  (of-object "GstPad")
  (c-name "gst_pad_start_task")
  (return-type "gboolean")
  (parameters
    '("GstTaskFunction" "func")
    '("gpointer" "data")
  )
)

(define-method pause_task
  (of-object "GstPad")
  (c-name "gst_pad_pause_task")
  (return-type "gboolean")
)

(define-method stop_task
  (of-object "GstPad")
  (c-name "gst_pad_stop_task")
  (return-type "gboolean")
)

(define-method set_internal_link_function
  (of-object "GstPad")
  (c-name "gst_pad_set_internal_link_function")
  (return-type "none")
  (parameters
    '("GstPadIntLinkFunction" "intlink")
  )
)

(define-method get_internal_links
  (of-object "GstPad")
  (c-name "gst_pad_get_internal_links")
  (return-type "GList*")
)

(define-method get_internal_links_default
  (of-object "GstPad")
  (c-name "gst_pad_get_internal_links_default")
  (return-type "GList*")
)

(define-method set_iterate_internal_links_function
  (of-object "GstPad")
  (c-name "gst_pad_set_iterate_internal_links_function")
  (return-type "none")
  (parameters
    '("GstPadIterIntLinkFunction" "iterintlink")
  )
)

(define-method iterate_internal_links
  (of-object "GstPad")
  (c-name "gst_pad_iterate_internal_links")
  (return-type "GstIterator*")
)

(define-method iterate_internal_links_default
  (of-object "GstPad")
  (c-name "gst_pad_iterate_internal_links_default")
  (return-type "GstIterator*")
)

(define-method set_query_type_function
  (of-object "GstPad")
  (c-name "gst_pad_set_query_type_function")
  (return-type "none")
  (parameters
    '("GstPadQueryTypeFunction" "type_func")
  )
)

(define-method get_query_types
  (of-object "GstPad")
  (c-name "gst_pad_get_query_types")
  (return-type "const-GstQueryType*")
)

(define-method get_query_types_default
  (of-object "GstPad")
  (c-name "gst_pad_get_query_types_default")
  (return-type "const-GstQueryType*")
)

(define-method query
  (of-object "GstPad")
  (c-name "gst_pad_query")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-method peer_query
  (of-object "GstPad")
  (c-name "gst_pad_peer_query")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-method set_query_function
  (of-object "GstPad")
  (c-name "gst_pad_set_query_function")
  (return-type "none")
  (parameters
    '("GstPadQueryFunction" "query")
  )
)

(define-method query_default
  (of-object "GstPad")
  (c-name "gst_pad_query_default")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-method dispatcher
  (of-object "GstPad")
  (c-name "gst_pad_dispatcher")
  (return-type "gboolean")
  (parameters
    '("GstPadDispatcherFunction" "dispatch")
    '("gpointer" "data")
  )
)

(define-method add_data_probe
  (of-object "GstPad")
  (c-name "gst_pad_add_data_probe")
  (return-type "gulong")
  (parameters
    '("GCallback" "handler")
    '("gpointer" "data")
  )
)

(define-method remove_data_probe
  (of-object "GstPad")
  (c-name "gst_pad_remove_data_probe")
  (return-type "none")
  (parameters
    '("guint" "handler_id")
  )
)

(define-method add_event_probe
  (of-object "GstPad")
  (c-name "gst_pad_add_event_probe")
  (return-type "gulong")
  (parameters
    '("GCallback" "handler")
    '("gpointer" "data")
  )
)

(define-method remove_event_probe
  (of-object "GstPad")
  (c-name "gst_pad_remove_event_probe")
  (return-type "none")
  (parameters
    '("guint" "handler_id")
  )
)

(define-method add_buffer_probe
  (of-object "GstPad")
  (c-name "gst_pad_add_buffer_probe")
  (return-type "gulong")
  (parameters
    '("GCallback" "handler")
    '("gpointer" "data")
  )
)

(define-method remove_buffer_probe
  (of-object "GstPad")
  (c-name "gst_pad_remove_buffer_probe")
  (return-type "none")
  (parameters
    '("guint" "handler_id")
  )
)

(define-method found_tags_for_pad
  (of-object "GstElement")
  (c-name "gst_element_found_tags_for_pad")
  (return-type "none")
  (parameters
    '("GstPad*" "pad")
    '("GstTagList*" "list")
  )
)

(define-method found_tags
  (of-object "GstElement")
  (c-name "gst_element_found_tags")
  (return-type "none")
  (parameters
    '("GstTagList*" "list")
  )
)

(define-function parse_bin_from_description
  (c-name "gst_parse_bin_from_description")
  (return-type "GstElement*")
  (parameters
    '("const-gchar*" "bin_description")
    '("gboolean" "ghost_unconnected_pads")
    '("GError**" "err")
  )
)

(define-function util_get_timestamp
  (c-name "gst_util_get_timestamp")
  (return-type "GstClockTime")
)

(define-function util_array_binary_search
  (c-name "gst_util_array_binary_search")
  (return-type "gpointer")
  (parameters
    '("gpointer" "array")
    '("guint" "num_elements")
    '("gsize" "element_size")
    '("GCompareDataFunc" "search_func")
    '("GstSearchMode" "mode")
    '("gconstpointer" "search_data")
    '("gpointer" "user_data")
  )
)
(define-function util_greatest_common_divisor
  (c-name "gst_util_greatest_common_divisor")
  (return-type "gint")
  (parameters
    '("gint" "a")
    '("gint" "b")
  )
)

(define-function util_fraction_to_double
  (c-name "gst_util_fraction_to_double")
  (return-type "none")
  (parameters
    '("gint" "src_n")
    '("gint" "src_d")
    '("gdouble*" "dest")
  )
)

(define-function util_double_to_fraction
  (c-name "gst_util_double_to_fraction")
  (return-type "none")
  (parameters
    '("gdouble" "src")
    '("gint*" "dest_n")
    '("gint*" "dest_d")
  )
)

(define-function util_fraction_multiply
  (c-name "gst_util_fraction_multiply")
  (return-type "gboolean")
  (parameters
    '("gint" "a_n")
    '("gint" "a_d")
    '("gint" "b_n")
    '("gint" "b_d")
    '("gint*" "res_n")
    '("gint*" "res_d")
  )
)

(define-function util_fraction_add
  (c-name "gst_util_fraction_add")
  (return-type "gboolean")
  (parameters
    '("gint" "a_n")
    '("gint" "a_d")
    '("gint" "b_n")
    '("gint" "b_d")
    '("gint*" "res_n")
    '("gint*" "res_d")
  )
)

(define-function util_fraction_compare
  (c-name "gst_util_fraction_compare")
  (return-type "gint")
  (parameters
    '("gint" "a_n")
    '("gint" "a_d")
    '("gint" "b_n")
    '("gint" "b_d")
  )
)

(define-function event_new_sink_message
  (c-name "gst_event_new_sink_message")
  (return-type "GstEvent*")
  (parameters
    '("GstMessage*" "msg")
  )
)

(define-method parse_sink_message
  (of-object "GstEvent")
  (c-name "gst_event_parse_sink_message")
  (return-type "none")
  (parameters
    '("GstMessage**" "msg")
  )
)

(define-function pad_load_and_link
  (c-name "gst_pad_load_and_link")
  (return-type "none")
  (parameters
    '("GstXmlNodePtr" "self")
    '("GstObject*" "parent")
  )
)

(define-function pad_template_get_type
  (c-name "gst_pad_template_get_type")
  (return-type "GType")
)

(define-function pad_template_new
  (c-name "gst_pad_template_new")
  (is-constructor-of "GstPadTemplate")
  (return-type "GstPadTemplate*")
  (parameters
    '("const-gchar*" "name_template")
    '("GstPadDirection" "direction")
    '("GstPadPresence" "presence")
    '("GstCaps*" "caps" (keep-refcount))
  )
)

(define-method get
  (of-object "GstStaticPadTemplate")
  (c-name "gst_static_pad_template_get")
  (return-type "GstPadTemplate*")
  (caller-owns-return #t)
)

(define-method get_caps
  (of-object "GstStaticPadTemplate")
  (c-name "gst_static_pad_template_get_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method get_caps
  (of-object "GstPadTemplate")
  (c-name "gst_pad_template_get_caps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method pad_created
  (of-object "GstPadTemplate")
  (c-name "gst_pad_template_pad_created")
  (return-type "none")
  (parameters
    '("GstPad*" "pad")
  )
)


;; From ../gstreamer/gst/gstparse.h

(define-function parse_error_quark
  (c-name "gst_parse_error_quark")
  (return-type "GQuark")
)

(define-function gst_parse_context_new
  (c-name "gst_parse_context_new")
  (is-constructor-of "GstParseContext")
  (return-type "GstParseContext*")
)

(define-method get_missing_elements
  (of-object "GstParseContext")
  (c-name "gst_parse_context_get_missing_elements")
  (return-type "GStrv")
)

(define-method free
  (of-object "GstParseContext")
  (c-name "gst_parse_context_free")
  (return-type "none")
)

(define-function parse_launch
  (c-name "gst_parse_launch")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "pipeline_description")
    '("GError**" "error")
  )
)

(define-function parse_launchv
  (c-name "gst_parse_launchv")
  (return-type "GstElement*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar**" "argv")
    '("GError**" "error")
  )
)

(define-function parse_launch_full
  (c-name "gst_parse_launch_full")
  (return-type "GstElement*")
  (parameters
    '("const-gchar*" "pipeline_description")
    '("GstParseContext*" "context")
    '("GstParseFlags" "flags")
    '("GError**" "error")
  )
)

(define-function parse_launchv_full
  (c-name "gst_parse_launchv_full")
  (return-type "GstElement*")
  (parameters
    '("const-gchar**" "argv")
    '("GstParseContext*" "context")
    '("GstParseFlags" "flags")
    '("GError**" "error")
  )
)


;; From ../gstreamer/gst/gstpipeline.h

(define-function pipeline_get_type
  (c-name "gst_pipeline_get_type")
  (return-type "GType")
)

(define-function pipeline_new
  (c-name "gst_pipeline_new")
  (is-constructor-of "GstPipeline")
  (return-type "GstElement*")
  (properties
    '("name" (argname "name") (optional))
  )
)

(define-method get_bus
  (of-object "GstPipeline")
  (c-name "gst_pipeline_get_bus")
  (return-type "GstBus*")
  (caller-owns-return #t)
)

(define-method set_new_stream_time
  (of-object "GstPipeline")
  (c-name "gst_pipeline_set_new_stream_time")
  (return-type "none")
  (parameters
    '("GstClockTime" "time")
  )
)

(define-method get_last_stream_time
  (of-object "GstPipeline")
  (c-name "gst_pipeline_get_last_stream_time")
  (return-type "GstClockTime")
)

(define-method use_clock
  (of-object "GstPipeline")
  (c-name "gst_pipeline_use_clock")
  (return-type "none")
  (parameters
    '("GstClock*" "clock")
  )
)

(define-method set_clock
  (of-object "GstPipeline")
  (c-name "gst_pipeline_set_clock")
  (return-type "gboolean")
  (parameters
    '("GstClock*" "clock")
  )
)

(define-method get_clock
  (of-object "GstPipeline")
  (c-name "gst_pipeline_get_clock")
  (return-type "GstClock*")
  (caller-owns-return #t)
)

(define-method auto_clock
  (of-object "GstPipeline")
  (c-name "gst_pipeline_auto_clock")
  (return-type "none")
)

(define-method set_delay
  (of-object "GstPipeline")
  (c-name "gst_pipeline_set_delay")
  (return-type "none")
  (parameters
    '("GstClockTime" "delay")
  )
)

(define-method get_delay
  (of-object "GstPipeline")
  (c-name "gst_pipeline_get_delay")
  (return-type "GstClockTime")
)

(define-method set_auto_flush_bus
  (of-object "GstPipeline")
  (c-name "gst_pipeline_set_auto_flush_bus")
  (return-type "none")
  (parameters
    '("gboolean" "auto_flush")
  )
)

(define-method get_auto_flush_bus
  (of-object "GstPipeline")
  (c-name "gst_pipeline_get_auto_flush_bus")
  (return-type "gboolean")
)



;; From ../gstreamer/gst/gstplugin.h

(define-function plugin_error_quark
  (c-name "gst_plugin_error_quark")
  (return-type "GQuark")
)

(define-function plugin_get_type
  (c-name "gst_plugin_get_type")
  (return-type "GType")
)

(define-function plugin_register_static
  (c-name "gst_plugin_register_static")
  (return-type "gboolean")
  (parameters
    '("const-GstPluginDesc*" "desc")
  )
)

(define-method get_name
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_name")
  (return-type "const-gchar*")
)

(define-method get_description
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_description")
  (return-type "const-gchar*")
)

(define-method get_filename
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_filename")
  (return-type "const-gchar*")
)

(define-method get_version
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_version")
  (return-type "const-gchar*")
)

(define-method get_license
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_license")
  (return-type "const-gchar*")
)

(define-method get_source
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_source")
  (return-type "const-gchar*")
)

(define-method get_package
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_package")
  (return-type "const-gchar*")
)

(define-method get_origin
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_origin")
  (return-type "const-gchar*")
)

(define-method get_cache_data
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_cache_data")
  (return-type "const-GstStructure*")
)

(define-method set_cache_data
  (of-object "GstPlugin")
  (c-name "gst_plugin_set_cache_data")
  (return-type "none")
  (parameters
    '("GstStructure*" "cache_data")
  )
)

(define-method get_module
  (of-object "GstPlugin")
  (c-name "gst_plugin_get_module")
  (return-type "GModule*")
)

(define-method is_loaded
  (of-object "GstPlugin")
  (c-name "gst_plugin_is_loaded")
  (return-type "gboolean")
)

(define-method name_filter
  (of-object "GstPlugin")
  (c-name "gst_plugin_name_filter")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function plugin_load_file
  (c-name "gst_plugin_load_file")
  (return-type "GstPlugin*")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)


(define-method load
  (of-object "GstPlugin")
  (c-name "gst_plugin_load")
  (return-type "GstPlugin*")
)

(define-function plugin_load_by_name
  (c-name "gst_plugin_load_by_name")
  (return-type "GstPlugin*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function plugin_list_free
  (c-name "gst_plugin_list_free")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)



;; From ../gstreamer/gst/gstpluginfeature.h

(define-function plugin_feature_get_type
  (c-name "gst_plugin_feature_get_type")
  (return-type "GType")
)

(define-method load
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_load")
  (return-type "GstPluginFeature*")
)

(define-method type_name_filter
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_type_name_filter")
  (return-type "gboolean")
  (parameters
    '("GstTypeNameData*" "data")
  )
)

(define-method set_rank
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_set_rank")
  (return-type "none")
  (parameters
    '("guint" "rank")
  )
)

(define-method set_name
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_rank
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_get_rank")
  (return-type "guint")
)

(define-method get_name
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_get_name")
  (return-type "const-gchar*")
)

(define-function plugin_feature_list_free
  (c-name "gst_plugin_feature_list_free")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function plugin_feature_list_copy
  (c-name "gst_plugin_feature_list_copy")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
  )
)

(define-method check_version
  (of-object "GstPluginFeature")
  (c-name "gst_plugin_feature_check_version")
  (return-type "gboolean")
  (parameters
    '("guint" "min_major")
    '("guint" "min_minor")
    '("guint" "min_micro")
  )
)

(define-function plugin_feature_rank_compare_func
  (c-name "gst_plugin_feature_rank_compare_func")
  (return-type "gint")
  (parameters
    '("gconstpointer" "p1")
    '("gconstpointer" "p2")
  )
)


;; From gstpoll.h

(define-function gst_poll_new
  (c-name "gst_poll_new")
  (is-constructor-of "GstPoll")
  (return-type "GstPoll*")
  (parameters
    '("gboolean" "controllable")
  )
)

(define-function poll_new_timer
  (c-name "gst_poll_new_timer")
  (caller-owns-return #t)
  (return-type "GstPoll*")
)

(define-method free
  (of-object "GstPoll")
  (c-name "gst_poll_free")
  (return-type "none")
)

(define-method init
  (of-object "GstPollFD")
  (c-name "gst_poll_fd_init")
  (return-type "none")
)

(define-method add_fd
  (of-object "GstPoll")
  (c-name "gst_poll_add_fd")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method remove_fd
  (of-object "GstPoll")
  (c-name "gst_poll_remove_fd")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method fd_ctl_write
  (of-object "GstPoll")
  (c-name "gst_poll_fd_ctl_write")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
    '("gboolean" "active")
  )
)

(define-method fd_ctl_read
  (of-object "GstPoll")
  (c-name "gst_poll_fd_ctl_read")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
    '("gboolean" "active")
  )
)

(define-method fd_ignored
  (of-object "GstPoll")
  (c-name "gst_poll_fd_ignored")
  (return-type "none")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method fd_has_closed
  (of-object "GstPoll")
  (c-name "gst_poll_fd_has_closed")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method fd_has_error
  (of-object "GstPoll")
  (c-name "gst_poll_fd_has_error")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method fd_can_read
  (of-object "GstPoll")
  (c-name "gst_poll_fd_can_read")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method fd_can_write
  (of-object "GstPoll")
  (c-name "gst_poll_fd_can_write")
  (return-type "gboolean")
  (parameters
    '("GstPollFD*" "fd")
  )
)

(define-method wait
  (of-object "GstPoll")
  (c-name "gst_poll_wait")
  (return-type "gint")
  (parameters
    '("GstClockTime" "timeout")
  )
)

(define-method set_controllable
  (of-object "GstPoll")
  (c-name "gst_poll_set_controllable")
  (return-type "gboolean")
  (parameters
    '("gboolean" "controllable")
  )
)

(define-method restart
  (of-object "GstPoll")
  (c-name "gst_poll_restart")
  (return-type "none")
)

(define-method set_flushing
  (of-object "GstPoll")
  (c-name "gst_poll_set_flushing")
  (return-type "none")
  (parameters
    '("gboolean" "flushing")
  )
)

(define-method write_control
  (of-object "GstPoll")
  (c-name "gst_poll_write_control")
  (return-type "gboolean")
)

(define-method read_control
  (of-object "GstPoll")
  (c-name "gst_poll_read_control")
  (return-type "gboolean")
)

;; From gstpreset.h

(define-function gst_preset_get_type
  (c-name "gst_preset_get_type")
  (return-type "GType")
)

(define-method get_preset_names
  (of-object "GstPreset")
  (c-name "gst_preset_get_preset_names")
  (return-type "GStrv")
)

(define-method get_property_names
  (of-object "GstPreset")
  (c-name "gst_preset_get_property_names")
  (return-type "GStrv")
)

(define-method load_preset
  (of-object "GstPreset")
  (c-name "gst_preset_load_preset")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method save_preset
  (of-object "GstPreset")
  (c-name "gst_preset_save_preset")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method rename_preset
  (of-object "GstPreset")
  (c-name "gst_preset_rename_preset")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "old_name")
    '("const-gchar*" "new_name")
  )
)

(define-method delete_preset
  (of-object "GstPreset")
  (c-name "gst_preset_delete_preset")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_meta
  (of-object "GstPreset")
  (c-name "gst_preset_set_meta")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "tag")
    '("const-gchar*" "value")
  )
)

(define-method get_meta
  (of-object "GstPreset")
  (c-name "gst_preset_get_meta")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "tag")
    '("gchar**" "value")
  )
)


;; From ../gstreamer/gst/gstquery.h

(define-method get_name
  (of-object "GstQueryType")
  (c-name "gst_query_type_get_name")
  (return-type "const-gchar*")
)

(define-method to_quark
  (of-object "GstQueryType")
  (c-name "gst_query_type_to_quark")
  (return-type "GQuark")
)

(define-function query_get_type
  (c-name "gst_query_get_type")
  (return-type "GType")
)

(define-function query_type_register
  (c-name "gst_query_type_register")
  (return-type "GstQueryType")
  (parameters
    '("const-gchar*" "nick")
    '("const-gchar*" "description")
  )
)

(define-function query_type_get_by_nick
  (c-name "gst_query_type_get_by_nick")
  (return-type "GstQueryType")
  (parameters
    '("const-gchar*" "nick")
  )
)

(define-method s_contains
  (of-object "GstQueryType")
  (c-name "gst_query_types_contains")
  (return-type "gboolean")
  (parameters
    '("GstQueryType" "type")
  )
)

(define-method get_details
  (of-object "GstQueryType")
  (c-name "gst_query_type_get_details")
  (return-type "const-GstQueryTypeDefinition*")
)

(define-function query_type_iterate_definitions
  (c-name "gst_query_type_iterate_definitions")
  (return-type "GstIterator*")
)

(define-function query_new_position
  (c-name "gst_query_new_position")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_position
  (of-object "GstQuery")
  (c-name "gst_query_set_position")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gint64" "cur")
  )
)

(define-method parse_position
  (of-object "GstQuery")
  (c-name "gst_query_parse_position")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "cur")
  )
)

(define-function query_new_duration
  (c-name "gst_query_new_duration")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_duration
  (of-object "GstQuery")
  (c-name "gst_query_set_duration")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gint64" "duration")
  )
)

(define-method parse_duration
  (of-object "GstQuery")
  (c-name "gst_query_parse_duration")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "duration")
  )
)

(define-function query_new_latency
  (c-name "gst_query_new_latency")
  (caller-owns-return #t)
  (return-type "GstQuery*")
)

(define-method set_latency
  (of-object "GstQuery")
  (c-name "gst_query_set_latency")
  (return-type "none")
  (parameters
    '("gboolean" "live")
    '("GstClockTime" "min_latency")
    '("GstClockTime" "max_latency")
  )
)

(define-method parse_latency
  (of-object "GstQuery")
  (c-name "gst_query_parse_latency")
  (return-type "none")
  (parameters
    '("gboolean*" "live")
    '("GstClockTime*" "min_latency")
    '("GstClockTime*" "max_latency")
  )
)

(define-function query_new_convert
  (c-name "gst_query_new_convert")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "src_fmt")
    '("gint64" "value")
    '("GstFormat" "dest_fmt")
  )
)

(define-method set_convert
  (of-object "GstQuery")
  (c-name "gst_query_set_convert")
  (return-type "none")
  (parameters
    '("GstFormat" "src_format")
    '("gint64" "src_value")
    '("GstFormat" "dest_format")
    '("gint64" "dest_value")
  )
)

(define-method parse_convert
  (of-object "GstQuery")
  (c-name "gst_query_parse_convert")
  (return-type "none")
  (parameters
    '("GstFormat*" "src_format")
    '("gint64*" "src_value")
    '("GstFormat*" "dest_format")
    '("gint64*" "dest_value")
  )
)

(define-function query_new_segment
  (c-name "gst_query_new_segment")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_segment
  (of-object "GstQuery")
  (c-name "gst_query_set_segment")
  (return-type "none")
  (parameters
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("gint64" "start_value")
    '("gint64" "stop_value")
  )
)

(define-method parse_segment
  (of-object "GstQuery")
  (c-name "gst_query_parse_segment")
  (return-type "none")
  (parameters
    '("gdouble*" "rate")
    '("GstFormat*" "format")
    '("gint64*" "start_value")
    '("gint64*" "stop_value")
  )
)

(define-function query_new_application
  (c-name "gst_query_new_application")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstQueryType" "type")
    '("GstStructure*" "structure")
  )
)

(define-method get_structure
  (of-object "GstQuery")
  (c-name "gst_query_get_structure")
  (return-type "GstStructure*")
)


(define-function query_new_seeking
  (c-name "gst_query_new_seeking")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_seeking
  (of-object "GstQuery")
  (c-name "gst_query_set_seeking")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gboolean" "seekable")
    '("gint64" "segment_start")
    '("gint64" "segment_end")
  )
)

(define-method parse_seeking
  (of-object "GstQuery")
  (c-name "gst_query_parse_seeking")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gboolean*" "seekable")
    '("gint64*" "segment_start")
    '("gint64*" "segment_end")
  )
)

(define-function query_new_formats
  (c-name "gst_query_new_formats")
  (caller-owns-return #t)
  (return-type "GstQuery*")
)

(define-method set_formats
  (of-object "GstQuery")
  (c-name "gst_query_set_formats")
  (return-type "none")
  (parameters
    '("gint" "n_formats")
  )
  (varargs #t)
)

(define-method set_formatsv
  (of-object "GstQuery")
  (c-name "gst_query_set_formatsv")
  (return-type "none")
  (parameters
    '("gint" "n_formats")
    '("GstFormat*" "formats")
  )
)

(define-method parse_formats_length
  (of-object "GstQuery")
  (c-name "gst_query_parse_formats_length")
  (return-type "none")
  (parameters
    '("guint*" "n_formats")
  )
)

(define-method parse_formats_nth
  (of-object "GstQuery")
  (c-name "gst_query_parse_formats_nth")
  (return-type "none")
  (parameters
    '("guint" "nth")
    '("GstFormat*" "format")
  )
)

(define-function query_new_buffering
  (c-name "gst_query_new_buffering")
  (return-type "GstQuery*")
  (caller-owns-return #t)
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_buffering_percent
  (of-object "GstQuery")
  (c-name "gst_query_set_buffering_percent")
  (return-type "none")
  (parameters
    '("gboolean" "busy")
    '("gint" "percent")
  )
)

(define-method parse_buffering_percent
  (of-object "GstQuery")
  (c-name "gst_query_parse_buffering_percent")
  (return-type "none")
  (parameters
    '("gboolean*" "busy")
    '("gint*" "percent")
  )
)

(define-method set_buffering_stats
  (of-object "GstQuery")
  (c-name "gst_query_set_buffering_stats")
  (return-type "none")
  (parameters
    '("GstBufferingMode" "mode")
    '("gint" "avg_in")
    '("gint" "avg_out")
    '("gint64" "buffering_left")
  )
)

(define-method parse_buffering_stats
  (of-object "GstQuery")
  (c-name "gst_query_parse_buffering_stats")
  (return-type "none")
  (parameters
    '("GstBufferingMode*" "mode")
    '("gint*" "avg_in")
    '("gint*" "avg_out")
    '("gint64*" "buffering_left")
  )
)

(define-method set_buffering_range
  (of-object "GstQuery")
  (c-name "gst_query_set_buffering_range")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gint64" "start")
    '("gint64" "stop")
    '("gint64" "estimated_total")
  )
)

(define-method parse_buffering_range
  (of-object "GstQuery")
  (c-name "gst_query_parse_buffering_range")
  (return-type "none")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "start")
    '("gint64*" "stop")
    '("gint64*" "estimated_total")
  )
)

(define-method add_buffering_range
  (of-object "GstQuery")
  (c-name "gst_query_add_buffering_range")
  (return-type "gboolean")
  (parameters
    '("gint64" "start")
    '("gint64" "stop")
  )
)

(define-method get_n_buffering_ranges
  (of-object "GstQuery")
  (c-name "gst_query_get_n_buffering_ranges")
  (return-type "guint")
)

(define-method parse_nth_buffering_range
  (of-object "GstQuery")
  (c-name "gst_query_parse_nth_buffering_range")
  (return-type "gboolean")
  (parameters
    '("guint" "index")
    '("gint64*" "start")
    '("gint64*" "stop")
  )
)

(define-function query_new_uri
  (c-name "gst_query_new_uri")
  (caller-owns-return #t)
  (return-type "GstQuery*")
)

(define-method parse_uri
  (of-object "GstQuery")
  (c-name "gst_query_parse_uri")
  (return-type "none")
  (parameters
    '("gchar**" "uri")
  )
)

(define-method set_uri
  (of-object "GstQuery")
  (c-name "gst_query_set_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)


;; From ../gstreamer/gst/gstregistry.h

(define-function registry_get_type
  (c-name "gst_registry_get_type")
  (return-type "GType")
)

(define-function registry_get_default
  (c-name "gst_registry_get_default")
  (return-type "GstRegistry*")
)

(define-method scan_path
  (of-object "GstRegistry")
  (c-name "gst_registry_scan_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method add_path
  (of-object "GstRegistry")
  (c-name "gst_registry_add_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method get_path_list
  (of-object "GstRegistry")
  (c-name "gst_registry_get_path_list")
  (return-type "GList*")
)

(define-method add_plugin
  (of-object "GstRegistry")
  (c-name "gst_registry_add_plugin")
  (return-type "gboolean")
  (parameters
    '("GstPlugin*" "plugin")
  )
)

(define-method remove_plugin
  (of-object "GstRegistry")
  (c-name "gst_registry_remove_plugin")
  (return-type "none")
  (parameters
    '("GstPlugin*" "plugin")
  )
)

(define-method get_plugin_list
  (of-object "GstRegistry")
  (c-name "gst_registry_get_plugin_list")
  (return-type "GList*")
)

(define-method plugin_filter
  (of-object "GstRegistry")
  (c-name "gst_registry_plugin_filter")
  (return-type "GList*")
  (parameters
    '("GstPluginFilter" "filter")
    '("gboolean" "first")
    '("gpointer" "user_data")
  )
)

(define-method find_plugin
  (of-object "GstRegistry")
  (c-name "gst_registry_find_plugin")
  (return-type "GstPlugin*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method feature_filter
  (of-object "GstRegistry")
  (c-name "gst_registry_feature_filter")
  (return-type "GList*")
  (parameters
    '("GstPluginFeatureFilter" "filter")
    '("gboolean" "first")
    '("gpointer" "user_data")
  )
)

(define-method get_feature_list
  (of-object "GstRegistry")
  (c-name "gst_registry_get_feature_list")
  (return-type "GList*")
  (parameters
    '("GType" "type")
  )
)

(define-method get_feature_list_by_plugin
  (of-object "GstRegistry")
  (c-name "gst_registry_get_feature_list_by_plugin")
  (return-type "GList*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_feature_list_cookie
  (of-object "GstRegistry")
  (c-name "gst_registry_get_feature_list_cookie")
  (return-type "guint32")
)

(define-method add_feature
  (of-object "GstRegistry")
  (c-name "gst_registry_add_feature")
  (return-type "gboolean")
  (parameters
    '("GstPluginFeature*" "feature")
  )
)

(define-method remove_feature
  (of-object "GstRegistry")
  (c-name "gst_registry_remove_feature")
  (return-type "none")
  (parameters
    '("GstPluginFeature*" "feature")
  )
)


(define-method find_feature
  (of-object "GstRegistry")
  (c-name "gst_registry_find_feature")
  (return-type "GstPluginFeature*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
    '("GType" "type")
  )
)

(define-method lookup_feature
  (of-object "GstRegistry")
  (c-name "gst_registry_lookup_feature")
  (return-type "GstPluginFeature*")
  (caller-owns-return #t)
  (parameters
    '("const-char*" "name")
  )
)

(define-method lookup
  (of-object "GstRegistry")
  (c-name "gst_registry_lookup")
  (return-type "GstPlugin*")
  (caller-owns-return #t)
  (parameters
    '("const-char*" "filename")
  )
)

(define-method xml_read_cache
  (of-object "GstRegistry")
  (c-name "gst_registry_xml_read_cache")
  (return-type "gboolean")
  (parameters
    '("const-char*" "location")
  )
)

(define-method xml_write_cache
  (of-object "GstRegistry")
  (c-name "gst_registry_xml_write_cache")
  (return-type "gboolean")
  (parameters
    '("const-char*" "location")
  )
)

(define-function default_registry_check_feature_version
  (c-name "gst_default_registry_check_feature_version")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "feature_name")
    '("guint" "min_major")
    '("guint" "min_minor")
    '("guint" "min_micro")
  )
)

;; From ../gstreamer/gst/gstsegment.h

(define-function gst_segment_get_type
  (c-name "gst_segment_get_type")
  (return-type "GType")
)

(define-function gst_segment_new
  (c-name "gst_segment_new")
  (is-constructor-of "GstSegment")
  (return-type "GstSegment*")
)

(define-method free
  (of-object "GstSegment")
  (c-name "gst_segment_free")
  (return-type "none")
)

(define-method init
  (of-object "GstSegment")
  (c-name "gst_segment_init")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
  )
)

(define-method set_duration
  (of-object "GstSegment")
  (c-name "gst_segment_set_duration")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gint64" "duration")
  )
)

(define-method set_last_stop
  (of-object "GstSegment")
  (c-name "gst_segment_set_last_stop")
  (return-type "none")
  (parameters
    '("GstFormat" "format")
    '("gint64" "position")
  )
)

(define-method set_seek
  (of-object "GstSegment")
  (c-name "gst_segment_set_seek")
  (return-type "none")
  (parameters
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("GstSeekFlags" "flags")
    '("GstSeekType" "start_type")
    '("gint64" "start")
    '("GstSeekType" "stop_type")
    '("gint64" "stop")
    '("gboolean*" "update")
  )
)

(define-method set_newsegment
  (of-object "GstSegment")
  (c-name "gst_segment_set_newsegment")
  (return-type "none")
  (parameters
    '("gboolean" "update")
    '("gdouble" "rate")
    '("GstFormat" "format")
    '("gint64" "start")
    '("gint64" "stop")
    '("gint64" "time")
  )
)

(define-method set_newsegment_full
  (of-object "GstSegment")
  (c-name "gst_segment_set_newsegment_full")
  (return-type "none")
  (parameters
    '("gboolean" "update")
    '("gdouble" "rate")
    '("gdouble" "applied_rate")
    '("GstFormat" "format")
    '("gint64" "start")
    '("gint64" "stop")
    '("gint64" "time")
  )
)

(define-method to_stream_time
  (of-object "GstSegment")
  (c-name "gst_segment_to_stream_time")
  (return-type "gint64")
  (parameters
    '("GstFormat" "format")
    '("gint64" "position")
  )
)

(define-method to_running_time
  (of-object "GstSegment")
  (c-name "gst_segment_to_running_time")
  (return-type "gint64")
  (parameters
    '("GstFormat" "format")
    '("gint64" "position")
  )
)

(define-method to_position
  (of-object "GstSegment")
  (c-name "gst_segment_to_position")
  (return-type "gint64")
  (parameters
    '("GstFormat" "format")
    '("gint64" "running_time")
  )
)

(define-method clip
  (of-object "GstSegment")
  (c-name "gst_segment_clip")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "format")
    '("gint64" "start")
    '("gint64" "stop")
    '("gint64*" "clip_start")
    '("gint64*" "clip_stop")
  )
)

(define-method set_running_time
  (of-object "GstSegment")
  (c-name "gst_segment_set_running_time")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "format")
    '("gint64" "running_time")
  )
)



;; From ../gstreamer/gst/gststructure.h

(define-function structure_get_type
  (c-name "gst_structure_get_type")
  (return-type "GType")
)

(define-function structure_empty_new
  (c-name "gst_structure_empty_new")
  (is-constructor-of "GstStructureEmpty")
  (return-type "GstStructure*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function structure_id_empty_new
  (c-name "gst_structure_id_empty_new")
  (is-constructor-of "GstStructureIdEmpty")
  (return-type "GstStructure*")
  (parameters
    '("GQuark" "quark")
  )
)

(define-function structure_new
  (c-name "gst_structure_new")
  (is-constructor-of "GstStructure")
  (return-type "GstStructure*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "firstfield")
  )
  (varargs #t)
)

(define-function structure_new_valist
  (c-name "gst_structure_new_valist")
  (return-type "GstStructure*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "firstfield")
    '("va_list" "varargs")
  )
)

(define-function gst_structure_id_new
  (c-name "gst_structure_id_new")
  (is-constructor-of "GstStructureId")
  (return-type "GstStructure*")
  (parameters
    '("GQuark" "name_quark")
    '("GQuark" "field_quark")
  )
  (varargs #t)
)

(define-method copy
  (of-object "GstStructure")
  (c-name "gst_structure_copy")
  (return-type "GstStructure*")
  (caller-owns-return #t)
)

(define-method set_parent_refcount
  (of-object "GstStructure")
  (c-name "gst_structure_set_parent_refcount")
  (return-type "none")
  (parameters
    '("gint*" "refcount")
  )
)

(define-method free
  (of-object "GstStructure")
  (c-name "gst_structure_free")
  (return-type "none")
)

(define-method get_name
  (of-object "GstStructure")
  (c-name "gst_structure_get_name")
  (return-type "const-gchar*")
)

(define-method get_name_id
  (of-object "GstStructure")
  (c-name "gst_structure_get_name_id")
  (return-type "GQuark")
)

(define-method has_name
  (of-object "GstStructure")
  (c-name "gst_structure_has_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_name
  (of-object "GstStructure")
  (c-name "gst_structure_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method id_set_value
  (of-object "GstStructure")
  (c-name "gst_structure_id_set_value")
  (return-type "none")
  (parameters
    '("GQuark" "field")
    '("const-GValue*" "value")
  )
)

(define-method set_value
  (of-object "GstStructure")
  (c-name "gst_structure_set_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
    '("const-GValue*" "value")
  )
)

(define-method id_take_value
  (of-object "GstStructure")
  (c-name "gst_structure_id_take_value")
  (return-type "none")
  (parameters
    '("GQuark" "field")
    '("GValue*" "value")
  )
)

(define-method take_value
  (of-object "GstStructure")
  (c-name "gst_structure_take_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "GstStructure")
  (c-name "gst_structure_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GstStructure")
  (c-name "gst_structure_set_valist")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
    '("va_list" "varargs")
  )
)

(define-method id_set
  (of-object "GstStructure")
  (c-name "gst_structure_id_set")
  (return-type "none")
  (parameters
    '("GQuark" "fieldname")
  )
  (varargs #t)
)

(define-method id_set_valist
  (of-object "GstStructure")
  (c-name "gst_structure_id_set_valist")
  (return-type "none")
  (parameters
    '("GQuark" "fieldname")
    '("va_list" "varargs")
  )
)

(define-method get_valist
  (of-object "GstStructure")
  (c-name "gst_structure_get_valist")
  (return-type "gboolean")
  (parameters
    '("const-char*" "first_fieldname")
    '("va_list" "args")
  )
)

(define-method get
  (of-object "GstStructure")
  (c-name "gst_structure_get")
  (return-type "gboolean")
  (parameters
    '("const-char*" "first_fieldname")
  )
  (varargs #t)
)

(define-method id_get_valist
  (of-object "GstStructure")
  (c-name "gst_structure_id_get_valist")
  (return-type "gboolean")
  (parameters
    '("GQuark" "first_field_id")
    '("va_list" "args")
  )
)

(define-method id_get
  (of-object "GstStructure")
  (c-name "gst_structure_id_get")
  (return-type "gboolean")
  (parameters
    '("GQuark" "first_field_id")
  )
  (varargs #t)
)

(define-method id_get_value
  (of-object "GstStructure")
  (c-name "gst_structure_id_get_value")
  (return-type "const-GValue*")
  (parameters
    '("GQuark" "field")
  )
)

(define-method get_value
  (of-object "GstStructure")
  (c-name "gst_structure_get_value")
  (return-type "const-GValue*")
  (parameters
    '("const-gchar*" "fieldname")
  )
)

(define-method remove_field
  (of-object "GstStructure")
  (c-name "gst_structure_remove_field")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
  )
)

(define-method remove_fields
  (of-object "GstStructure")
  (c-name "gst_structure_remove_fields")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
  )
  (varargs #t)
)

(define-method remove_fields_valist
  (of-object "GstStructure")
  (c-name "gst_structure_remove_fields_valist")
  (return-type "none")
  (parameters
    '("const-gchar*" "fieldname")
    '("va_list" "varargs")
  )
)

(define-method remove_all_fields
  (of-object "GstStructure")
  (c-name "gst_structure_remove_all_fields")
  (return-type "none")
)

(define-method get_field_type
  (of-object "GstStructure")
  (c-name "gst_structure_get_field_type")
  (return-type "GType")
  (parameters
    '("const-gchar*" "fieldname")
  )
)

(define-method foreach
  (of-object "GstStructure")
  (c-name "gst_structure_foreach")
  (return-type "gboolean")
  (parameters
    '("GstStructureForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method map_in_place
  (of-object "GstStructure")
  (c-name "gst_structure_map_in_place")
  (return-type "gboolean")
  (parameters
    '("GstStructureMapFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method n_fields
  (of-object "GstStructure")
  (c-name "gst_structure_n_fields")
  (return-type "gint")
)

(define-method nth_field_name
  (of-object "GstStructure")
  (c-name "gst_structure_nth_field_name")
  (return-type "const-gchar*")
  (parameters
    '("guint" "index")
  )
)

(define-method id_has_field
  (of-object "GstStructure")
  (c-name "gst_structure_id_has_field")
  (return-type "gboolean")
  (parameters
    '("GQuark" "field")
  )
)

(define-method id_has_field_typed
  (of-object "GstStructure")
  (c-name "gst_structure_id_has_field_typed")
  (return-type "gboolean")
  (parameters
    '("GQuark" "field")
    '("GType" "type")
  )
)

(define-method has_field
  (of-object "GstStructure")
  (c-name "gst_structure_has_field")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
  )
)

(define-method has_field_typed
  (of-object "GstStructure")
  (c-name "gst_structure_has_field_typed")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("GType" "type")
  )
)

(define-method keys
  (of-object "GstStructure")
  (c-name "gst_structure_keys")
  (return-type "GList*")
)


(define-method get_boolean
  (of-object "GstStructure")
  (c-name "gst_structure_get_boolean")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("gboolean*" "value")
  )
)

(define-method get_int
  (of-object "GstStructure")
  (c-name "gst_structure_get_int")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("gint*" "value")
  )
)

(define-method get_uint
  (of-object "GstStructure")
  (c-name "gst_structure_get_uint")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("guint*" "value")
  )
)

(define-method get_fourcc
  (of-object "GstStructure")
  (c-name "gst_structure_get_fourcc")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("guint32*" "value")
  )
)

(define-method get_double
  (of-object "GstStructure")
  (c-name "gst_structure_get_double")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("gdouble*" "value")
  )
)

(define-method get_date
  (of-object "GstStructure")
  (c-name "gst_structure_get_date")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("GDate**" "value")
  )
)

(define-method get_clock_time
  (of-object "GstStructure")
  (c-name "gst_structure_get_clock_time")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("GstClockTime*" "value")
  )
)

(define-method get_string
  (of-object "GstStructure")
  (c-name "gst_structure_get_string")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "fieldname")
  )
)

(define-method get_enum
  (of-object "GstStructure")
  (c-name "gst_structure_get_enum")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("GType" "enumtype")
    '("gint*" "value")
  )
)

(define-method get_fraction
  (of-object "GstStructure")
  (c-name "gst_structure_get_fraction")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fieldname")
    '("gint*" "value_numerator")
    '("gint*" "value_denominator")
  )
)

(define-method to_string
  (of-object "GstStructure")
  (c-name "gst_structure_to_string")
  (return-type "gchar*")
)

(define-function structure_from_string
  (c-name "gst_structure_from_string")
  (return-type "GstStructure*")
  (caller-owns-return #t)
  (parameters
    '("const-gchar*" "string")
    '("gchar**" "end")
  )
)

(define-method fixate_field_nearest_int
  (of-object "GstStructure")
  (c-name "gst_structure_fixate_field_nearest_int")
  (return-type "gboolean")
  (parameters
    '("const-char*" "field_name")
    '("int" "target")
  )
)

(define-method fixate_field_nearest_double
  (of-object "GstStructure")
  (c-name "gst_structure_fixate_field_nearest_double")
  (return-type "gboolean")
  (parameters
    '("const-char*" "field_name")
    '("double" "target")
  )
)

(define-method fixate_field_boolean
  (of-object "GstStructure")
  (c-name "gst_structure_fixate_field_boolean")
  (return-type "gboolean")
  (parameters
    '("const-char*" "field_name")
    '("gboolean" "target")
  )
)

(define-method fixate_field_string
  (of-object "GstStructure")
  (c-name "gst_structure_fixate_field_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "field_name")
    '("const-gchar*" "target")
  )
)

(define-method fixate_field_nearest_fraction
  (of-object "GstStructure")
  (c-name "gst_structure_fixate_field_nearest_fraction")
  (return-type "gboolean")
  (parameters
    '("const-char*" "field_name")
    '("const-gint" "target_numerator")
    '("const-gint" "target_denominator")
  )
)


;; From ../gstreamer/gst/gstsystemclock.h

(define-function system_clock_get_type
  (c-name "gst_system_clock_get_type")
  (return-type "GType")
)

(define-function system_clock_obtain
  (c-name "gst_system_clock_obtain")
  (return-type "GstClock*")
  (caller-owns-return #t)
)



;; From ../gstreamer/gst/gsttag.h

(define-function tag_list_get_type
  (c-name "gst_tag_list_get_type")
  (return-type "GType")
)

(define-function tag_register
  (c-name "gst_tag_register")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("GstTagFlag" "flag")
    '("GType" "type")
    '("const-gchar*" "nick")
    '("const-gchar*" "blurb")
    '("GstTagMergeFunc" "func")
  )
)

(define-function tag_merge_use_first
  (c-name "gst_tag_merge_use_first")
  (return-type "none")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "src")
  )
)

(define-function tag_merge_strings_with_comma
  (c-name "gst_tag_merge_strings_with_comma")
  (return-type "none")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "src")
  )
)

(define-function tag_exists
  (c-name "gst_tag_exists")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_get_tag_type
  (c-name "gst_tag_get_tag_type")
  (return-type "GType")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_get_nick
  (c-name "gst_tag_get_nick")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_get_description
  (c-name "gst_tag_get_description")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_get_flag
  (c-name "gst_tag_get_flag")
  (return-type "GstTagFlag")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_is_fixed
  (c-name "gst_tag_is_fixed")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-function tag_list_new
  (c-name "gst_tag_list_new")
  (is-constructor-of "GstTagList")
  (return-type "GstTagList*")
)

(define-function is_tag_list
  (c-name "gst_is_tag_list")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "p")
  )
)

(define-method copy
  (of-object "GstTagList")
  (c-name "gst_tag_list_copy")
  (return-type "GstTagList*")
  (caller-owns-return #t)
)

(define-method is_empty
  (of-object "GstTagList")
  (c-name "gst_tag_list_is_empty")
  (return-type "gboolean")
)

(define-method insert
  (of-object "GstTagList")
  (c-name "gst_tag_list_insert")
  (return-type "none")
  (parameters
    '("const-GstTagList*" "from")
    '("GstTagMergeMode" "mode")
  )
)

(define-method merge
  (of-object "GstTagList")
  (c-name "gst_tag_list_merge")
  (return-type "GstTagList*")
  (caller-owns-return #t)
  (parameters
    '("const-GstTagList*" "list2")
    '("GstTagMergeMode" "mode")
  )
)

(define-method free
  (of-object "GstTagList")
  (c-name "gst_tag_list_free")
  (return-type "none")
)

(define-method get_tag_size
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_tag_size")
  (return-type "guint")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-method add
  (of-object "GstTagList")
  (c-name "gst_tag_list_add")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
  )
  (varargs #t)
)

(define-method add_values
  (of-object "GstTagList")
  (c-name "gst_tag_list_add_values")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
  )
  (varargs #t)
)

(define-method add_valist
  (of-object "GstTagList")
  (c-name "gst_tag_list_add_valist")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("va_list" "var_args")
  )
)

(define-method add_valist_values
  (of-object "GstTagList")
  (c-name "gst_tag_list_add_valist_values")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("va_list" "var_args")
  )
)

(define-method add_value
  (of-object "GstTagList")
  (c-name "gst_tag_list_add_value")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("const-GValue*" "value")
  )
)

(define-method remove_tag
  (of-object "GstTagList")
  (c-name "gst_tag_list_remove_tag")
  (return-type "none")
  (parameters
    '("const-gchar*" "tag")
  )
)

(define-method foreach
  (of-object "GstTagList")
  (c-name "gst_tag_list_foreach")
  (return-type "none")
  (parameters
    '("GstTagForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method get_value_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_value_index")
  (return-type "const-GValue*")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
  )
)

(define-function tag_list_copy_value
  (c-name "gst_tag_list_copy_value")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-GstTagList*" "list")
    '("const-gchar*" "tag")
  )
)

(define-method get_char
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_char")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gchar*" "value")
  )
)

(define-method get_char_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_char_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gchar*" "value")
  )
)

(define-method get_uchar
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uchar")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guchar*" "value")
  )
)

(define-method get_uchar_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uchar_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("guchar*" "value")
  )
)

(define-method get_boolean
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_boolean")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gboolean*" "value")
  )
)

(define-method get_boolean_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_boolean_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gboolean*" "value")
  )
)

(define-method get_int
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_int")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gint*" "value")
  )
)

(define-method get_int_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_int_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gint*" "value")
  )
)

(define-method get_uint
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uint")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint*" "value")
  )
)

(define-method get_uint_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uint_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("guint*" "value")
  )
)

(define-method get_long
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_long")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("glong*" "value")
  )
)

(define-method get_long_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_long_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("glong*" "value")
  )
)

(define-method get_ulong
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_ulong")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gulong*" "value")
  )
)

(define-method get_ulong_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_ulong_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gulong*" "value")
  )
)

(define-method get_int64
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_int64")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gint64*" "value")
  )
)

(define-method get_int64_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_int64_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gint64*" "value")
  )
)

(define-method get_uint64
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uint64")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint64*" "value")
  )
)

(define-method get_uint64_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_uint64_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("guint64*" "value")
  )
)

(define-method get_float
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_float")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gfloat*" "value")
  )
)

(define-method get_float_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_float_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gfloat*" "value")
  )
)

(define-method get_double
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_double")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gdouble*" "value")
  )
)

(define-method get_double_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_double_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gdouble*" "value")
  )
)

(define-method get_string
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_string")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gchar**" "value")
  )
)

(define-method get_string_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_string_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gchar**" "value")
  )
)

(define-method peek_string_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_peek_string_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("const-gchar**" "value")
  )
)

(define-method get_pointer
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_pointer")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("gpointer*" "value")
  )
)

(define-method get_pointer_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_pointer_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("gpointer*" "value")
  )
)

(define-method get_date
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_date")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("GDate**" "value")
  )
)

(define-method get_date_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_date_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("GDate**" "value")
  )
)

(define-method get_buffer
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_buffer")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("GstBuffer**" "value")
  )
)

(define-method get_buffer_index
  (of-object "GstTagList")
  (c-name "gst_tag_list_get_buffer_index")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "tag")
    '("guint" "index")
    '("GstBuffer**" "value")
  )
)

;; From ../gstreamer/gst/gsttaginterface.h

(define-function tag_setter_get_type
  (c-name "gst_tag_setter_get_type")
  (return-type "GType")
)

(define-method reset_tags
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_reset_tags")
  (return-type "none")
)

(define-method merge_tags
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_merge_tags")
  (return-type "none")
  (parameters
    '("const-GstTagList*" "list")
    '("GstTagMergeMode" "mode")
  )
)

(define-method add_tags
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_add_tags")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
  )
  (varargs #t)
)

(define-method add_tag_values
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_add_tag_values")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
  )
  (varargs #t)
)

(define-method add_tag_valist
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_add_tag_valist")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("va_list" "var_args")
  )
)

(define-method add_tag_valist_values
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_add_tag_valist_values")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("va_list" "var_args")
  )
)

(define-method add_tag_value
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_add_tag_value")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
    '("const-gchar*" "tag")
    '("const-GValue*" "value")
  )
)

(define-method get_tag_list
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_get_tag_list")
  (return-type "const-GstTagList*")
)

(define-method set_tag_merge_mode
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_set_tag_merge_mode")
  (return-type "none")
  (parameters
    '("GstTagMergeMode" "mode")
  )
)

(define-method get_tag_merge_mode
  (of-object "GstTagSetter")
  (c-name "gst_tag_setter_get_tag_merge_mode")
  (return-type "GstTagMergeMode")
)



;; From ../gstreamer/gst/gsttask.h

(define-function task_get_type
  (c-name "gst_task_get_type")
  (return-type "GType")
)

(define-function task_create
  (c-name "gst_task_create")
  (return-type "GstTask*")
  (parameters
    '("GstTaskFunction" "func")
    '("gpointer" "data")
  )
)

(define-method set_lock
  (of-object "GstTask")
  (c-name "gst_task_set_lock")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-method set_priority
  (of-object "GstTask")
  (c-name "gst_task_set_priority")
  (return-type "none")
  (parameters
    '("GThreadPriority" "priority")
  )
)

(define-method get_pool
  (of-object "GstTask")
  (c-name "gst_task_get_pool")
  (return-type "GstTaskPool*")
)

(define-method set_pool
  (of-object "GstTask")
  (c-name "gst_task_set_pool")
  (return-type "none")
  (parameters
    '("GstTaskPool*" "pool")
  )
)

(define-method set_thread_callbacks
  (of-object "GstTask")
  (c-name "gst_task_set_thread_callbacks")
  (return-type "none")
  (parameters
    '("GstTaskThreadCallbacks*" "callbacks")
    '("gpointer" "user_data")
    '("GDestroyNotify" "notify")
  )
)

(define-method get_state
  (of-object "GstTask")
  (c-name "gst_task_get_state")
  (return-type "GstTaskState")
)

(define-method set_state
  (of-object "GstTask")
  (c-name "gst_task_set_state")
  (return-type "gboolean")
  (parameters
    '("GstTaskState" "state")
  )
)

(define-method start
  (of-object "GstTask")
  (c-name "gst_task_start")
  (return-type "gboolean")
)

(define-method stop
  (of-object "GstTask")
  (c-name "gst_task_stop")
  (return-type "gboolean")
)

(define-method pause
  (of-object "GstTask")
  (c-name "gst_task_pause")
  (return-type "gboolean")
)

;; From gsttaskpool.h

(define-function gst_task_pool_get_type
  (c-name "gst_task_pool_get_type")
  (return-type "GType")
)

(define-function gst_task_pool_new
  (c-name "gst_task_pool_new")
  (is-constructor-of "GstTaskPool")
  (return-type "GstTaskPool*")
)

(define-method prepare
  (of-object "GstTaskPool")
  (c-name "gst_task_pool_prepare")
  (return-type "none")
  (parameters
    '("GError**" "error")
  )
)

(define-method push
  (of-object "GstTaskPool")
  (c-name "gst_task_pool_push")
  (return-type "gpointer")
  (parameters
    '("GstTaskPoolFunction" "func")
    '("gpointer" "user_data")
    '("GError**" "error")
  )
)

(define-method join
  (of-object "GstTaskPool")
  (c-name "gst_task_pool_join")
  (return-type "none")
  (parameters
    '("gpointer" "id")
  )
)

(define-method cleanup
  (of-object "GstTaskPool")
  (c-name "gst_task_pool_cleanup")
  (return-type "none")
)

;; From ../gstreamer/gst/gsttrace.h

(define-function trace_new
  (c-name "gst_trace_new")
  (is-constructor-of "GstTrace")
  (return-type "GstTrace*")
  (parameters
    '("gchar*" "filename")
    '("gint" "size")
  )
)

(define-method destroy
  (of-object "GstTrace")
  (c-name "gst_trace_destroy")
  (return-type "none")
)

(define-method flush
  (of-object "GstTrace")
  (c-name "gst_trace_flush")
  (return-type "none")
)

(define-method text_flush
  (of-object "GstTrace")
  (c-name "gst_trace_text_flush")
  (return-type "none")
)

(define-method set_default
  (of-object "GstTrace")
  (c-name "gst_trace_set_default")
  (return-type "none")
)

(define-function trace_read_tsc
  (c-name "gst_trace_read_tsc")
  (return-type "none")
  (parameters
    '("gint64*" "dst")
  )
)

(define-function alloc_trace_available
  (c-name "gst_alloc_trace_available")
  (return-type "gboolean")
)

(define-function alloc_trace_list
  (c-name "gst_alloc_trace_list")
  (return-type "const-GList*")
)

(define-function alloc_trace_live_all
  (c-name "gst_alloc_trace_live_all")
  (return-type "int")
)

(define-function alloc_trace_print_all
  (c-name "gst_alloc_trace_print_all")
  (return-type "none")
)

(define-function alloc_trace_print_live
  (c-name "gst_alloc_trace_print_live")
  (return-type "none")
)

(define-function alloc_trace_set_flags_all
  (c-name "gst_alloc_trace_set_flags_all")
  (return-type "none")
  (parameters
    '("GstAllocTraceFlags" "flags")
  )
)

(define-function alloc_trace_get
  (c-name "gst_alloc_trace_get")
  (return-type "GstAllocTrace*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method print
  (of-object "GstAllocTrace")
  (c-name "gst_alloc_trace_print")
  (return-type "none")
)

(define-method set_flags
  (of-object "GstAllocTrace")
  (c-name "gst_alloc_trace_set_flags")
  (return-type "none")
  (parameters
    '("GstAllocTraceFlags" "flags")
  )
)



;; From ../gstreamer/gst/gsttypefind.h

(define-function type_find_new
  (c-name "gst_type_find_new")
  (return-type "GstTypeFind*")
)

(define-method peek
  (of-object "GstTypeFind")
  (c-name "gst_type_find_peek")
  (return-type "guint8*")
  (parameters
    '("gint64" "offset")
    '("guint" "size")
  )
)

(define-method suggest
  (of-object "GstTypeFind")
  (c-name "gst_type_find_suggest")
  (return-type "none")
  (parameters
    '("guint" "probability")
    '("const-GstCaps*" "caps")
  )
)

(define-method suggest_simple
  (of-object "GstTypeFind")
  (c-name "gst_type_find_suggest_simple")
  (return-type "none")
  (parameters
    '("guint" "probability")
    '("const-char*" "media_type")
    '("const-char*" "fieldname")
  )
  (varargs #t)
)

(define-method get_length
  (of-object "GstTypeFind")
  (c-name "gst_type_find_get_length")
  (return-type "guint64")
)

(define-function type_find_register
  (c-name "gst_type_find_register")
  (return-type "gboolean")
  (parameters
    '("GstPlugin*" "plugin")
    '("const-gchar*" "name")
    '("guint" "rank")
    '("GstTypeFindFunction" "func")
    '("gchar**" "extensions")
    '("const-GstCaps*" "possible_caps")
    '("gpointer" "data")
    '("GDestroyNotify" "data_notify")
  )
)

(define-function type_find_factory_get_type
  (c-name "gst_type_find_factory_get_type")
  (return-type "GType")
)

(define-function type_find_factory_get_list
  (c-name "gst_type_find_factory_get_list")
  (return-type "GList*")
)

(define-method get_extensions
  (of-object "GstTypeFindFactory")
  (c-name "gst_type_find_factory_get_extensions")
  (return-type "GStrv")
)

(define-method get_caps
  (of-object "GstTypeFindFactory")
  (c-name "gst_type_find_factory_get_caps")
  (return-type "GstCaps*")
)

(define-method call_function
  (of-object "GstTypeFindFactory")
  (c-name "gst_type_find_factory_call_function")
  (return-type "none")
  (parameters
    '("GstTypeFind*" "find")
  )
)


;; From ../gstreamer/gst/gsturi.h

(define-function uri_protocol_is_valid
  (c-name "gst_uri_protocol_is_valid")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "protocol")
  )
)

(define-function uri_protocol_is_supported
  (c-name "gst_uri_protocol_is_supported")
  (return-type "gboolean")
  (parameters
    '("GstURIType" "type")
    '("const-gchar*" "protocol")
  )
)

(define-function uri_is_valid
  (c-name "gst_uri_is_valid")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-function uri_get_protocol
  (c-name "gst_uri_get_protocol")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-function uri_has_protocol
  (c-name "gst_uri_has_protocol")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("const-gchar*" "protocol")
  )
)

(define-function uri_get_location
  (c-name "gst_uri_get_location")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-function uri_construct
  (c-name "gst_uri_construct")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "protocol")
    '("const-gchar*" "location")
  )
)

(define-function element_make_from_uri
  (c-name "gst_element_make_from_uri")
  (return-type "GstElement*")
  (parameters
    '("GstURIType" "type")
    '("const-gchar*" "uri")
    '("const-gchar*" "elementname" (null-ok) (default "NULL"))
  )
)

(define-function uri_handler_get_type
  (c-name "gst_uri_handler_get_type")
  (return-type "GType")
)

(define-method get_uri_type
  (of-object "GstURIHandler")
  (c-name "gst_uri_handler_get_uri_type")
  (return-type "GstURIType")
)

(define-method get_protocols
  (of-object "GstURIHandler")
  (c-name "gst_uri_handler_get_protocols")
  (return-type "GStrv")
)

(define-method get_uri
  (of-object "GstURIHandler")
  (c-name "gst_uri_handler_get_uri")
  (return-type "const-gchar*")
)

(define-method set_uri
  (of-object "GstURIHandler")
  (c-name "gst_uri_handler_set_uri")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method new_uri
  (of-object "GstURIHandler")
  (c-name "gst_uri_handler_new_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-virtual get_type_full
  (of-object "GstURIHandler")
  (parameters
    '("GType" "type")
  )
  (return-type "guint")
)

(define-virtual get_protocols_full
  (of-object "GstURIHandler")
  (parameters
    '("GType" "type")
  )
  (return-type "GStrv")
)

(define-virtual get_uri
  (of-object "GstURIHandler")
  (return-type "const-gchar*")
)

(define-virtual set_uri
  (of-object "GstURIHandler")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

;; From ../gstreamer/gst/gstutils.h

(define-function util_set_value_from_string
  (c-name "gst_util_set_value_from_string")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-gchar*" "value_str")
  )
)

(define-function util_set_object_arg
  (c-name "gst_util_set_object_arg")
  (return-type "none")
  (parameters
    '("GObject*" "object")
    '("const-gchar*" "name")
    '("const-gchar*" "value")
  )
)

(define-function util_dump_mem
  (c-name "gst_util_dump_mem")
  (return-type "none")
  (parameters
    '("const-guchar*" "mem")
    '("guint" "size")
  )
)

(define-function util_gdouble_to_guint64
  (c-name "gst_util_gdouble_to_guint64")
  (return-type "guint64")
  (parameters
    '("gdouble" "value")
  )
)

(define-function util_guint64_to_gdouble
  (c-name "gst_util_guint64_to_gdouble")
  (return-type "gdouble")
  (parameters
    '("guint64" "value")
  )
)

(define-function util_uint64_scale
  (c-name "gst_util_uint64_scale")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("guint64" "num")
    '("guint64" "denom")
  )
)

(define-function util_uint64_scale_round
  (c-name "gst_util_uint64_scale_round")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("guint64" "num")
    '("guint64" "denom")
  )
)

(define-function util_uint64_scale_ceil
  (c-name "gst_util_uint64_scale_ceil")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("guint64" "num")
    '("guint64" "denom")
  )
)

(define-function util_uint64_scale_int
  (c-name "gst_util_uint64_scale_int")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("gint" "num")
    '("gint" "denom")
  )
)

(define-function util_uint64_scale_int_round
  (c-name "gst_util_uint64_scale_int_round")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("gint" "num")
    '("gint" "denom")
  )
)

(define-function util_uint64_scale_int_ceil
  (c-name "gst_util_uint64_scale_int_ceil")
  (return-type "guint64")
  (parameters
    '("guint64" "val")
    '("gint" "num")
    '("gint" "denom")
  )
)

(define-function util_seqnum_next
  (c-name "gst_util_seqnum_next")
  (return-type "guint32")
)

(define-function util_seqnum_compare
  (c-name "gst_util_seqnum_compare")
  (return-type "gint32")
  (parameters
    '("guint32" "s1")
    '("guint32" "s2")
  )
)

(define-function print_pad_caps
  (c-name "gst_print_pad_caps")
  (return-type "none")
  (parameters
    '("GString*" "buf")
    '("gint" "indent")
    '("GstPad*" "pad")
  )
)

(define-function print_element_args
  (c-name "gst_print_element_args")
  (return-type "none")
  (parameters
    '("GString*" "buf")
    '("gint" "indent")
    '("GstElement*" "element")
  )
)

(define-method default_error
  (of-object "GstObject")
  (c-name "gst_object_default_error")
  (return-type "none")
  (parameters
    '("GError*" "error")
    '("gchar*" "debug")
  )
)

(define-method create_all_pads
  (of-object "GstElement")
  (c-name "gst_element_create_all_pads")
  (return-type "none")
)

(define-method get_compatible_pad
  (of-object "GstElement")
  (c-name "gst_element_get_compatible_pad")
  (return-type "GstPad*")
  (parameters
    '("GstPad*" "pad")
    '("const-GstCaps*" "caps" (null-ok) (default "NULL"))
  )
)

(define-method get_compatible_pad_template
  (of-object "GstElement")
  (c-name "gst_element_get_compatible_pad_template")
  (return-type "GstPadTemplate*")
  (parameters
    '("GstPadTemplate*" "compattempl")
  )
)

(define-method get_name
  (of-object "GstState")
  (c-name "gst_element_state_get_name")
  (return-type "const-gchar*")
)

(define-function element_state_get_name
  (c-name "gst_element_state_get_name")
  (parameters
    '("GstState" "state")
  )
  (return-type "const-gchar*")
)

(define-function state_change_return_get_name
  (c-name "gst_element_state_change_return_get_name")
  (return-type "const-gchar*")
  (parameters
    '("GstStateChangeReturn" "state_ret")
  )
)

(define-method link
  (of-object "GstElement")
  (c-name "gst_element_link")
  (return-type "gboolean")
  (parameters
    '("GstElement*" "dest")
  )
)

(define-function element_link_many
  (c-name "gst_element_link_many")
  (return-type "gboolean")
  (parameters
    '("GstElement*" "element_1")
    '("GstElement*" "element_2")
  )
  (varargs #t)
)

(define-method unlink
  (of-object "GstElement")
  (c-name "gst_element_unlink")
  (return-type "none")
  (parameters
    '("GstElement*" "dest")
  )
)

(define-method link_filtered
  (of-object "GstElement")
  (c-name "gst_element_link_filtered")
  (return-type "gboolean")
  (parameters
    '("GstElement*" "dest")
    '("GstCaps*" "filter")
  )
)

(define-function element_unlink_many
  (c-name "gst_element_unlink_many")
  (return-type "none")
  (parameters
	'("GstElement*" "element_1")
    '("GstElement*" "element_2")
  )
  (varargs #t)
)

(define-method link_pads
  (of-object "GstElement")
  (c-name "gst_element_link_pads")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "srcpadname")
    '("GstElement*" "dest")
    '("const-gchar*" "destpadname")
  )
)

(define-method link_pads_full
  (of-object "GstElement")
  (c-name "gst_element_link_pads_full")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "srcpadname")
    '("GstElement*" "dest")
    '("const-gchar*" "destpadname")
    '("GstPadLinkCheck" "flags")
  )
)

(define-method unlink_pads
  (of-object "GstElement")
  (c-name "gst_element_unlink_pads")
  (return-type "none")
  (parameters
    '("const-gchar*" "srcpadname")
    '("GstElement*" "dest")
    '("const-gchar*" "destpadname")
  )
)

(define-method link_pads_filtered
  (of-object "GstElement")
  (c-name "gst_element_link_pads_filtered")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "srcpadname")
    '("GstElement*" "dest")
    '("const-gchar*" "destpadname")
    '("GstCaps*" "filter")
  )
)

(define-method seek_simple
  (of-object "GstElement")
  (c-name "gst_element_seek_simple")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "format")
    '("GstSeekFlags" "seek_flags")
    '("gint64" "seek_pos")
  )
)

(define-method can_src_caps
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_can_src_caps")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "caps")
  )
)

(define-method can_sink_caps
  (of-object "GstElementFactory")
  (c-name "gst_element_factory_can_sink_caps")
  (return-type "gboolean")
  (parameters
    '("const-GstCaps*" "caps")
  )
)


(define-method query_position
  (of-object "GstElement")
  (c-name "gst_element_query_position")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "cur")
  )
)

(define-method query_duration
  (of-object "GstElement")
  (c-name "gst_element_query_duration")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "duration")
  )
)

(define-method query_convert
  (of-object "GstElement")
  (c-name "gst_element_query_convert")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "src_format")
    '("gint64" "src_val")
    '("GstFormat*" "dest_fmt")
    '("gint64*" "dest_val")
  )
)

(define-method install_std_props
  (of-object "GstElementClass")
  (c-name "gst_element_class_install_std_props")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_name")
  )
  (varargs #t)
)

(define-method can_link
  (of-object "GstPad")
  (c-name "gst_pad_can_link")
  (return-type "gboolean")
  (parameters
    '("GstPad*" "sinkpad")
  )
)

(define-method use_fixed_caps
  (of-object "GstPad")
  (c-name "gst_pad_use_fixed_caps")
  (return-type "none")
)

(define-method get_fixed_caps_func
  (of-object "GstPad")
  (c-name "gst_pad_get_fixed_caps_func")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method proxy_getcaps
  (of-object "GstPad")
  (c-name "gst_pad_proxy_getcaps")
  (return-type "GstCaps*")
  (caller-owns-return #t)
)

(define-method proxy_setcaps
  (of-object "GstPad")
  (c-name "gst_pad_proxy_setcaps")
  (return-type "gboolean")
  (parameters
    '("GstCaps*" "caps")
  )
)

(define-method get_parent_element
  (of-object "GstPad")
  (c-name "gst_pad_get_parent_element")
  (return-type "GstElement*")
  (caller-owns-return #t)
)

(define-method query_position
  (of-object "GstPad")
  (c-name "gst_pad_query_position")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "cur")
  )
)

(define-method query_duration
  (of-object "GstPad")
  (c-name "gst_pad_query_duration")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "duration")
  )
)

(define-method query_convert
  (of-object "GstPad")
  (c-name "gst_pad_query_convert")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "src_format")
    '("gint64" "src_val")
    '("GstFormat*" "dest_fmt")
    '("gint64*" "dest_val")
  )
)

(define-method query_peer_position
  (of-object "GstPad")
  (c-name "gst_pad_query_peer_position")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "cur")
  )
)

(define-method query_peer_duration
  (of-object "GstPad")
  (c-name "gst_pad_query_peer_duration")
  (return-type "gboolean")
  (parameters
    '("GstFormat*" "format")
    '("gint64*" "duration")
  )
)

(define-method query_peer_convert
  (of-object "GstPad")
  (c-name "gst_pad_query_peer_convert")
  (return-type "gboolean")
  (parameters
    '("GstFormat" "src_format")
    '("gint64" "src_val")
    '("GstFormat*" "dest_format")
    '("gint64*" "dest_val")
  )
)

(define-method remove_many
  (of-object "GstBin")
  (c-name "gst_bin_remove_many")
  (return-type "none")
  (parameters
    '("GstElement*" "element_1")
  )
  (varargs #t)
)

(define-method find_unlinked_pad
  (of-object "GstBin")
  (c-name "gst_bin_find_unlinked_pad")
  (return-type "GstPad*")
  (parameters
    '("GstPadDirection" "direction")
  )
)

(define-method find_unconnected_pad
  (of-object "GstBin")
  (c-name "gst_bin_find_unconnected_pad")
  (return-type "GstPad*")
  (parameters
    '("GstPadDirection" "direction")
  )
)

(define-method merge
  (of-object "GstBuffer")
  (c-name "gst_buffer_merge")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("GstBuffer*" "buf2")
  )
)

(define-method join
  (of-object "GstBuffer")
  (c-name "gst_buffer_join")
  (return-type "GstBuffer*")
  (caller-owns-return #t)
  (parameters
    '("GstBuffer*" "buf2")
  )
)

(define-method stamp
  (of-object "GstBuffer")
  (c-name "gst_buffer_stamp")
  (return-type "none")
  (parameters
    '("const-GstBuffer*" "src")
  )
)

(define-function atomic_int_set
  (c-name "gst_atomic_int_set")
  (return-type "none")
  (parameters
    '("gint*" "atomic_int")
    '("gint" "value")
  )
)

(define-function TIME_ARGS
  (c-name "GST_TIME_ARGS")
  (return-type "gchar*")
  (parameters
   '("GstClockTime" "time")
  )
)

;; From ../gstreamer/gst/gstvalue.h

(define-function value_register
  (c-name "gst_value_register")
  (return-type "none")
  (parameters
    '("const-GstValueTable*" "table")
  )
)

(define-function value_init_and_copy
  (c-name "gst_value_init_and_copy")
  (return-type "none")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "src")
  )
)

(define-function value_serialize
  (c-name "gst_value_serialize")
  (return-type "gchar*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_deserialize
  (c-name "gst_value_deserialize")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-gchar*" "src")
  )
)

(define-function value_list_append_value
  (c-name "gst_value_list_append_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GValue*" "append_value")
  )
)

(define-function value_list_prepend_value
  (c-name "gst_value_list_prepend_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GValue*" "prepend_value")
  )
)

(define-function value_list_concat
  (c-name "gst_value_list_concat")
  (return-type "none")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_list_get_size
  (c-name "gst_value_list_get_size")
  (return-type "guint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_list_get_value
  (c-name "gst_value_list_get_value")
  (return-type "const-GValue*")
  (parameters
    '("const-GValue*" "value")
    '("guint" "index")
  )
)

(define-function value_array_append_value
  (c-name "gst_value_array_append_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GValue*" "append_value")
  )
)

(define-function value_array_prepend_value
  (c-name "gst_value_array_prepend_value")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GValue*" "prepend_value")
  )
)

(define-function value_array_get_size
  (c-name "gst_value_array_get_size")
  (return-type "guint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_array_get_value
  (c-name "gst_value_array_get_value")
  (return-type "const-GValue*")
  (parameters
    '("const-GValue*" "value")
    '("guint" "index")
  )
)

(define-function value_set_fourcc
  (c-name "gst_value_set_fourcc")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("guint32" "fourcc")
  )
)

(define-function value_get_fourcc
  (c-name "gst_value_get_fourcc")
  (return-type "guint32")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_int_range
  (c-name "gst_value_set_int_range")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("gint" "start")
    '("gint" "end")
  )
)

(define-function value_get_int_range_min
  (c-name "gst_value_get_int_range_min")
  (return-type "gint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_int_range_max
  (c-name "gst_value_get_int_range_max")
  (return-type "gint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_int64_range
  (c-name "gst_value_set_int64_range")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("gint64" "start")
    '("gint64" "end")
  )
)

(define-function value_get_int64_range_min
  (c-name "gst_value_get_int64_range_min")
  (return-type "gint64")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_int64_range_max
  (c-name "gst_value_get_int64_range_max")
  (return-type "gint64")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_double_range
  (c-name "gst_value_set_double_range")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("gdouble" "start")
    '("gdouble" "end")
  )
)

(define-function value_get_double_range_min
  (c-name "gst_value_get_double_range_min")
  (return-type "gdouble")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_double_range_max
  (c-name "gst_value_get_double_range_max")
  (return-type "gdouble")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_caps
  (c-name "gst_value_get_caps")
  (return-type "const-GstCaps*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_caps
  (c-name "gst_value_set_caps")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GstCaps*" "caps")
  )
)

(define-function value_set_fraction
  (c-name "gst_value_set_fraction")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("gint" "numerator")
    '("gint" "denominator")
  )
)

(define-function value_get_fraction_numerator
  (c-name "gst_value_get_fraction_numerator")
  (return-type "gint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_fraction_denominator
  (c-name "gst_value_get_fraction_denominator")
  (return-type "gint")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_fraction_multiply
  (c-name "gst_value_fraction_multiply")
  (return-type "gboolean")
  (parameters
    '("GValue*" "product")
    '("const-GValue*" "factor1")
    '("const-GValue*" "factor2")
  )
)

(define-function gst_value_fraction_subtract
  (c-name "gst_value_fraction_subtract")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "minuend")
    '("const-GValue*" "subtrahend")
  )
)

(define-function gst_value_set_fraction_range
  (c-name "gst_value_set_fraction_range")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GValue*" "start")
    '("const-GValue*" "end")
  )
)

(define-function gst_value_set_fraction_range_full
  (c-name "gst_value_set_fraction_range_full")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("gint" "numerator_start")
    '("gint" "denominator_start")
    '("gint" "numerator_end")
    '("gint" "denominator_end")
  )
)

(define-function gst_value_get_fraction_range_min
  (c-name "gst_value_get_fraction_range_min")
  (return-type "const-GValue*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gst_value_get_fraction_range_max
  (c-name "gst_value_get_fraction_range_max")
  (return-type "const-GValue*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_date
  (c-name "gst_value_get_date")
  (return-type "const-GDate*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_date
  (c-name "gst_value_set_date")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-GDate*" "date")
  )
)

(define-function value_compare
  (c-name "gst_value_compare")
  (return-type "gint")
  (parameters
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_can_compare
  (c-name "gst_value_can_compare")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_union
  (c-name "gst_value_union")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_can_union
  (c-name "gst_value_can_union")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_register_union_func
  (c-name "gst_value_register_union_func")
  (return-type "none")
  (parameters
    '("GType" "type1")
    '("GType" "type2")
    '("GstValueUnionFunc" "func")
  )
)

(define-function value_intersect
  (c-name "gst_value_intersect")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_can_intersect
  (c-name "gst_value_can_intersect")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "value1")
    '("const-GValue*" "value2")
  )
)

(define-function value_register_intersect_func
  (c-name "gst_value_register_intersect_func")
  (return-type "none")
  (parameters
    '("GType" "type1")
    '("GType" "type2")
    '("GstValueIntersectFunc" "func")
  )
)

(define-function value_subtract
  (c-name "gst_value_subtract")
  (return-type "gboolean")
  (parameters
    '("GValue*" "dest")
    '("const-GValue*" "minuend")
    '("const-GValue*" "subtrahend")
  )
)

(define-function value_can_subtract
  (c-name "gst_value_can_subtract")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "minuend")
    '("const-GValue*" "subtrahend")
  )
)

(define-function value_register_subtract_func
  (c-name "gst_value_register_subtract_func")
  (return-type "none")
  (parameters
    '("GType" "minuend_type")
    '("GType" "subtrahend_type")
    '("GstValueSubtractFunc" "func")
  )
)

(define-function value_is_fixed
  (c-name "gst_value_is_fixed")
  (return-type "gboolean")
  (parameters
    '("const-GValue*" "value")
  )
)


;; From ../gstreamer/gst/gstxml.h

(define-function xml_get_type
  (c-name "gst_xml_get_type")
  (return-type "GType")
)

(define-function xml_write
  (c-name "gst_xml_write")
  (return-type "xmlDocPtr")
  (parameters
    '("GstElement*" "element")
  )
)

(define-function xml_write_file
  (c-name "gst_xml_write_file")
  (return-type "gint")
  (parameters
    '("GstElement*" "element")
    '("FILE*" "out")
  )
)

(define-function xml_new
  (c-name "gst_xml_new")
  (is-constructor-of "GstXML")
  (return-type "GstXML*")
)

(define-method parse_doc
  (of-object "GstXML")
  (c-name "gst_xml_parse_doc")
  (return-type "gboolean")
  (parameters
    '("xmlDocPtr" "doc")
    '("const-guchar*" "root")
  )
)

(define-method parse_file
  (of-object "GstXML")
  (c-name "gst_xml_parse_file")
  (return-type "gboolean")
  (parameters
    '("const-guchar*" "fname")
    '("const-guchar*" "root")
  )
)

(define-method parse_memory
  (of-object "GstXML")
  (c-name "gst_xml_parse_memory")
  (return-type "gboolean")
  (parameters
    '("guchar*" "buffer")
    '("guint" "size")
    '("const-gchar*" "root")
  )
)

(define-method get_element
  (of-object "GstXML")
  (c-name "gst_xml_get_element")
  (return-type "GstElement*")
  (parameters
    '("const-guchar*" "name")
  )
)

(define-method get_topelements
  (of-object "GstXML")
  (c-name "gst_xml_get_topelements")
  (return-type "GList*")
)

(define-function xml_make_element
  (c-name "gst_xml_make_element")
  (return-type "GstElement*")
  (parameters
    '("xmlNodePtr" "cur")
    '("GstObject*" "parent")
  )
)


;; From ../gstreamer/gst/net/gstnetclientclock.h

(define-function net_client_clock_new
  (c-name "gst_net_client_clock_new")
  (is-constructor-of "GstNetClientClock")
  (return-type "GstClock*")
  (parameters
    '("gchar*" "name" (null-ok) (default "NULL"))
    '("gchar*" "remote_address" (default "127.0.0.1"))
    '("gint" "remote_port")
    '("GstClockTime" "base_time" (default 0))
  )
)


;; From ../gstreamer/gst/net/gstnettimeprovider.h

(define-function net_time_provider_new
  (c-name "gst_net_time_provider_new")
  (is-constructor-of "GstNetTimeProvider")
  (return-type "GstNetTimeProvider*")
  (parameters
    '("GstClock*" "clock")
    '("gchar*" "address" (null-ok) (default "NULL"))
    '("gint" "port" (default 0))
  )
)
