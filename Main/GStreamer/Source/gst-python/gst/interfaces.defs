;; -*- scheme -*-

(include "xoverlay.defs")

;; object definitions ...

;;
;; interface definitions ...
;;

(define-interface ColorBalance
   (in-module "Gst")
   (c-name "GstColorBalance")
   (gtype-id "GST_TYPE_COLOR_BALANCE")
   (vtable "GstColorBalanceClass")
)

(define-object ColorBalanceChannel
  (in-module "Gst")
  (parent "GObject")
  (c-name "GstColorBalanceChannel")
  (gtype-id "GST_TYPE_COLOR_BALANCE_CHANNEL")
  (fields
    '("gchar*" "label")
    '("gint" "min_value")
    '("gint" "max_value")
  )
)

(define-interface Mixer
   (in-module "Gst")
   (c-name "GstMixer")
   (gtype-id "GST_TYPE_MIXER")
   (fields
     '("GstMixerType" "mixer_type")
    )
   (vtable "GstMixerClass")
)

(define-object MixerTrack
   (in-module "Gst")
   (parent "GObject")
   (c-name "GstMixerTrack")
   (gtype-id "GST_TYPE_MIXER_TRACK")
   (fields
     '("gchar*" "label")
     '("GstMixerTrackFlags" "flags")
     '("gint" "num_channels")
     '("gint" "min_volume")
     '("gint" "max_volume")
    )
)

(define-object MixerOptions
  (in-module "Gst")
  (parent "GstMixerTrack")
  (c-name "GstMixerOptions")
  (gtype-id "GST_TYPE_MIXER_OPTIONS")
)

(define-interface Navigation
   (in-module "Gst")
   (c-name "GstNavigation")
   (gtype-id "GST_TYPE_NAVIGATION")
   (vtable "GstNavigationInterface")
)

(define-interface PropertyProbe
   (in-module "Gst")
   (c-name "GstPropertyProbe")
   (gtype-id "GST_TYPE_PROPERTY_PROBE")
   (vtable "GstPropertyProbeInterface")
)

(define-interface Tuner
   (in-module "Gst")
   (c-name "GstTuner")
   (gtype-id "GST_TYPE_TUNER")
   (vtable "GstTunerClass")
)

(define-object TunerChannel
   (in-module "Gst")
   (parent "GObject")
   (c-name "GstTunerChannel")
   (gtype-id "GST_TYPE_TUNER_CHANNEL")
   (fields
    '("gchar*" "label")
    '("GstTunerChannelFlags" "flags")
    '("gfloat" "freq_multiplicator")
    '("gulong" "min_frequency")
    '("gulong" "max_frequency")
    '("gint" "min_signal")
    '("gint" "max_signal"))
)

(define-object TunerNorm
   (in-module "Gst")
   (parent "GObject")
   (c-name "GstTunerNorm")
   (gtype-id "GST_TYPE_TUNER_NORM")
   (fields
    '("gchar*" "label")
    '("GValue*" "framerate"))
)

;; Enumerations and flags ...

(define-enum ColorBalanceType
  (in-module "Gst")
  (c-name "GstColorBalanceType")
  (gtype-id "GST_TYPE_COLOR_BALANCE_TYPE")
  (values
    '("hardware" "GST_COLOR_BALANCE_HARDWARE")
    '("software" "GST_COLOR_BALANCE_SOFTWARE")
  )
)

(define-enum MixerType
  (in-module "Gst")
  (c-name "GstMixerType")
  (gtype-id "GST_TYPE_MIXER_TYPE")
  (values
    '("hardware" "GST_MIXER_HARDWARE")
    '("software" "GST_MIXER_SOFTWARE")
  )
)

(define-enum MixerMessageType
  (in-module "Gst")
  (c-name "GstMixerMessageType")
  (gtype-id "GST_TYPE_MIXER_MESSAGE_TYPE")
  (values
    '("invalid" "GST_MIXER_MESSAGE_INVALID")
    '("mute-toggled" "GST_MIXER_MESSAGE_MUTE_TOGGLED")
    '("record-toggled" "GST_MIXER_MESSAGE_RECORD_TOGGLED")
    '("volume-changed" "GST_MIXER_MESSAGE_VOLUME_CHANGED")
    '("option-changed" "GST_MIXER_MESSAGE_OPTION_CHANGED")
  )
)

(define-flags MixerFlags
  (in-module "Gst")
  (c-name "GstMixerFlags")
  (gtype-id "GST_TYPE_MIXER_FLAGS")
  (values
    '("none" "GST_MIXER_FLAG_NONE")
    '("auto-notifications" "GST_MIXER_FLAG_AUTO_NOTIFICATIONS")
    '("has-whitelist" "GST_MIXER_FLAG_HAS_WHITELIST")
    '("grouping" "GST_MIXER_FLAG_GROUPING")
  )
)

(define-flags MixerTrackFlags
  (in-module "Gst")
  (c-name "GstMixerTrackFlags")
  (gtype-id "GST_TYPE_MIXER_TRACK_FLAGS")
  (values
    '("input" "GST_MIXER_TRACK_INPUT")
    '("output" "GST_MIXER_TRACK_OUTPUT")
    '("mute" "GST_MIXER_TRACK_MUTE")
    '("record" "GST_MIXER_TRACK_RECORD")
    '("master" "GST_MIXER_TRACK_MASTER")
    '("software" "GST_MIXER_TRACK_SOFTWARE")
    '("no-record" "GST_MIXER_TRACK_NO_RECORD")
    '("no-mute" "GST_MIXER_TRACK_NO_MUTE")
    '("whitelist" "GST_MIXER_TRACK_WHITELIST")
    '("readonly" "GST_MIXER_TRACK_READONLY")
    '("writeonly" "GST_MIXER_TRACK_WRITEONLY")
  )
)

(define-enum NavigationCommand
  (in-module "Gst")
  (c-name "GstNavigationCommand")
  (gtype-id "GST_TYPE_NAVIGATION_COMMAND")
  (values
    '("invalid" "GST_NAVIGATION_COMMAND_INVALID")
    '("menu1" "GST_NAVIGATION_COMMAND_MENU1")
    '("menu2" "GST_NAVIGATION_COMMAND_MENU2")
    '("menu3" "GST_NAVIGATION_COMMAND_MENU3")
    '("menu4" "GST_NAVIGATION_COMMAND_MENU4")
    '("menu5" "GST_NAVIGATION_COMMAND_MENU5")
    '("menu6" "GST_NAVIGATION_COMMAND_MENU6")
    '("menu7" "GST_NAVIGATION_COMMAND_MENU7")
    '("left" "GST_NAVIGATION_COMMAND_LEFT")
    '("right" "GST_NAVIGATION_COMMAND_RIGHT")
    '("up" "GST_NAVIGATION_COMMAND_UP")
    '("down" "GST_NAVIGATION_COMMAND_DOWN")
    '("activate" "GST_NAVIGATION_COMMAND_ACTIVATE")
    '("prev-angle" "GST_NAVIGATION_COMMAND_PREV_ANGLE")
    '("next-angle" "GST_NAVIGATION_COMMAND_NEXT_ANGLE")
  )
)

(define-enum NavigationQueryType
  (in-module "Gst")
  (c-name "GstNavigationQueryType")
  (gtype-id "GST_TYPE_NAVIGATION_QUERY_TYPE")
  (values
    '("invalid" "GST_NAVIGATION_QUERY_INVALID")
    '("commands" "GST_NAVIGATION_QUERY_COMMANDS")
    '("angles" "GST_NAVIGATION_QUERY_ANGLES")
  )
)

(define-enum NavigationMessageType
  (in-module "Gst")
  (c-name "GstNavigationMessageType")
  (gtype-id "GST_TYPE_NAVIGATION_MESSAGE_TYPE")
  (values
    '("invalid" "GST_NAVIGATION_MESSAGE_INVALID")
    '("mouse-over" "GST_NAVIGATION_MESSAGE_MOUSE_OVER")
    '("commands-changed" "GST_NAVIGATION_MESSAGE_COMMANDS_CHANGED")
    '("angles-changed" "GST_NAVIGATION_MESSAGE_ANGLES_CHANGED")
  )
)

(define-enum NavigationEventType
  (in-module "Gst")
  (c-name "GstNavigationEventType")
  (gtype-id "GST_TYPE_NAVIGATION_EVENT_TYPE")
  (values
    '("invalid" "GST_NAVIGATION_EVENT_INVALID")
    '("key-press" "GST_NAVIGATION_EVENT_KEY_PRESS")
    '("key-release" "GST_NAVIGATION_EVENT_KEY_RELEASE")
    '("mouse-button-press" "GST_NAVIGATION_EVENT_MOUSE_BUTTON_PRESS")
    '("mouse-button-release" "GST_NAVIGATION_EVENT_MOUSE_BUTTON_RELEASE")
    '("mouse-move" "GST_NAVIGATION_EVENT_MOUSE_MOVE")
    '("command" "GST_NAVIGATION_EVENT_COMMAND")
  )
)

(define-enum StreamVolumeFormat
  (in-module "Gst")
  (c-name "GstStreamVolumeFormat")
  (gtype-id "GST_TYPE_STREAM_VOLUME_FORMAT")
  (values
    '("linear" "GST_STREAM_VOLUME_FORMAT_LINEAR")
    '("cubic" "GST_STREAM_VOLUME_FORMAT_CUBIC")
    '("db" "GST_STREAM_VOLUME_FORMAT_DB")
  )
)

(define-flags TunerChannelFlags
  (in-module "Gst")
  (c-name "GstTunerChannelFlags")
  (gtype-id "GST_TYPE_TUNER_CHANNEL_FLAGS")
  (values
    '("input" "GST_TUNER_CHANNEL_INPUT")
    '("output" "GST_TUNER_CHANNEL_OUTPUT")
    '("frequency" "GST_TUNER_CHANNEL_FREQUENCY")
    '("audio" "GST_TUNER_CHANNEL_AUDIO")
  )
)

;; From /opt/gnome/include/gstreamer-0.7/gst/colorbalance/colorbalance.h

(define-function gst_color_balance_get_type
  (c-name "gst_color_balance_get_type")
  (return-type "GType")
)

(define-method list_colorbalance_channels
  (of-object "GstColorBalance")
  (c-name "gst_color_balance_list_channels")
  (return-type "const-GList*")
)

(define-method set_value
  (of-object "GstColorBalance")
  (c-name "gst_color_balance_set_value")
  (return-type "none")
  (parameters
    '("GstColorBalanceChannel*" "channel")
    '("gint" "value")
  )
)

(define-method get_value
  (of-object "GstColorBalance")
  (c-name "gst_color_balance_get_value")
  (return-type "gint")
  (parameters
    '("GstColorBalanceChannel*" "channel")
  )
)

(define-method value_changed
  (of-object "GstColorBalance")
  (c-name "gst_color_balance_value_changed")
  (return-type "none")
  (parameters
    '("GstColorBalanceChannel*" "channel")
    '("gint" "value")
  )
)

(define-virtual list_channels
  (of-object "GstColorBalance")
  (return-type "const-GList*")
)

(define-virtual set_value
  (of-object "GstColorBalance")
  (return-type "none")
  (parameters
    '("GstColorBalanceChannel*" "channel")
    '("gint" "value")
  )
)

(define-virtual get_value
  (of-object "GstColorBalance")
  (return-type "gint")
  (parameters
    '("GstColorBalanceChannel*" "channel")
  )
)



;; From /opt/gnome/include/gstreamer-0.7/gst/mixer/mixer.h

(define-function gst_mixer_get_type
  (c-name "gst_mixer_get_type")
  (return-type "GType")
)

(define-method list_tracks
  (of-object "GstMixer")
  (c-name "gst_mixer_list_tracks")
  (return-type "const-GList*")
)

(define-method set_volume
  (of-object "GstMixer")
  (c-name "gst_mixer_set_volume")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gint*" "volumes")
  )
)

(define-method get_volume
  (of-object "GstMixer")
  (c-name "gst_mixer_get_volume")
  (return-type "tuple")
  (parameters
    '("GstMixerTrack*" "track")
  )
)

(define-method set_mute
  (of-object "GstMixer")
  (c-name "gst_mixer_set_mute")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "mute")
  )
)

(define-method set_record
  (of-object "GstMixer")
  (c-name "gst_mixer_set_record")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "record")
  )
)

(define-method set_option
  (of-object "GstMixer")
  (c-name "gst_mixer_set_option")
  (return-type "none")
  (parameters
    '("GstMixerOptions*" "opts")
    '("gchar*" "value")
  )
)

(define-method get_option
  (of-object "GstMixer")
  (c-name "gst_mixer_get_option")
  (return-type "const-gchar*")
  (parameters
    '("GstMixerOptions*" "opts")
  )
)

(define-method mute_toggled
  (of-object "GstMixer")
  (c-name "gst_mixer_mute_toggled")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "mute")
  )
)

(define-method record_toggled
  (of-object "GstMixer")
  (c-name "gst_mixer_record_toggled")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "record")
  )
)

(define-method volume_changed
  (of-object "GstMixer")
  (c-name "gst_mixer_volume_changed")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gint*" "volumes")
  )
)

(define-method option_changed
  (of-object "GstMixer")
  (c-name "gst_mixer_option_changed")
  (return-type "none")
  (parameters
    '("GstMixerOptions*" "opts")
    '("gchar*" "value")
  )
)

(define-method get_mixer_flags
  (of-object "GstMixer")
  (c-name "gst_mixer_get_mixer_flags")
  (return-type "GstMixerFlags")
)

(define-function mixer_message_get_type
  (c-name "gst_mixer_message_get_type")
  (return-type "GstMixerMessageType")
  (parameters
    '("GstMessage*" "message")
  )
)

(define-function mixer_message_parse_mute_toggled
  (c-name "gst_mixer_message_parse_mute_toggled")
  (return-type "none")
  (parameters
    '("GstMessage*" "message")
    '("GstMixerTrack**" "track")
    '("gboolean*" "mute")
  )
)

(define-function mixer_message_parse_record_toggled
  (c-name "gst_mixer_message_parse_record_toggled")
  (return-type "none")
  (parameters
    '("GstMessage*" "message")
    '("GstMixerTrack**" "track")
    '("gboolean*" "record")
  )
)

(define-function mixer_message_parse_volume_changed
  (c-name "gst_mixer_message_parse_volume_changed")
  (return-type "none")
  (parameters
    '("GstMessage*" "message")
    '("GstMixerTrack**" "track")
    '("gint**" "volumes")
    '("gint*" "num_channels")
  )
)

(define-function mixer_message_parse_option_changed
  (c-name "gst_mixer_message_parse_option_changed")
  (return-type "none")
  (parameters
    '("GstMessage*" "message")
    '("GstMixerOptions**" "options")
    '("const-gchar**" "value")
  )
)

(define-function gst_mixer_message_parse_options_list_changed
  (c-name "gst_mixer_message_parse_options_list_changed")
  (return-type "none")
  (parameters
    '("GstMessage*" "message")
    '("GstMixerOptions**" "options")
  )
)

(define-virtual list_tracks
  (of-object "GstMixer")
  (return-type "const-GList*")
)

(define-virtual set_volume
  (of-object "GstMixer")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gint*" "volumes")
  )
)

(define-virtual get_volume
  (of-object "GstMixer")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gint*" "volumes")
  )
)

(define-virtual set_mute
  (of-object "GstMixer")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "mute")
  )
)

(define-virtual set_record
  (of-object "GstMixer")
  (return-type "none")
  (parameters
    '("GstMixerTrack*" "track")
    '("gboolean" "record")
  )
)


;; From ../gst-plugins-base/gst-libs/gst/interfaces/mixeroptions.h

(define-function gst_mixer_options_get_type
  (c-name "gst_mixer_options_get_type")
  (return-type "GType")
)

(define-method get_values
  (of-object "GstMixerOptions")
  (c-name "gst_mixer_options_get_values")
  (return-type "GList*")
)


;; From /opt/gnome/include/gstreamer-0.7/gst/navigation/navigation.h

(define-function navigation_get_type
  (c-name "gst_navigation_get_type")
  (return-type "GType")
)

(define-function navigation_query_get_type
  (c-name "gst_navigation_query_get_type")
  (return-type "GstNavigationQueryType")
  (parameters
    '("GstQuery*" "query")
  )
)

(define-function navigation_query_new_commands
  (c-name "gst_navigation_query_new_commands")
  (caller-owns-return #t)
  (return-type "GstQuery*")
)

(define-function navigation_query_set_commands
  (c-name "gst_navigation_query_set_commands")
  (return-type "none")
  (parameters
    '("GstQuery*" "query")
    '("gint" "n_cmds")
  )
  (varargs #t)
)

(define-function navigation_query_set_commandsv
  (c-name "gst_navigation_query_set_commandsv")
  (return-type "none")
  (parameters
    '("GstQuery*" "query")
    '("gint" "n_cmds")
    '("GstNavigationCommand*" "cmds")
  )
)

(define-function navigation_query_parse_commands_length
  (c-name "gst_navigation_query_parse_commands_length")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
    '("guint*" "n_cmds")
  )
)

(define-function navigation_query_parse_commands_nth
  (c-name "gst_navigation_query_parse_commands_nth")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
    '("guint" "nth")
    '("GstNavigationCommand*" "cmd")
  )
)

(define-function navigation_query_new_angles
  (c-name "gst_navigation_query_new_angles")
  (caller-owns-return #t)
  (return-type "GstQuery*")
)

(define-function navigation_query_set_angles
  (c-name "gst_navigation_query_set_angles")
  (return-type "none")
  (parameters
    '("GstQuery*" "query")
    '("guint" "cur_angle")
    '("guint" "n_angles")
  )
)

(define-function navigation_query_parse_angles
  (c-name "gst_navigation_query_parse_angles")
  (return-type "gboolean")
  (parameters
    '("GstQuery*" "query")
    '("guint*" "cur_angle")
    '("guint*" "n_angles")
  )
)

(define-function navigation_message_get_type
  (c-name "gst_navigation_message_get_type")
  (return-type "GstNavigationMessageType")
  (parameters
    '("GstMessage*" "message")
  )
)

(define-function navigation_message_new_mouse_over
  (c-name "gst_navigation_message_new_mouse_over")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("gboolean" "active")
  )
)

(define-function navigation_message_parse_mouse_over
  (c-name "gst_navigation_message_parse_mouse_over")
  (return-type "gboolean")
  (parameters
    '("GstMessage*" "message")
    '("gboolean*" "active")
  )
)

(define-function navigation_message_new_commands_changed
  (c-name "gst_navigation_message_new_commands_changed")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
  )
)

(define-function navigation_message_new_angles_changed
  (c-name "gst_navigation_message_new_angles_changed")
  (return-type "GstMessage*")
  (caller-owns-return #t)
  (parameters
    '("GstObject*" "src")
    '("guint" "cur_angle")
    '("guint" "n_angles")
  )
)

(define-function navigation_message_parse_angles_changed
  (c-name "gst_navigation_message_parse_angles_changed")
  (return-type "gboolean")
  (parameters
    '("GstMessage*" "message")
    '("guint*" "cur_angle")
    '("guint*" "n_angles")
  )
)

(define-function navigation_event_get_type
  (c-name "gst_navigation_event_get_type")
  (return-type "GstNavigationEventType")
  (parameters
    '("GstEvent*" "event")
  )
)

(define-function navigation_event_parse_key_event
  (c-name "gst_navigation_event_parse_key_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
    '("const-gchar**" "key")
  )
)

(define-function navigation_event_parse_mouse_button_event
  (c-name "gst_navigation_event_parse_mouse_button_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
    '("gint*" "button")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-function navigation_event_parse_mouse_move_event
  (c-name "gst_navigation_event_parse_mouse_move_event")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-function navigation_event_parse_command
  (c-name "gst_navigation_event_parse_command")
  (return-type "gboolean")
  (parameters
    '("GstEvent*" "event")
    '("GstNavigationCommand*" "command")
  )
)

(define-method send_event
  (of-object "GstNavigation")
  (c-name "gst_navigation_send_event")
  (return-type "none")
  (parameters
    '("GstStructure*" "structure")
  )
)

(define-method send_key_event
  (of-object "GstNavigation")
  (c-name "gst_navigation_send_key_event")
  (return-type "none")
  (parameters
    '("const-char*" "event")
    '("const-char*" "key")
  )
)

(define-method send_mouse_event
  (of-object "GstNavigation")
  (c-name "gst_navigation_send_mouse_event")
  (return-type "none")
  (parameters
    '("const-char*" "event")
    '("int" "button")
    '("double" "x")
    '("double" "y")
  )
)

(define-virtual send_event
  (of-object "GstNavigation")
  (return-type "none")
  (parameters
    '("GstStructure*" "structure")
  )
)

(define-method send_command
  (of-object "GstNavigation")
  (c-name "gst_navigation_send_command")
  (return-type "none")
  (parameters
    '("GstNavigationCommand" "command")
  )
)

;; From /opt/gnome/include/gstreamer-0.7/gst/propertyprobe/propertyprobe.h

(define-function gst_property_probe_get_type
  (c-name "gst_property_probe_get_type")
  (return-type "GType")
)

(define-method probe_get_properties
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_get_properties")
  (return-type "const-GList*")
)

(define-method probe_get_property
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_get_property")
  (return-type "const-GParamSpec*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method probe_property
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_probe_property")
  (return-type "none")
  (parameters
    '("const-GParamSpec*" "pspec")
  )
)

(define-method probe_property_name
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_probe_property_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method needs_probe
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_needs_probe")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
  )
)

(define-method needs_probe_name
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_needs_probe_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_values
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_get_values")
  (return-type "GValueArray*")
  (parameters
    '("const-GParamSpec*" "pspec")
  )
)

(define-method probe_get_values_name
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_get_values_name")
  (return-type "GValueArray*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method probe_and_get_values
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_probe_and_get_values")
  (return-type "GValueArray*")
  (parameters
    '("const-GParamSpec*" "pspec")
  )
)

(define-method probe_and_get_values_name
  (of-object "GstPropertyProbe")
  (c-name "gst_property_probe_probe_and_get_values_name")
  (return-type "GValueArray*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-virtual get_properties
  (of-object "GstPropertyProbe")
  (return-type "const-GList*")
)

(define-virtual needs_probe
  (of-object "GstPropertyProbe")
  (return-type "gboolean")
  (parameters
    '("guint" "prop_id")
    '("const-GParamSpec*" "pspec")
  )
)

(define-virtual probe_property
  (of-object "GstPropertyProbe")
  (return-type "none")
  (parameters
    '("guint" "prop_id")
    '("const-GParamSpec*" "pspec")
  )
)

(define-virtual get_values
  (of-object "GstPropertyProbe")
  (return-type "GValueArray*")
  (parameters
    '("guint" "prop_id")
    '("const-GParamSpec*" "pspec")
  )
)


;; From streamvolume.h

(define-method set_volume
  (of-object "GstStreamVolume")
  (c-name "gst_stream_volume_set_volume")
  (return-type "none")
  (parameters
    '("GstStreamVolumeFormat" "format")
    '("gdouble" "val")
  )
)

(define-method get_volume
  (of-object "GstStreamVolume")
  (c-name "gst_stream_volume_get_volume")
  (return-type "gdouble")
  (parameters
    '("GstStreamVolumeFormat" "format")
  )
)

(define-method set_mute
  (of-object "GstStreamVolume")
  (c-name "gst_stream_volume_set_mute")
  (return-type "none")
  (parameters
    '("gboolean" "mute")
  )
)

(define-method get_mute
  (of-object "GstStreamVolume")
  (c-name "gst_stream_volume_get_mute")
  (return-type "gboolean")
)

(define-function stream_volume_convert_volume
  (c-name "gst_stream_volume_convert_volume")
  (return-type "gdouble")
  (parameters
    '("GstStreamVolumeFormat" "from")
    '("GstStreamVolumeFormat" "to")
    '("gdouble" "val")
  )
)


;; From /opt/gnome/include/gstreamer-0.7/gst/tuner/tuner.h

(define-function gst_tuner_get_type
  (c-name "gst_tuner_get_type")
  (return-type "GType")
)

(define-method list_channels
  (of-object "GstTuner")
  (c-name "gst_tuner_list_channels")
  (return-type "const-GList*")
)

(define-method set_channel
  (of-object "GstTuner")
  (c-name "gst_tuner_set_channel")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-method get_channel
  (of-object "GstTuner")
  (c-name "gst_tuner_get_channel")
  (return-type "GstTunerChannel*")
)

(define-method list_norms
  (of-object "GstTuner")
  (c-name "gst_tuner_list_norms")
  (return-type "const-GList*")
)

(define-method set_norm
  (of-object "GstTuner")
  (c-name "gst_tuner_set_norm")
  (return-type "none")
  (parameters
    '("GstTunerNorm*" "channel")
  )
)

(define-method get_norm
  (of-object "GstTuner")
  (c-name "gst_tuner_get_norm")
  (return-type "GstTunerNorm*")
)

(define-method set_frequency
  (of-object "GstTuner")
  (c-name "gst_tuner_set_frequency")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
    '("gulong" "frequency")
  )
)

(define-method get_frequency
  (of-object "GstTuner")
  (c-name "gst_tuner_get_frequency")
  (return-type "gulong")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-method signal_strength
  (of-object "GstTuner")
  (c-name "gst_tuner_signal_strength")
  (return-type "gint")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-method find_norm_by_name
  (of-object "GstTuner")
  (c-name "gst_tuner_find_norm_by_name")
  (return-type "GstTunerNorm*")
  (parameters
    '("gchar*" "norm")
  )
)

(define-method find_channel_by_name
  (of-object "GstTuner")
  (c-name "gst_tuner_find_channel_by_name")
  (return-type "GstTunerChannel*")
  (parameters
    '("gchar*" "channel")
  )
)

(define-method channel_changed
  (of-object "GstTuner")
  (c-name "gst_tuner_channel_changed")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-method norm_changed
  (of-object "GstTuner")
  (c-name "gst_tuner_norm_changed")
  (return-type "none")
  (parameters
    '("GstTunerNorm*" "norm")
  )
)

(define-method frequency_changed
  (of-object "GstTuner")
  (c-name "gst_tuner_frequency_changed")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
    '("gulong" "frequency")
  )
)

(define-method signal_changed
  (of-object "GstTuner")
  (c-name "gst_tuner_signal_changed")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
    '("gint" "signal")
  )
)

(define-virtual list_channels
  (of-object "GstTuner")
  (return-type "const-GList*")
)

(define-virtual set_channel
  (of-object "GstTuner")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-virtual get_channel
  (of-object "GstTuner")
  (return-type "GstTunerChannel*")
)

(define-virtual list_norms
  (of-object "GstTuner")
  (return-type "const-GList*")
)

(define-virtual set_norm
  (of-object "GstTuner")
  (return-type "none")
  (parameters
    '("GstTunerNorm*" "channel")
  )
)

(define-virtual get_norm
  (of-object "GstTuner")
  (return-type "GstTunerNorm*")
)

(define-virtual set_frequency
  (of-object "GstTuner")
  (return-type "none")
  (parameters
    '("GstTunerChannel*" "channel")
    '("gulong" "frequency")
  )
)

(define-virtual get_frequency
  (of-object "GstTuner")
  (return-type "gulong")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

(define-virtual signal_strength
  (of-object "GstTuner")
  (return-type "gint")
  (parameters
    '("GstTunerChannel*" "channel")
  )
)

;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...


;; From videoorientation.h

;;
;; interface definitions ...
;;

(define-interface VideoOrientation
   (in-module "Gst")
   (c-name "GstVideoOrientation")
   (gtype-id "GST_TYPE_VIDEO_ORIENTATION")
   (vtable "GstVideoOrientationClass")
)

(define-function gst_video_orientation_get_type
  (c-name "gst_video_orientation_get_type")
  (return-type "GType")
)

(define-method get_hflip
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_get_hflip")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "flip")
  )
)

(define-method get_vflip
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_get_vflip")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "flip")
  )
)

(define-method get_hcenter
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_get_hcenter")
  (return-type "gboolean")
  (parameters
    '("gint*" "center")
  )
)

(define-method get_vcenter
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_get_vcenter")
  (return-type "gboolean")
  (parameters
    '("gint*" "center")
  )
)

(define-method set_hflip
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_set_hflip")
  (return-type "gboolean")
  (parameters
    '("gboolean" "flip")
  )
)

(define-method set_vflip
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_set_vflip")
  (return-type "gboolean")
  (parameters
    '("gboolean" "flip")
  )
)

(define-method set_hcenter
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_set_hcenter")
  (return-type "gboolean")
  (parameters
    '("gint" "center")
  )
)

(define-method set_vcenter
  (of-object "GstVideoOrientation")
  (c-name "gst_video_orientation_set_vcenter")
  (return-type "gboolean")
  (parameters
    '("gint" "center")
  )
)


