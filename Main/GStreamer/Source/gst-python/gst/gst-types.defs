;; -*- scheme -*-

; object definitions ...

(define-object Object
  (in-module "Gst")
  (parent "GObject")
  (c-name "GstObject")
  (gtype-id "GST_TYPE_OBJECT")
  (fields
   '("int" "__gstrefcount__")
  )
)

(define-object Index
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstIndex")
  (gtype-id "GST_TYPE_INDEX")
)

(define-object Element
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstElement")
  (gtype-id "GST_TYPE_ELEMENT")
)

(define-object Bin
  (in-module "Gst")
  (parent "GstElement")
  (c-name "GstBin")
  (gtype-id "GST_TYPE_BIN")
)

(define-object Clock
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstClock")
  (gtype-id "GST_TYPE_CLOCK")
)

(define-object Bus
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstBus")
  (gtype-id "GST_TYPE_BUS")
)

(define-object Pad
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstPad")
  (gtype-id "GST_TYPE_PAD")
)

(define-object GhostPad
  (in-module "Gst")
  (parent "GstPad")
  (c-name "GstGhostPad")
  (gtype-id "GST_TYPE_GHOST_PAD")
)

(define-object PadTemplate
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstPadTemplate")
  (gtype-id "GST_TYPE_PAD_TEMPLATE")
  (fields
   '("const-gchar*" "name_template")
   '("GstPadDirection" "direction")
   '("GstPadPresence" "presence")
   '("GstCaps*" "caps")
   )
)

(define-object Pipeline
  (in-module "Gst")
  (parent "GstBin")
  (c-name "GstPipeline")
  (gtype-id "GST_TYPE_PIPELINE")
)

(define-object PluginFeature
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstPluginFeature")
  (gtype-id "GST_TYPE_PLUGIN_FEATURE")
)

(define-object IndexFactory
  (in-module "Gst")
  (parent "GstPluginFeature")
  (c-name "GstIndexFactory")
  (gtype-id "GST_TYPE_INDEX_FACTORY")
)

(define-object ElementFactory
  (in-module "Gst")
  (parent "GstPluginFeature")
  (c-name "GstElementFactory")
  (gtype-id "GST_TYPE_ELEMENT_FACTORY")
)

(define-object Registry
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstRegistry")
  (gtype-id "GST_TYPE_REGISTRY")
)

(define-object SystemClock
  (in-module "Gst")
  (parent "GstClock")
  (c-name "GstSystemClock")
  (gtype-id "GST_TYPE_SYSTEM_CLOCK")
)

(define-object Task
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstTask")
  (gtype-id "GST_TYPE_TASK")
)

(define-object TaskPool
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstTaskPool")
  (gtype-id "GST_TYPE_TASK_POOL")
)

(define-object TypeFindFactory
  (in-module "Gst")
  (parent "GstPluginFeature")
  (c-name "GstTypeFindFactory")
  (gtype-id "GST_TYPE_TYPE_FIND_FACTORY")
)

(define-object XML
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstXML")
  (gtype-id "GST_TYPE_XML")
)

(define-object NetClientClock
  (in-module "Gst")
  (parent "GstSystemClock")
  (c-name "GstNetClientClock")
  (gtype-id "GST_TYPE_NET_CLIENT_CLOCK")
)

(define-object NetTimeProvider
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstNetTimeProvider")
  (gtype-id "GST_TYPE_NET_TIME_PROVIDER")
)

;;
;; MiniObject types
;;

(define-miniobject Buffer
  (in-module "Gst")
  (parent "GstMiniObject")
  (c-name "GstBuffer")
  (gtype-id "GST_TYPE_BUFFER")
  (fields
   '("guint8" "data")
   '("guint" "size")
   '("GstClockTime" "timestamp")
   '("GstClockTime" "duration")
   '("guint64" "offset")
   '("guint64" "offset_end")
   '("GstCaps*" "caps")
  )
)

(define-miniobject BufferList
  (in-module "Gst")
  (parent "GstMiniObject")
  (c-name "GstBufferList")
  (gtype-id "GST_TYPE_BUFFER_LIST")
)

(define-miniobject Event
  (in-module "Gst")
  (parent "GstMiniObject")
  (c-name "GstEvent")
  (gtype-id "GST_TYPE_EVENT")
  (fields
   '("GstEventType" "type")
   '("guint64" "timestamp")
   '("GstObject*" "src")
  )
)

(define-miniobject Message
  (in-module "Gst")
  (parent "GstMiniObject")
  (c-name "GstMessage")
  (gtype-id "GST_TYPE_MESSAGE")
  (fields
   '("GstMessageType" "type")
   '("guint64" "timestamp")
   '("GstObject*" "src")
   '("GstStructure*" "structure")
  )
)

(define-miniobject Query
  (in-module "Gst")
  (parent "GstMiniObject")
  (c-name "GstQuery")
  (gtype-id "GST_TYPE_QUERY")
  (fields
   '("GstQueryType" "type")
   '("GstStructure*" "structure")
  )
)


;;
;; Boxed types
;;

(define-boxed Caps
  (in-module "Gst")
  (c-name "GstCaps")
  (gtype-id "GST_TYPE_CAPS")
  (fields
   '("int" "__refcount__")
  )
)

(define-boxed DateTime
  (in-module "Gst")
  (c-name "GstDateTime")
  (gtype-id "GST_TYPE_DATE_TIME")
)

(define-object Plugin
  (in-module "Gst")
  (parent "GstObject")
  (c-name "GstPlugin")
  (gtype-id "GST_TYPE_PLUGIN")
)

(define-boxed Structure
  (in-module "Gst")
  (c-name "GstStructure")
  (gtype-id "GST_TYPE_STRUCTURE")
  (copy-func "gst_structure_copy")
  (release-func "gst_structure_unref")
)

(define-boxed TagList
  (in-module "Gst")
  (c-name "GstTagList")
  (gtype-id "GST_TYPE_TAG_LIST")
)

(define-boxed GError
  (in-module "Gst")
  (c-name "GError")
  (gtype-id "GST_TYPE_G_ERROR")
  (copy-func "g_error_copy")
  (release-func "g_error_free")
  (fields
   '("GQuark" "domain")
   '("gint"   "code")
   '("gchar*" "message"))
)

(define-boxed Date
  (in-module "Gst")
  (c-name "GstDate")
  (gtype-id "GST_TYPE_DATE")
  (fields
   '("gint" "day")
   '("gint" "month")
   '("gint" "year")
  )
)

(define-boxed Segment
  (in-module "Gst")
  (c-name "GstSegment")
  (gtype-id "GST_TYPE_SEGMENT")
  (fields
   '("gdouble" "rate")
   '("gdouble" "abs_rate")
   '("GstFormat" "format")
   '("GstSeekFlags" "flags")
   '("gint64" "start")
   '("gint64" "stop")
   '("gint64" "time")
   '("gint64" "accum")
   '("gint64" "last_stop")
   '("gint64" "duration")
  )
)

(define-boxed IndexEntry
  (in-module "Gst")
  (c-name "GstIndexEntry")
  (gtype-id "GST_TYPE_INDEX_ENTRY")
  (fields
   '("GstIndexEntryType" "type")
   '("gint" "id")
   '("gint" "NASSOCS")
   '("GstAssocFlags" "ASSOC_FLAGS")
   '("const-gchar*" "ID_DESCRIPTION")
  )
)


(define-pointer StaticPadTemplate
  (in-module "Gst")
  (c-name "GstStaticPadTemplate")
  (gtype-id "GST_TYPE_STATIC_PAD_TEMPLATE")
  (fields
   '("gchar*" "name_template")
   '("GstPadDirection" "direction")
   '("GstPadPresence" "presence")
   '("GstStaticCaps" "static_caps")
  )
)

(define-pointer StaticCaps
  (in-module "Gst")
  (c-name "GstStaticCaps")
  (gtype-id "GST_TYPE_STATIC_CAPS")
  (fields
   '("GstCaps" "caps")
   '("const-gchar*" "string")
  )
)

(define-pointer TypeFind
  (in-module "Gst")
  (c-name "GstTypeFind")
  (gtype-id "GST_TYPE_TYPE_FIND")
  (fields
  )
)

;; Enumerations and flags ...

(define-flags BinFlags
  (in-module "Gst")
  (c-name "GstBinFlags")
  (gtype-id "GST_TYPE_BIN_FLAGS")
  (values
    '("last" "GST_BIN_FLAG_LAST")
  )
)

(define-flags BufferFlag
  (in-module "Gst")
  (c-name "GstBufferFlag")
  (gtype-id "GST_TYPE_BUFFER_FLAG")
  (values
    '("readonly" "GST_BUFFER_FLAG_READONLY")
    '("preroll" "GST_BUFFER_FLAG_PREROLL")
    '("discont" "GST_BUFFER_FLAG_DISCONT")
    '("in-caps" "GST_BUFFER_FLAG_IN_CAPS")
    '("gap" "GST_BUFFER_FLAG_GAP")
    '("delta-unit" "GST_BUFFER_FLAG_DELTA_UNIT")
    '("media1" "GST_BUFFER_FLAG_MEDIA1")
    '("media2" "GST_BUFFER_FLAG_MEDIA2")
    '("media3" "GST_BUFFER_FLAG_MEDIA3")
    '("last" "GST_BUFFER_FLAG_LAST")
  )
)

(define-flags BufferCopyFlags
  (in-module "Gst")
  (c-name "GstBufferCopyFlags")
  (gtype-id "GST_TYPE_BUFFER_COPY_FLAGS")
  (values
    '("flags" "GST_BUFFER_COPY_FLAGS")
    '("timestamps" "GST_BUFFER_COPY_TIMESTAMPS")
    '("caps" "GST_BUFFER_COPY_CAPS")
  )
)

(define-enum BufferListItem
  (in-module "Gst")
  (c-name "GstBufferListItem")
  (gtype-id "GST_TYPE_BUFFER_LIST_ITEM")
  (values
    '("continue" "GST_BUFFER_LIST_CONTINUE")
    '("skip-group" "GST_BUFFER_LIST_SKIP_GROUP")
    '("end" "GST_BUFFER_LIST_END")
  )
)

(define-flags BusFlags
  (in-module "Gst")
  (c-name "GstBusFlags")
  (gtype-id "GST_TYPE_BUS_FLAGS")
  (values
    '("flushing" "GST_BUS_FLUSHING")
    '("flag-last" "GST_BUS_FLAG_LAST")
  )
)

(define-enum BusSyncReply
  (in-module "Gst")
  (c-name "GstBusSyncReply")
  (gtype-id "GST_TYPE_BUS_SYNC_REPLY")
  (values
    '("drop" "GST_BUS_DROP")
    '("pass" "GST_BUS_PASS")
    '("async" "GST_BUS_ASYNC")
  )
)

(define-flags CapsFlags
  (in-module "Gst")
  (c-name "GstCapsFlags")
  (gtype-id "GST_TYPE_CAPS_FLAGS")
  (values
    '("y" "GST_CAPS_FLAGS_ANY")
  )
)

(define-enum ClockReturn
  (in-module "Gst")
  (c-name "GstClockReturn")
  (gtype-id "GST_TYPE_CLOCK_RETURN")
  (values
    '("ok" "GST_CLOCK_OK")
    '("early" "GST_CLOCK_EARLY")
    '("unscheduled" "GST_CLOCK_UNSCHEDULED")
    '("busy" "GST_CLOCK_BUSY")
    '("badtime" "GST_CLOCK_BADTIME")
    '("error" "GST_CLOCK_ERROR")
    '("unsupported" "GST_CLOCK_UNSUPPORTED")
  )
)

(define-enum ClockEntryType
  (in-module "Gst")
  (c-name "GstClockEntryType")
  (gtype-id "GST_TYPE_CLOCK_ENTRY_TYPE")
  (values
    '("single" "GST_CLOCK_ENTRY_SINGLE")
    '("periodic" "GST_CLOCK_ENTRY_PERIODIC")
  )
)

(define-flags ClockFlags
  (in-module "Gst")
  (c-name "GstClockFlags")
  (gtype-id "GST_TYPE_CLOCK_FLAGS")
  (values
    '("can-do-single-sync" "GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC")
    '("can-do-single-async" "GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC")
    '("can-do-periodic-sync" "GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC")
    '("can-do-periodic-async" "GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC")
    '("can-set-resolution" "GST_CLOCK_FLAG_CAN_SET_RESOLUTION")
    '("can-set-master" "GST_CLOCK_FLAG_CAN_SET_MASTER")
    '("last" "GST_CLOCK_FLAG_LAST")
  )
)

(define-flags DebugGraphDetails
  (in-module "Gst")
  (c-name "GstDebugGraphDetails")
  (gtype-id "GST_TYPE_DEBUG_GRAPH_DETAILS")
  (values
    '("media-type" "GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE")
    '("caps-details" "GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS")
    '("non-default-params" "GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS")
    '("states" "GST_DEBUG_GRAPH_SHOW_STATES")
    '("all" "GST_DEBUG_GRAPH_SHOW_ALL")
  )
)

(define-flags ElementFlags
  (in-module "Gst")
  (c-name "GstElementFlags")
  (gtype-id "GST_TYPE_ELEMENT_FLAGS")
  (values
    '("locked-state" "GST_ELEMENT_LOCKED_STATE")
    '("is-sink" "GST_ELEMENT_IS_SINK")
    '("unparenting" "GST_ELEMENT_UNPARENTING")
    '("flag-last" "GST_ELEMENT_FLAG_LAST")
  )
)

(define-flags ParamFlags
  (in-module "Gst")
  (c-name "GstParamFlags")
  (values
    '("controllable" "GST_PARAM_CONTROLLABLE")
    '("mutable-ready" "GST_PARAM_MUTABLE_READY")
    '("mutable-paused" "GST_PARAM_MUTABLE_PAUSED")
    '("mutable-playing" "GST_PARAM_MUTABLE_PLAYING")
    '("user-shift" "GST_PARAM_USER_SHIFT")
  )
)

(define-enum CoreError
  (in-module "Gst")
  (c-name "GstCoreError")
  (gtype-id "GST_TYPE_CORE_ERROR")
  (values
    '("failed" "GST_CORE_ERROR_FAILED")
    '("too-lazy" "GST_CORE_ERROR_TOO_LAZY")
    '("not-implemented" "GST_CORE_ERROR_NOT_IMPLEMENTED")
    '("state-change" "GST_CORE_ERROR_STATE_CHANGE")
    '("pad" "GST_CORE_ERROR_PAD")
    '("thread" "GST_CORE_ERROR_THREAD")
    '("negotiation" "GST_CORE_ERROR_NEGOTIATION")
    '("event" "GST_CORE_ERROR_EVENT")
    '("seek" "GST_CORE_ERROR_SEEK")
    '("caps" "GST_CORE_ERROR_CAPS")
    '("tag" "GST_CORE_ERROR_TAG")
    '("missing-plugin" "GST_CORE_ERROR_MISSING_PLUGIN")
    '("clock" "GST_CORE_ERROR_CLOCK")
    '("disabled" "GST_CORE_ERROR_DISABLED")
    '("num-errors" "GST_CORE_ERROR_NUM_ERRORS")
  )
)

(define-enum LibraryError
  (in-module "Gst")
  (c-name "GstLibraryError")
  (gtype-id "GST_TYPE_LIBRARY_ERROR")
  (values
    '("failed" "GST_LIBRARY_ERROR_FAILED")
    '("too-lazy" "GST_LIBRARY_ERROR_TOO_LAZY")
    '("init" "GST_LIBRARY_ERROR_INIT")
    '("shutdown" "GST_LIBRARY_ERROR_SHUTDOWN")
    '("settings" "GST_LIBRARY_ERROR_SETTINGS")
    '("encode" "GST_LIBRARY_ERROR_ENCODE")
    '("num-errors" "GST_LIBRARY_ERROR_NUM_ERRORS")
  )
)

(define-enum ResourceError
  (in-module "Gst")
  (c-name "GstResourceError")
  (gtype-id "GST_TYPE_RESOURCE_ERROR")
  (values
    '("failed" "GST_RESOURCE_ERROR_FAILED")
    '("too-lazy" "GST_RESOURCE_ERROR_TOO_LAZY")
    '("not-found" "GST_RESOURCE_ERROR_NOT_FOUND")
    '("busy" "GST_RESOURCE_ERROR_BUSY")
    '("open-read" "GST_RESOURCE_ERROR_OPEN_READ")
    '("open-write" "GST_RESOURCE_ERROR_OPEN_WRITE")
    '("open-read-write" "GST_RESOURCE_ERROR_OPEN_READ_WRITE")
    '("close" "GST_RESOURCE_ERROR_CLOSE")
    '("read" "GST_RESOURCE_ERROR_READ")
    '("write" "GST_RESOURCE_ERROR_WRITE")
    '("seek" "GST_RESOURCE_ERROR_SEEK")
    '("sync" "GST_RESOURCE_ERROR_SYNC")
    '("settings" "GST_RESOURCE_ERROR_SETTINGS")
    '("no-space-left" "GST_RESOURCE_ERROR_NO_SPACE_LEFT")
    '("num-errors" "GST_RESOURCE_ERROR_NUM_ERRORS")
  )
)

(define-enum StreamError
  (in-module "Gst")
  (c-name "GstStreamError")
  (gtype-id "GST_TYPE_STREAM_ERROR")
  (values
    '("failed" "GST_STREAM_ERROR_FAILED")
    '("too-lazy" "GST_STREAM_ERROR_TOO_LAZY")
    '("not-implemented" "GST_STREAM_ERROR_NOT_IMPLEMENTED")
    '("type-not-found" "GST_STREAM_ERROR_TYPE_NOT_FOUND")
    '("wrong-type" "GST_STREAM_ERROR_WRONG_TYPE")
    '("codec-not-found" "GST_STREAM_ERROR_CODEC_NOT_FOUND")
    '("decode" "GST_STREAM_ERROR_DECODE")
    '("encode" "GST_STREAM_ERROR_ENCODE")
    '("demux" "GST_STREAM_ERROR_DEMUX")
    '("mux" "GST_STREAM_ERROR_MUX")
    '("format" "GST_STREAM_ERROR_FORMAT")
    '("decrypt" "GST_STREAM_ERROR_DECRYPT")
    '("decrypt-nokey" "GST_STREAM_ERROR_DECRYPT_NOKEY")
    '("num-errors" "GST_STREAM_ERROR_NUM_ERRORS")
  )
)

(define-flags EventTypeFlags
  (in-module "Gst")
  (c-name "GstEventTypeFlags")
  (gtype-id "GST_TYPE_EVENT_TYPE_FLAGS")
  (values
    '("upstream" "GST_EVENT_TYPE_UPSTREAM")
    '("downstream" "GST_EVENT_TYPE_DOWNSTREAM")
    '("serialized" "GST_EVENT_TYPE_SERIALIZED")
  )
)

(define-enum EventType
  (in-module "Gst")
  (c-name "GstEventType")
  (gtype-id "GST_TYPE_EVENT_TYPE")
  (values
    '("unknown" "GST_EVENT_UNKNOWN")
    '("flush-start" "GST_EVENT_FLUSH_START")
    '("flush-stop" "GST_EVENT_FLUSH_STOP")
    '("eos" "GST_EVENT_EOS")
    '("newsegment" "GST_EVENT_NEWSEGMENT")
    '("tag" "GST_EVENT_TAG")
    '("filler" "GST_EVENT_FILLER")
    '("buffersize" "GST_EVENT_BUFFERSIZE")
    '("sink-message" "GST_EVENT_SINK_MESSAGE")
    '("qos" "GST_EVENT_QOS")
    '("seek" "GST_EVENT_SEEK")
    '("navigation" "GST_EVENT_NAVIGATION")
    '("latency" "GST_EVENT_LATENCY")
    '("step" "GST_EVENT_STEP")
    '("custom-upstream" "GST_EVENT_CUSTOM_UPSTREAM")
    '("custom-downstream" "GST_EVENT_CUSTOM_DOWNSTREAM")
    '("custom-downstream-oob" "GST_EVENT_CUSTOM_DOWNSTREAM_OOB")
    '("custom-both" "GST_EVENT_CUSTOM_BOTH")
    '("custom-both-oob" "GST_EVENT_CUSTOM_BOTH_OOB")
  )
)

(define-enum SeekType
  (in-module "Gst")
  (c-name "GstSeekType")
  (gtype-id "GST_TYPE_SEEK_TYPE")
  (values
    '("none" "GST_SEEK_TYPE_NONE")
    '("cur" "GST_SEEK_TYPE_CUR")
    '("set" "GST_SEEK_TYPE_SET")
    '("end" "GST_SEEK_TYPE_END")
  )
)

(define-flags SeekFlags
  (in-module "Gst")
  (c-name "GstSeekFlags")
  (gtype-id "GST_TYPE_SEEK_FLAGS")
  (values
    '("none" "GST_SEEK_FLAG_NONE")
    '("flush" "GST_SEEK_FLAG_FLUSH")
    '("accurate" "GST_SEEK_FLAG_ACCURATE")
    '("key-unit" "GST_SEEK_FLAG_KEY_UNIT")
    '("segment" "GST_SEEK_FLAG_SEGMENT")
    '("skip" "GST_SEEK_FLAG_SKIP")
  )
)

(define-enum Format
  (in-module "Gst")
  (c-name "GstFormat")
  (gtype-id "GST_TYPE_FORMAT")
  (values
    '("undefined" "GST_FORMAT_UNDEFINED")
    '("default" "GST_FORMAT_DEFAULT")
    '("bytes" "GST_FORMAT_BYTES")
    '("time" "GST_FORMAT_TIME")
    '("buffers" "GST_FORMAT_BUFFERS")
    '("percent" "GST_FORMAT_PERCENT")
  )
)

(define-enum IndexCertainty
  (in-module "Gst")
  (c-name "GstIndexCertainty")
  (gtype-id "GST_TYPE_INDEX_CERTAINTY")
  (values
    '("unknown" "GST_INDEX_UNKNOWN")
    '("certain" "GST_INDEX_CERTAIN")
    '("fuzzy" "GST_INDEX_FUZZY")
  )
)

(define-enum IndexEntryType
  (in-module "Gst")
  (c-name "GstIndexEntryType")
  (gtype-id "GST_TYPE_INDEX_ENTRY_TYPE")
  (values
    '("id" "GST_INDEX_ENTRY_ID")
    '("association" "GST_INDEX_ENTRY_ASSOCIATION")
    '("object" "GST_INDEX_ENTRY_OBJECT")
    '("format" "GST_INDEX_ENTRY_FORMAT")
  )
)

(define-enum IndexLookupMethod
  (in-module "Gst")
  (c-name "GstIndexLookupMethod")
  (gtype-id "GST_TYPE_INDEX_LOOKUP_METHOD")
  (values
    '("exact" "GST_INDEX_LOOKUP_EXACT")
    '("before" "GST_INDEX_LOOKUP_BEFORE")
    '("after" "GST_INDEX_LOOKUP_AFTER")
  )
)

(define-flags AssocFlags
  (in-module "Gst")
  (c-name "GstAssocFlags")
  (gtype-id "GST_TYPE_ASSOC_FLAGS")
  (values
    '("none" "GST_ASSOCIATION_FLAG_NONE")
    '("key-unit" "GST_ASSOCIATION_FLAG_KEY_UNIT")
    '("delta-unit" "GST_ASSOCIATION_FLAG_DELTA_UNIT")
    '("last" "GST_ASSOCIATION_FLAG_LAST")
  )
)

(define-enum IndexResolverMethod
  (in-module "Gst")
  (c-name "GstIndexResolverMethod")
  (gtype-id "GST_TYPE_INDEX_RESOLVER_METHOD")
  (values
    '("custom" "GST_INDEX_RESOLVER_CUSTOM")
    '("gtype" "GST_INDEX_RESOLVER_GTYPE")
    '("path" "GST_INDEX_RESOLVER_PATH")
  )
)

(define-flags IndexFlags
  (in-module "Gst")
  (c-name "GstIndexFlags")
  (gtype-id "GST_TYPE_INDEX_FLAGS")
  (values
    '("writable" "GST_INDEX_WRITABLE")
    '("readable" "GST_INDEX_READABLE")
    '("flag-last" "GST_INDEX_FLAG_LAST")
  )
)

(define-enum DebugLevel
  (in-module "Gst")
  (c-name "GstDebugLevel")
  (gtype-id "GST_TYPE_DEBUG_LEVEL")
  (values
    '("none" "GST_LEVEL_NONE")
    '("error" "GST_LEVEL_ERROR")
    '("warning" "GST_LEVEL_WARNING")
    '("info" "GST_LEVEL_INFO")
    '("debug" "GST_LEVEL_DEBUG")
    '("log" "GST_LEVEL_LOG")
    '("fixme" "GST_LEVEL_FIXME")
    '("trace" "GST_LEVEL_TRACE")
    '("memdump" "GST_LEVEL_MEMDUMP")
    '("count" "GST_LEVEL_COUNT")
  )
)

(define-enum DebugColorFlags
  (in-module "Gst")
  (c-name "GstDebugColorFlags")
  (gtype-id "GST_TYPE_DEBUG_COLOR_FLAGS")
  (values
    '("fg-black" "GST_DEBUG_FG_BLACK")
    '("fg-red" "GST_DEBUG_FG_RED")
    '("fg-green" "GST_DEBUG_FG_GREEN")
    '("fg-yellow" "GST_DEBUG_FG_YELLOW")
    '("fg-blue" "GST_DEBUG_FG_BLUE")
    '("fg-magenta" "GST_DEBUG_FG_MAGENTA")
    '("fg-cyan" "GST_DEBUG_FG_CYAN")
    '("fg-white" "GST_DEBUG_FG_WHITE")
    '("bg-black" "GST_DEBUG_BG_BLACK")
    '("bg-red" "GST_DEBUG_BG_RED")
    '("bg-green" "GST_DEBUG_BG_GREEN")
    '("bg-yellow" "GST_DEBUG_BG_YELLOW")
    '("bg-blue" "GST_DEBUG_BG_BLUE")
    '("bg-magenta" "GST_DEBUG_BG_MAGENTA")
    '("bg-cyan" "GST_DEBUG_BG_CYAN")
    '("bg-white" "GST_DEBUG_BG_WHITE")
    '("bold" "GST_DEBUG_BOLD")
    '("underline" "GST_DEBUG_UNDERLINE")
  )
)

(define-enum IteratorResult
  (in-module "Gst")
  (c-name "GstIteratorResult")
  (gtype-id "GST_TYPE_ITERATOR_RESULT")
  (values
    '("done" "GST_ITERATOR_DONE")
    '("ok" "GST_ITERATOR_OK")
    '("resync" "GST_ITERATOR_RESYNC")
    '("error" "GST_ITERATOR_ERROR")
  )
)

(define-enum IteratorItem
  (in-module "Gst")
  (c-name "GstIteratorItem")
  (gtype-id "GST_TYPE_ITERATOR_ITEM")
  (values
    '("skip" "GST_ITERATOR_ITEM_SKIP")
    '("pass" "GST_ITERATOR_ITEM_PASS")
    '("end" "GST_ITERATOR_ITEM_END")
  )
)

(define-flags MessageType
  (in-module "Gst")
  (c-name "GstMessageType")
  (gtype-id "GST_TYPE_MESSAGE_TYPE")
  (values
    '("unknown" "GST_MESSAGE_UNKNOWN")
    '("eos" "GST_MESSAGE_EOS")
    '("error" "GST_MESSAGE_ERROR")
    '("warning" "GST_MESSAGE_WARNING")
    '("info" "GST_MESSAGE_INFO")
    '("tag" "GST_MESSAGE_TAG")
    '("buffering" "GST_MESSAGE_BUFFERING")
    '("state-changed" "GST_MESSAGE_STATE_CHANGED")
    '("state-dirty" "GST_MESSAGE_STATE_DIRTY")
    '("step-done" "GST_MESSAGE_STEP_DONE")
    '("clock-provide" "GST_MESSAGE_CLOCK_PROVIDE")
    '("clock-lost" "GST_MESSAGE_CLOCK_LOST")
    '("new-clock" "GST_MESSAGE_NEW_CLOCK")
    '("structure-change" "GST_MESSAGE_STRUCTURE_CHANGE")
    '("stream-status" "GST_MESSAGE_STREAM_STATUS")
    '("application" "GST_MESSAGE_APPLICATION")
    '("element" "GST_MESSAGE_ELEMENT")
    '("segment-start" "GST_MESSAGE_SEGMENT_START")
    '("segment-done" "GST_MESSAGE_SEGMENT_DONE")
    '("duration" "GST_MESSAGE_DURATION")
    '("latency" "GST_MESSAGE_LATENCY")
    '("async-start" "GST_MESSAGE_ASYNC_START")
    '("async-done" "GST_MESSAGE_ASYNC_DONE")
    '("request-state" "GST_MESSAGE_REQUEST_STATE")
    '("step-start" "GST_MESSAGE_STEP_START")
    '("qos" "GST_MESSAGE_QOS")
    '("any" "GST_MESSAGE_ANY")
  )
)

(define-enum StructureChangeType
  (in-module "Gst")
  (c-name "GstStructureChangeType")
  (gtype-id "GST_TYPE_STRUCTURE_CHANGE_TYPE")
  (values
    '("link" "GST_STRUCTURE_CHANGE_TYPE_PAD_LINK")
    '("unlink" "GST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK")
  )
)

(define-enum StreamStatusType
  (in-module "Gst")
  (c-name "GstStreamStatusType")
  (gtype-id "GST_TYPE_STREAM_STATUS_TYPE")
  (values
    '("create" "GST_STREAM_STATUS_TYPE_CREATE")
    '("enter" "GST_STREAM_STATUS_TYPE_ENTER")
    '("leave" "GST_STREAM_STATUS_TYPE_LEAVE")
    '("destroy" "GST_STREAM_STATUS_TYPE_DESTROY")
    '("start" "GST_STREAM_STATUS_TYPE_START")
    '("pause" "GST_STREAM_STATUS_TYPE_PAUSE")
    '("stop" "GST_STREAM_STATUS_TYPE_STOP")
  )
)

(define-flags MiniObjectFlags
  (in-module "Gst")
  (c-name "GstMiniObjectFlags")
  (gtype-id "GST_TYPE_MINI_OBJECT_FLAGS")
  (values
    '("readonly" "GST_MINI_OBJECT_FLAG_READONLY")
    '("last" "GST_MINI_OBJECT_FLAG_LAST")
  )
)

(define-flags ObjectFlags
  (in-module "Gst")
  (c-name "GstObjectFlags")
  (gtype-id "GST_TYPE_OBJECT_FLAGS")
  (values
    '("disposing" "GST_OBJECT_DISPOSING")
    '("floating" "GST_OBJECT_FLOATING")
    '("flag-last" "GST_OBJECT_FLAG_LAST")
  )
)

(define-enum PadLinkReturn
  (in-module "Gst")
  (c-name "GstPadLinkReturn")
  (gtype-id "GST_TYPE_PAD_LINK_RETURN")
  (values
    '("ok" "GST_PAD_LINK_OK")
    '("wrong-hierarchy" "GST_PAD_LINK_WRONG_HIERARCHY")
    '("was-linked" "GST_PAD_LINK_WAS_LINKED")
    '("wrong-direction" "GST_PAD_LINK_WRONG_DIRECTION")
    '("noformat" "GST_PAD_LINK_NOFORMAT")
    '("nosched" "GST_PAD_LINK_NOSCHED")
    '("refused" "GST_PAD_LINK_REFUSED")
  )
)

(define-enum FlowReturn
  (in-module "Gst")
  (c-name "GstFlowReturn")
  (gtype-id "GST_TYPE_FLOW_RETURN")
  (values
    '("custom-success-2" "GST_FLOW_CUSTOM_SUCCESS_2")
    '("custom-success-1" "GST_FLOW_CUSTOM_SUCCESS_1")
    '("custom-success" "GST_FLOW_CUSTOM_SUCCESS")
    '("resend" "GST_FLOW_RESEND")
    '("ok" "GST_FLOW_OK")
    '("not-linked" "GST_FLOW_NOT_LINKED")
    '("wrong-state" "GST_FLOW_WRONG_STATE")
    '("unexpected" "GST_FLOW_UNEXPECTED")
    '("not-negotiated" "GST_FLOW_NOT_NEGOTIATED")
    '("error" "GST_FLOW_ERROR")
    '("not-supported" "GST_FLOW_NOT_SUPPORTED")
    '("custom-error" "GST_FLOW_CUSTOM_ERROR")
    '("custom-error-1" "GST_FLOW_CUSTOM_ERROR_1")
    '("custom-error-2" "GST_FLOW_CUSTOM_ERROR_2")
  )
)

(define-flags PadLinkCheck
  (in-module "Gst")
  (c-name "GstPadLinkCheck")
  (gtype-id "GST_TYPE_PAD_LINK_CHECK")
  (values
    '("nothing" "GST_PAD_LINK_CHECK_NOTHING")
    '("hierarchy" "GST_PAD_LINK_CHECK_HIERARCHY")
    '("template-caps" "GST_PAD_LINK_CHECK_TEMPLATE_CAPS")
    '("caps" "GST_PAD_LINK_CHECK_CAPS")
  )
)

(define-enum ActivateMode
  (in-module "Gst")
  (c-name "GstActivateMode")
  (gtype-id "GST_TYPE_ACTIVATE_MODE")
  (values
    '("none" "GST_ACTIVATE_NONE")
    '("push" "GST_ACTIVATE_PUSH")
    '("pull" "GST_ACTIVATE_PULL")
  )
)

(define-enum PadDirection
  (in-module "Gst")
  (c-name "GstPadDirection")
  (gtype-id "GST_TYPE_PAD_DIRECTION")
  (values
    '("unknown" "GST_PAD_UNKNOWN")
    '("src" "GST_PAD_SRC")
    '("sink" "GST_PAD_SINK")
  )
)

(define-flags PadFlags
  (in-module "Gst")
  (c-name "GstPadFlags")
  (gtype-id "GST_TYPE_PAD_FLAGS")
  (values
    '("blocked" "GST_PAD_BLOCKED")
    '("flushing" "GST_PAD_FLUSHING")
    '("in-getcaps" "GST_PAD_IN_GETCAPS")
    '("in-setcaps" "GST_PAD_IN_SETCAPS")
    '("flag-last" "GST_PAD_FLAG_LAST")
  )
)

(define-enum PadPresence
  (in-module "Gst")
  (c-name "GstPadPresence")
  (gtype-id "GST_TYPE_PAD_PRESENCE")
  (values
    '("always" "GST_PAD_ALWAYS")
    '("sometimes" "GST_PAD_SOMETIMES")
    '("request" "GST_PAD_REQUEST")
  )
)

(define-flags PadTemplateFlags
  (in-module "Gst")
  (c-name "GstPadTemplateFlags")
  (gtype-id "GST_TYPE_PAD_TEMPLATE_FLAGS")
  (values
    '("fixed" "GST_PAD_TEMPLATE_FIXED")
    '("flag-last" "GST_PAD_TEMPLATE_FLAG_LAST")
  )
)

(define-enum ParseError
  (in-module "Gst")
  (c-name "GstParseError")
  (gtype-id "GST_TYPE_PARSE_ERROR")
  (values
    '("syntax" "GST_PARSE_ERROR_SYNTAX")
    '("no-such-element" "GST_PARSE_ERROR_NO_SUCH_ELEMENT")
    '("no-such-property" "GST_PARSE_ERROR_NO_SUCH_PROPERTY")
    '("link" "GST_PARSE_ERROR_LINK")
    '("could-not-set-property" "GST_PARSE_ERROR_COULD_NOT_SET_PROPERTY")
    '("empty-bin" "GST_PARSE_ERROR_EMPTY_BIN")
    '("empty" "GST_PARSE_ERROR_EMPTY")
  )
)

(define-flags ParseFlags
  (in-module "Gst")
  (c-name "GstParseFlags")
  (gtype-id "GST_TYPE_PARSE_FLAGS")
  (values
    '("none" "GST_PARSE_FLAG_NONE")
    '("fatal-errors" "GST_PARSE_FLAG_FATAL_ERRORS")
  )
)

(define-flags PipelineFlags
  (in-module "Gst")
  (c-name "GstPipelineFlags")
  (gtype-id "GST_TYPE_PIPELINE_FLAGS")
  (values
    '("fixed-clock" "GST_PIPELINE_FLAG_FIXED_CLOCK")
    '("last" "GST_PIPELINE_FLAG_LAST")
  )
)

(define-enum PluginError
  (in-module "Gst")
  (c-name "GstPluginError")
  (gtype-id "GST_TYPE_PLUGIN_ERROR")
  (values
    '("module" "GST_PLUGIN_ERROR_MODULE")
    '("dependencies" "GST_PLUGIN_ERROR_DEPENDENCIES")
    '("name-mismatch" "GST_PLUGIN_ERROR_NAME_MISMATCH")
  )
)

(define-flags PluginFlags
  (in-module "Gst")
  (c-name "GstPluginFlags")
  (gtype-id "GST_TYPE_PLUGIN_FLAGS")
  (values
    '("cached" "GST_PLUGIN_FLAG_CACHED")
    '("blacklisted" "GST_PLUGIN_FLAG_BLACKLISTED")
  )
)

(define-enum QueryType
  (in-module "Gst")
  (c-name "GstQueryType")
  (gtype-id "GST_TYPE_QUERY_TYPE")
  (values
    '("none" "GST_QUERY_NONE")
    '("position" "GST_QUERY_POSITION")
    '("duration" "GST_QUERY_DURATION")
    '("latency" "GST_QUERY_LATENCY")
    '("jitter" "GST_QUERY_JITTER")
    '("rate" "GST_QUERY_RATE")
    '("seeking" "GST_QUERY_SEEKING")
    '("segment" "GST_QUERY_SEGMENT")
    '("convert" "GST_QUERY_CONVERT")
    '("formats" "GST_QUERY_FORMATS")
    '("buffering" "GST_QUERY_BUFFERING")
    '("custom" "GST_QUERY_CUSTOM")
    '("uri" "GST_QUERY_URI")
  )
)

(define-enum BufferingMode
  (in-module "Gst")
  (c-name "GstBufferingMode")
  (gtype-id "GST_TYPE_BUFFERING_MODE")
  (values
    '("stream" "GST_BUFFERING_STREAM")
    '("download" "GST_BUFFERING_DOWNLOAD")
    '("timeshift" "GST_BUFFERING_TIMESHIFT")
    '("live" "GST_BUFFERING_LIVE")
  )
)

(define-enum TagMergeMode
  (in-module "Gst")
  (c-name "GstTagMergeMode")
  (gtype-id "GST_TYPE_TAG_MERGE_MODE")
  (values
    '("undefined" "GST_TAG_MERGE_UNDEFINED")
    '("replace-all" "GST_TAG_MERGE_REPLACE_ALL")
    '("replace" "GST_TAG_MERGE_REPLACE")
    '("append" "GST_TAG_MERGE_APPEND")
    '("prepend" "GST_TAG_MERGE_PREPEND")
    '("keep" "GST_TAG_MERGE_KEEP")
    '("keep-all" "GST_TAG_MERGE_KEEP_ALL")
    '("count" "GST_TAG_MERGE_COUNT")
  )
)

(define-enum TagFlag
  (in-module "Gst")
  (c-name "GstTagFlag")
  (gtype-id "GST_TYPE_TAG_FLAG")
  (values
    '("undefined" "GST_TAG_FLAG_UNDEFINED")
    '("meta" "GST_TAG_FLAG_META")
    '("encoded" "GST_TAG_FLAG_ENCODED")
    '("decoded" "GST_TAG_FLAG_DECODED")
    '("count" "GST_TAG_FLAG_COUNT")
  )
)

(define-enum TaskState
  (in-module "Gst")
  (c-name "GstTaskState")
  (gtype-id "GST_TYPE_TASK_STATE")
  (values
    '("started" "GST_TASK_STARTED")
    '("stopped" "GST_TASK_STOPPED")
    '("paused" "GST_TASK_PAUSED")
  )
)

(define-flags AllocTraceFlags
  (in-module "Gst")
  (c-name "GstAllocTraceFlags")
  (gtype-id "GST_TYPE_ALLOC_TRACE_FLAGS")
  (values
    '("live" "GST_ALLOC_TRACE_LIVE")
    '("mem-live" "GST_ALLOC_TRACE_MEM_LIVE")
  )
)

(define-enum TypeFindProbability
  (in-module "Gst")
  (c-name "GstTypeFindProbability")
  (gtype-id "GST_TYPE_TYPE_FIND_PROBABILITY")
  (values
    '("minimum" "GST_TYPE_FIND_MINIMUM")
    '("possible" "GST_TYPE_FIND_POSSIBLE")
    '("likely" "GST_TYPE_FIND_LIKELY")
    '("nearly-certain" "GST_TYPE_FIND_NEARLY_CERTAIN")
    '("maximum" "GST_TYPE_FIND_MAXIMUM")
  )
)

(define-enum State
  (in-module "Gst")
  (c-name "GstState")
  (gtype-id "GST_TYPE_STATE")
  (values
    '("void-pending" "GST_STATE_VOID_PENDING")
    '("null" "GST_STATE_NULL")
    '("ready" "GST_STATE_READY")
    '("paused" "GST_STATE_PAUSED")
    '("playing" "GST_STATE_PLAYING")
  )
)

(define-enum StateChangeReturn
  (in-module "Gst")
  (c-name "GstStateChangeReturn")
  (gtype-id "GST_TYPE_STATE_CHANGE_RETURN")
  (values
    '("failure" "GST_STATE_CHANGE_FAILURE")
    '("success" "GST_STATE_CHANGE_SUCCESS")
    '("async" "GST_STATE_CHANGE_ASYNC")
    '("no-preroll" "GST_STATE_CHANGE_NO_PREROLL")
  )
)

(define-enum StateChange
  (in-module "Gst")
  (c-name "GstStateChange")
  (gtype-id "GST_TYPE_STATE_CHANGE")
  (values
    '("null-to-ready" "GST_STATE_CHANGE_NULL_TO_READY")
    '("ready-to-paused" "GST_STATE_CHANGE_READY_TO_PAUSED")
    '("paused-to-playing" "GST_STATE_CHANGE_PAUSED_TO_PLAYING")
    '("playing-to-paused" "GST_STATE_CHANGE_PLAYING_TO_PAUSED")
    '("paused-to-ready" "GST_STATE_CHANGE_PAUSED_TO_READY")
    '("ready-to-null" "GST_STATE_CHANGE_READY_TO_NULL")
  )
)

(define-enum Rank
  (in-module "Gst")
  (c-name "GstRank")
  (gtype-id "GST_TYPE_RANK")
  (values
    '("none" "GST_RANK_NONE")
    '("marginal" "GST_RANK_MARGINAL")
    '("secondary" "GST_RANK_SECONDARY")
    '("primary" "GST_RANK_PRIMARY")
  )
)

(define-enum URIType
  (in-module "Gst")
  (c-name "GstURIType")
  (gtype-id "GST_TYPE_URI_TYPE")
  (values
    '("unknown" "GST_URI_UNKNOWN")
    '("sink" "GST_URI_SINK")
    '("src" "GST_URI_SRC")
  )
)

(define-enum SearchMode
  (in-module "Gst")
  (c-name "GstSearchMode")
  (gtype-id "GST_TYPE_SEARCH_MODE")
  (values
    '("exact" "GST_SEARCH_MODE_EXACT")
    '("before" "GST_SEARCH_MODE_BEFORE")
    '("after" "GST_SEARCH_MODE_AFTER")
  )
)

(define-interface URIHandler
   (in-module "Gst")
   (c-name "GstURIHandler")
   (gtype-id "GST_TYPE_URI_HANDLER")
   (vtable "GstURIHandlerInterface")
)

(define-interface TagSetter
   (in-module "Gst")
   (c-name "GstTagSetter")
   (gtype-id "GST_TYPE_TAG_SETTER")
)

(define-interface ImplementsInterface
   (in-module "Gst")
   (c-name "GstImplementsInterface")
   (gtype-id "GST_TYPE_IMPLEMENTS_INTERFACE")
   (vtable "GstImplementsInterfaceClass")
)

(define-interface Preset
   (in-module "Gst")
   (c-name "GstPreset")
   (gtype-id "GST_TYPE_PRESET")
)
