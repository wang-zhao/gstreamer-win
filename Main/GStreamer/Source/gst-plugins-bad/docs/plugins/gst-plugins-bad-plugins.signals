<SIGNAL>
<NAME>GstSwitch::block</NAME>
<RETURNS>gint64</RETURNS>
<FLAGS>l</FLAGS>
GstSwitch *gstswitch
</SIGNAL>

<SIGNAL>
<NAME>GstSwitch::switch</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstSwitch *gstswitch
gchar *arg1
gint64  arg2
gint64  arg3
</SIGNAL>

<SIGNAL>
<NAME>GstCDAudio::track-change</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstCDAudio *gstcdaudio
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstInputSelector::block</NAME>
<RETURNS>gint64</RETURNS>
<FLAGS>la</FLAGS>
GstInputSelector *gstinputselector
</SIGNAL>

<SIGNAL>
<NAME>GstInputSelector::switch</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstInputSelector *gstinputselector
GstPad *arg1
gint64  arg2
gint64  arg3
</SIGNAL>

<SIGNAL>
<NAME>GstDivxEnc::frame-encoded</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDivxEnc *gstdivxenc
</SIGNAL>

<SIGNAL>
<NAME>GstDCCPClientSrc::connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GstDCCPClientSrc *gstdccpclientsrc
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDCCPServerSink::connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GstDCCPServerSink *gstdccpserversink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDCCPClientSink::connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GstDCCPClientSink *gstdccpclientsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDCCPServerSrc::connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GstDCCPServerSrc *gstdccpserversrc
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::img-done</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GstCameraBin *gstcamerabin
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::user-image-res</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
gint  arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::user-pause</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::user-res-fps</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
gint  arg1
gint  arg2
gint  arg3
gint  arg4
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::user-start</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::user-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::capture-pause</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::capture-start</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::capture-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::image-done</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GstCameraBin *gstcamerabin
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::set-image-resolution</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
gint  arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin::set-video-resolution-fps</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin *gstcamerabin
gint  arg1
gint  arg2
gint  arg3
gint  arg4
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDTMFMux::locking</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDTMFMux *gstrtpdtmfmux
GstPad *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDTMFMux::unlocked</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDTMFMux *gstrtpdtmfmux
GstPad *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::get-internal-session</NAME>
<RETURNS>RTPSession*</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-bye-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-bye-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-new-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-npt-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-sender-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-active</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-collision</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-sdes</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-validated</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::reset-sync</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::handle-sync</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
GstStructure *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::on-npt-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpPtDemux *gstrtpptdemux
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::new-payload-type</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::payload-type-change</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>a</FLAGS>
GstRtpSession *gstrtpsession
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-bye-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-bye-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-new-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-sender-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-active</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-collision</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-sdes</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-validated</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::clear-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::new-ssrc-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::removed-ssrc-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstFPSDisplaySink::fps-measurements</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstFPSDisplaySink *gstfpsdisplaysink
gdouble  arg1
gdouble  arg2
gdouble  arg3
</SIGNAL>

<SIGNAL>
<NAME>GstShmSink::client-connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstShmSink *gstshmsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstShmSink::client-disconnected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstShmSink *gstshmsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin2::start-capture</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin2 *gstcamerabin2
</SIGNAL>

<SIGNAL>
<NAME>GstCameraBin2::stop-capture</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstCameraBin2 *gstcamerabin2
</SIGNAL>

