/* vim: set filetype=c: */
% ClassName
GstTagDemux
% TYPE_CLASS_NAME
GST_TYPE_TAG_DEMUX
% pads
sinkpad-simple srcpad-simple
% pkg-config
gstreamer-tag-0.10
% includes
#include <gst/tag/gsttagdemux.h>
% prototypes
static gboolean
gst_replace_identify_tag (GstTagDemux * demux,
    GstBuffer * buffer, gboolean start_tag, guint * tag_size);
static GstTagDemuxResult
gst_replace_parse_tag (GstTagDemux * demux,
    GstBuffer * buffer,
    gboolean start_tag, guint * tag_size, GstTagList ** tags);
static GstTagList *gst_replace_merge_tags (GstTagDemux * demux,
    const GstTagList * start_tags, const GstTagList * end_tags);
% declare-class
  GstTagDemuxClass *tagdemux_class = GST_TAG_DEMUX_CLASS (klass);
% set-methods
  tagdemux_class->identify_tag = GST_DEBUG_FUNCPTR (gst_replace_identify_tag);
  tagdemux_class->parse_tag = GST_DEBUG_FUNCPTR (gst_replace_parse_tag);
  tagdemux_class->merge_tags = GST_DEBUG_FUNCPTR (gst_replace_merge_tags);
% methods


static gboolean
gst_replace_identify_tag (GstTagDemux * demux,
    GstBuffer * buffer, gboolean start_tag, guint * tag_size)
{

  return FALSE;
}

static GstTagDemuxResult
gst_replace_parse_tag (GstTagDemux * demux,
    GstBuffer * buffer,
    gboolean start_tag, guint * tag_size, GstTagList ** tags)
{

  return GST_TAG_DEMUX_RESULT_BROKEN_TAG;
}

static GstTagList *
gst_replace_merge_tags (GstTagDemux * demux,
    const GstTagList * start_tags, const GstTagList * end_tags)
{

  return NULL;
}
% end
